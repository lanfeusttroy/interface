<!DOCTYPE html>
<html prefix="og: http://ogp.me/ns#" style="" class="js csstransforms3d csstransitions whatinput-types-initial wf-opensans-n4-active wf-opensans-n7-active wf-opensans-n5-active wf-breeserif-n4-active wf-active wf-lato-n8-active wf-lato-n7-active wf-lato-n5-active wf-lato-n4-active whatinput-types-mouse" data-whatinput="mouse" data-whatintent="mouse" lang="en-US"><head><script type="text/javascript" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/form"></script><link rel="stylesheet" type="text/css" href="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/f10f9.css" media="all">

<meta charset="UTF-8">

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!-- <link rel="stylesheet" type="text/css" href="https://www.pyimagesearch.com/static/css/header_fix.css" media="all"/> -->
<link rel="pingback" href="https://www.pyimagesearch.com/xmlrpc.php">
<link rel="shortcut icon" href="https://www.pyimagesearch.com/wp-content/themes/canvas/favicon.ico">

<!-- Always force latest IE rendering engine (even in intranet) & Chrome Frame -->
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

<!--  Mobile viewport scale -->
<meta content="initial-scale=1.0, maximum-scale=1.0, user-scalable=yes" name="viewport">

<!-- This site is optimized with the Yoast SEO plugin v7.0.3 - https://yoast.com/wordpress/plugins/seo/ -->
<title>YOLO object detection with OpenCV - PyImageSearch</title>
<meta name="description" content="In this guide you will learn how to use the YOLO object detector to detect objects in images and video using OpenCV, Python, and Deep Learning.">
<link rel="canonical" href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/">
<meta property="og:locale" content="en_US">
<meta property="og:type" content="article">
<meta property="og:title" content="YOLO object detection with OpenCV - PyImageSearch">
<meta property="og:description" content="In this guide you will learn how to use the YOLO object detector to detect objects in images and video using OpenCV, Python, and Deep Learning.">
<meta property="og:url" content="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/">
<meta property="og:site_name" content="PyImageSearch">
<meta property="article:tag" content="cnn">
<meta property="article:tag" content="convolutional neural network">
<meta property="article:tag" content="machine learning">
<meta property="article:tag" content="object detection">
<meta property="article:tag" content="yolo">
<meta property="article:section" content="Deep Learning">
<meta property="article:published_time" content="2018-11-12T10:00:55-04:00">
<meta property="article:modified_time" content="2019-02-04T09:39:26-04:00">
<meta property="og:updated_time" content="2019-02-04T09:39:26-04:00">
<meta property="og:image" content="https://s3-us-west-2.amazonaws.com/static.pyimagesearch.com/opencv-yolo/yolo_car_chase_01_output.gif">
<meta property="og:image:secure_url" content="https://s3-us-west-2.amazonaws.com/static.pyimagesearch.com/opencv-yolo/yolo_car_chase_01_output.gif">
<meta property="og:image" content="https://www.pyimagesearch.com/wp-content/uploads/2018/11/yolo_design.jpg">
<meta property="og:image:secure_url" content="https://www.pyimagesearch.com/wp-content/uploads/2018/11/yolo_design.jpg">
<meta property="og:image" content="https://www.pyimagesearch.com/wp-content/uploads/2018/11/yolo_baggage_claim_output.jpg">
<meta property="og:image:secure_url" content="https://www.pyimagesearch.com/wp-content/uploads/2018/11/yolo_baggage_claim_output.jpg">
<meta property="og:image" content="https://www.pyimagesearch.com/wp-content/uploads/2018/11/yolo_living_room_output.jpg">
<meta property="og:image:secure_url" content="https://www.pyimagesearch.com/wp-content/uploads/2018/11/yolo_living_room_output.jpg">
<meta property="og:image" content="https://www.pyimagesearch.com/wp-content/uploads/2018/11/yolo_dining_table_output.jpg">
<meta property="og:image:secure_url" content="https://www.pyimagesearch.com/wp-content/uploads/2018/11/yolo_dining_table_output.jpg">
<meta property="og:image" content="https://www.pyimagesearch.com/wp-content/uploads/2018/11/yolo_soccer_output.jpg">
<meta property="og:image:secure_url" content="https://www.pyimagesearch.com/wp-content/uploads/2018/11/yolo_soccer_output.jpg">
<meta property="og:image" content="https://s3-us-west-2.amazonaws.com/static.pyimagesearch.com/opencv-yolo/yolo_car_chase_02_output.gif">
<meta property="og:image:secure_url" content="https://s3-us-west-2.amazonaws.com/static.pyimagesearch.com/opencv-yolo/yolo_car_chase_02_output.gif">
<meta property="og:image" content="https://s3-us-west-2.amazonaws.com/static.pyimagesearch.com/opencv-yolo/yolo_car_chase_03_output.gif">
<meta property="og:image:secure_url" content="https://s3-us-west-2.amazonaws.com/static.pyimagesearch.com/opencv-yolo/yolo_car_chase_03_output.gif">
<meta property="og:image" content="https://s3-us-west-2.amazonaws.com/static.pyimagesearch.com/opencv-yolo/yolo_overpass_output.gif">
<meta property="og:image:secure_url" content="https://s3-us-west-2.amazonaws.com/static.pyimagesearch.com/opencv-yolo/yolo_overpass_output.gif">
<meta property="og:image" content="https://www.pyimagesearch.com/wp-content/uploads/2018/11/yolo_dl4cv.jpg">
<meta property="og:image:secure_url" content="https://www.pyimagesearch.com/wp-content/uploads/2018/11/yolo_dl4cv.jpg">
<!-- / Yoast SEO plugin. -->

<link rel="dns-prefetch" href="https://a.optmnstr.com/">
<link rel="dns-prefetch" href="https://s.w.org/">
<link rel="alternate" type="application/rss+xml" title="PyImageSearch » Feed" href="http://feeds.feedburner.com/Pyimagesearch">
<link rel="alternate" type="application/rss+xml" title="PyImageSearch » Comments Feed" href="https://www.pyimagesearch.com/comments/feed/">
<link rel="alternate" type="application/rss+xml" title="PyImageSearch » YOLO object detection with OpenCV Comments Feed" href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/feed/">
		<div class="fit-vids-style">­<style>               .fluid-width-video-wrapper {                 width: 100%;                              position: relative;                       padding: 0;                            }                                                                                   .fluid-width-video-wrapper iframe,        .fluid-width-video-wrapper object,        .fluid-width-video-wrapper embed {           position: absolute;                       top: 0;                                   left: 0;                                  width: 100%;                              height: 100%;                          }                                       </style></div><script src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/916800548463326.js" async=""></script><script src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/1465896023527386.js" async=""></script><script async="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/fbevents.js"></script><script type="text/javascript" async="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/54220efd7ab7f03f7e000043.js"></script><script type="text/javascript" async="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/4768429.js"></script><script async="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/analytics.js"></script><script type="text/javascript" async="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/mixpanel-2-latest.js"></script><script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.4\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.4\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/www.pyimagesearch.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.9.4"}};
			!function(a,b,c){function d(a,b){var c=String.fromCharCode;l.clearRect(0,0,k.width,k.height),l.fillText(c.apply(this,a),0,0);var d=k.toDataURL();l.clearRect(0,0,k.width,k.height),l.fillText(c.apply(this,b),0,0);var e=k.toDataURL();return d===e}function e(a){var b;if(!l||!l.fillText)return!1;switch(l.textBaseline="top",l.font="600 32px Arial",a){case"flag":return!(b=d([55356,56826,55356,56819],[55356,56826,8203,55356,56819]))&&(b=d([55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447],[55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447]),!b);case"emoji":return b=d([55357,56692,8205,9792,65039],[55357,56692,8203,9792,65039]),!b}return!1}function f(a){var c=b.createElement("script");c.src=a,c.defer=c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var g,h,i,j,k=b.createElement("canvas"),l=k.getContext&&k.getContext("2d");for(j=Array("flag","emoji"),c.supports={everything:!0,everythingExceptFlag:!0},i=0;i<j.length;i++)c.supports[j[i]]=e(j[i]),c.supports.everything=c.supports.everything&&c.supports[j[i]],"flag"!==j[i]&&(c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&c.supports[j[i]]);c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&!c.supports.flag,c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.everything||(h=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",h,!1),a.addEventListener("load",h,!1)):(a.attachEvent("onload",h),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),g=c.source||{},g.concatemoji?f(g.concatemoji):g.wpemoji&&g.twemoji&&(f(g.twemoji),f(g.wpemoji)))}(window,document,window._wpemojiSettings);
		</script><script src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/wp-emoji-release.js" type="text/javascript" defer="defer"></script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>









<!--[if lt IE 9]>
<link href="https://www.pyimagesearch.com/wp-content/themes/canvas/css/non-responsive.css" rel="stylesheet" type="text/css" />
<style type="text/css">.col-full, #wrapper { width: 960px; max-width: 960px; } #inner-wrapper { padding: 0; } body.full-width #header, #nav-container, body.full-width #content, body.full-width #footer-widgets, body.full-width #footer { padding-left: 0; padding-right: 0; } body.fixed-mobile #top, body.fixed-mobile #header-container, body.fixed-mobile #footer-container, body.fixed-mobile #nav-container, body.fixed-mobile #footer-widgets-container { min-width: 960px; padding: 0 1em; } body.full-width #content { width: auto; padding: 0 1em;}</style>
<![endif]-->
<script type="text/javascript" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/df983.js"></script>


<script type="text/javascript">
/* <![CDATA[ */
var CrayonSyntaxSettings = {"version":"_2.7.2_beta","is_admin":"0","ajaxurl":"https:\/\/www.pyimagesearch.com\/wp-admin\/admin-ajax.php","prefix":"crayon-","setting":"crayon-setting","selected":"crayon-setting-selected","changed":"crayon-setting-changed","special":"crayon-setting-special","orig_value":"data-orig-value","debug":""};
var CrayonSyntaxStrings = {"copy":"Press %s to Copy, %s to Paste","minimize":"Click To Expand Code"};
/* ]]> */
</script>
<script type="text/javascript" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/49ed6.js"></script>

<script type="text/javascript" data-cfasync="false" id="omapi-script" async="async" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/api.js"></script>
<script type="text/javascript" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/83e7b.js"></script><style type="text/css">@-webkit-keyframes bounce{0%,20%,50%,80%,to{-webkit-transform:translateY(0);transform:translateY(0)}40%{-webkit-transform:translateY(-30px);transform:translateY(-30px)}60%{-webkit-transform:translateY(-15px);transform:translateY(-15px)}}@keyframes bounce{0%,20%,50%,80%,to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}40%{-webkit-transform:translateY(-30px);-ms-transform:translateY(-30px);transform:translateY(-30px)}60%{-webkit-transform:translateY(-15px);-ms-transform:translateY(-15px);transform:translateY(-15px)}}.om-animation-bounce{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:bounce;animation-name:bounce}@-webkit-keyframes bounceIn{0%{opacity:0;-webkit-transform:scale(.3);transform:scale(.3)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}70%{-webkit-transform:scale(.9);transform:scale(.9)}to{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes bounceIn{0%{opacity:0;-webkit-transform:scale(.3);-ms-transform:scale(.3);transform:scale(.3)}50%{opacity:1;-webkit-transform:scale(1.05);-ms-transform:scale(1.05);transform:scale(1.05)}70%{-webkit-transform:scale(.9);-ms-transform:scale(.9);transform:scale(.9)}to{opacity:1;-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}.om-animation-bounce-in{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceIn;animation-name:bounceIn}@-webkit-keyframes bounceInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}60%{opacity:1;-webkit-transform:translateY(30px);transform:translateY(30px)}80%{-webkit-transform:translateY(-10px);transform:translateY(-10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes bounceInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);-ms-transform:translateY(-2000px);transform:translateY(-2000px)}60%{opacity:1;-webkit-transform:translateY(30px);-ms-transform:translateY(30px);transform:translateY(30px)}80%{-webkit-transform:translateY(-10px);-ms-transform:translateY(-10px);transform:translateY(-10px)}to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}}.om-animation-bounce-in-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInDown;animation-name:bounceInDown}@-webkit-keyframes bounceInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}60%{opacity:1;-webkit-transform:translateX(30px);transform:translateX(30px)}80%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes bounceInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);-ms-transform:translateX(-2000px);transform:translateX(-2000px)}60%{opacity:1;-webkit-transform:translateX(30px);-ms-transform:translateX(30px);transform:translateX(30px)}80%{-webkit-transform:translateX(-10px);-ms-transform:translateX(-10px);transform:translateX(-10px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-bounce-in-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInLeft;animation-name:bounceInLeft}@-webkit-keyframes bounceInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}60%{opacity:1;-webkit-transform:translateX(-30px);transform:translateX(-30px)}80%{-webkit-transform:translateX(10px);transform:translateX(10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes bounceInRight{0%{opacity:0;-webkit-transform:translateX(2000px);-ms-transform:translateX(2000px);transform:translateX(2000px)}60%{opacity:1;-webkit-transform:translateX(-30px);-ms-transform:translateX(-30px);transform:translateX(-30px)}80%{-webkit-transform:translateX(10px);-ms-transform:translateX(10px);transform:translateX(10px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-bounce-in-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInRight;animation-name:bounceInRight}@-webkit-keyframes bounceInUp{0%{opacity:0;-webkit-transform:translateY(2000px);transform:translateY(2000px)}60%{opacity:1;-webkit-transform:translateY(-30px);transform:translateY(-30px)}80%{-webkit-transform:translateY(10px);transform:translateY(10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes bounceInUp{0%{opacity:0;-webkit-transform:translateY(2000px);-ms-transform:translateY(2000px);transform:translateY(2000px)}60%{opacity:1;-webkit-transform:translateY(-30px);-ms-transform:translateY(-30px);transform:translateY(-30px)}80%{-webkit-transform:translateY(10px);-ms-transform:translateY(10px);transform:translateY(10px)}to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}}.om-animation-bounce-in-up{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInUp;animation-name:bounceInUp}@-webkit-keyframes flash{0%,50%,to{opacity:1}25%,75%{opacity:0}}@keyframes flash{0%,50%,to{opacity:1}25%,75%{opacity:0}}.om-animation-flash{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:flash;animation-name:flash}@-webkit-keyframes flip{0%{-webkit-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}40%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}80%{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}to{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}@keyframes flip{0%{-webkit-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-ms-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}40%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-ms-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-ms-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}80%{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-ms-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}to{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-ms-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}.om-animation-flip{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;-ms-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flip;animation-name:flip}@-webkit-keyframes flipInX{0%{-webkit-transform:perspective(800px) rotateX(90deg);transform:perspective(800px) rotateX(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateX(-10deg);transform:perspective(800px) rotateX(-10deg)}70%{-webkit-transform:perspective(800px) rotateX(10deg);transform:perspective(800px) rotateX(10deg)}to{-webkit-transform:perspective(800px) rotateX(0deg);transform:perspective(800px) rotateX(0deg);opacity:1}}@keyframes flipInX{0%{-webkit-transform:perspective(800px) rotateX(90deg);-ms-transform:perspective(800px) rotateX(90deg);transform:perspective(800px) rotateX(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateX(-10deg);-ms-transform:perspective(800px) rotateX(-10deg);transform:perspective(800px) rotateX(-10deg)}70%{-webkit-transform:perspective(800px) rotateX(10deg);-ms-transform:perspective(800px) rotateX(10deg);transform:perspective(800px) rotateX(10deg)}to{-webkit-transform:perspective(800px) rotateX(0deg);-ms-transform:perspective(800px) rotateX(0deg);transform:perspective(800px) rotateX(0deg);opacity:1}}.om-animation-flip-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;-ms-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flipInX;animation-name:flipInX}@-webkit-keyframes flipInY{0%{-webkit-transform:perspective(800px) rotateY(90deg);transform:perspective(800px) rotateY(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateY(-10deg);transform:perspective(800px) rotateY(-10deg)}70%{-webkit-transform:perspective(800px) rotateY(10deg);transform:perspective(800px) rotateY(10deg)}to{-webkit-transform:perspective(800px) rotateY(0deg);transform:perspective(800px) rotateY(0deg);opacity:1}}@keyframes flipInY{0%{-webkit-transform:perspective(800px) rotateY(90deg);-ms-transform:perspective(800px) rotateY(90deg);transform:perspective(800px) rotateY(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateY(-10deg);-ms-transform:perspective(800px) rotateY(-10deg);transform:perspective(800px) rotateY(-10deg)}70%{-webkit-transform:perspective(800px) rotateY(10deg);-ms-transform:perspective(800px) rotateY(10deg);transform:perspective(800px) rotateY(10deg)}to{-webkit-transform:perspective(800px) rotateY(0deg);-ms-transform:perspective(800px) rotateY(0deg);transform:perspective(800px) rotateY(0deg);opacity:1}}.om-animation-flip-side{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;-ms-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flipInY;animation-name:flipInY}@-webkit-keyframes lightSpeedIn{0%{-webkit-transform:translateX(100%) skewX(-30deg);transform:translateX(100%) skewX(-30deg);opacity:0}60%{-webkit-transform:translateX(-20%) skewX(30deg);transform:translateX(-20%) skewX(30deg);opacity:1}80%{-webkit-transform:translateX(0) skewX(-15deg);transform:translateX(0) skewX(-15deg);opacity:1}to{-webkit-transform:translateX(0) skewX(0deg);transform:translateX(0) skewX(0deg);opacity:1}}@keyframes lightSpeedIn{0%{-webkit-transform:translateX(100%) skewX(-30deg);-ms-transform:translateX(100%) skewX(-30deg);transform:translateX(100%) skewX(-30deg);opacity:0}60%{-webkit-transform:translateX(-20%) skewX(30deg);-ms-transform:translateX(-20%) skewX(30deg);transform:translateX(-20%) skewX(30deg);opacity:1}80%{-webkit-transform:translateX(0) skewX(-15deg);-ms-transform:translateX(0) skewX(-15deg);transform:translateX(0) skewX(-15deg);opacity:1}to{-webkit-transform:translateX(0) skewX(0deg);-ms-transform:translateX(0) skewX(0deg);transform:translateX(0) skewX(0deg);opacity:1}}.om-animation-light-speed{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:lightSpeedIn;animation-name:lightSpeedIn;-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}@-webkit-keyframes pulse{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.1);transform:scale(1.1)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes pulse{0%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1)}to{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}.om-animation-pulse{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:pulse;animation-name:pulse}@-webkit-keyframes rollIn{0%{opacity:0;-webkit-transform:translateX(-100%) rotate(-120deg);transform:translateX(-100%) rotate(-120deg)}to{opacity:1;-webkit-transform:translateX(0) rotate(0deg);transform:translateX(0) rotate(0deg)}}@keyframes rollIn{0%{opacity:0;-webkit-transform:translateX(-100%) rotate(-120deg);-ms-transform:translateX(-100%) rotate(-120deg);transform:translateX(-100%) rotate(-120deg)}to{opacity:1;-webkit-transform:translateX(0) rotate(0deg);-ms-transform:translateX(0) rotate(0deg);transform:translateX(0) rotate(0deg)}}.om-animation-roll-in{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rollIn;animation-name:rollIn}@-webkit-keyframes rotateIn{0%{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(-200deg);transform:rotate(-200deg);opacity:0}to{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateIn{0%{-webkit-transform-origin:center center;-ms-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(-200deg);-ms-transform:rotate(-200deg);transform:rotate(-200deg);opacity:0}to{-webkit-transform-origin:center center;-ms-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateIn;animation-name:rotateIn}@-webkit-keyframes rotateInDownLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInDownLeft{0%{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(-90deg);-ms-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-down-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInDownLeft;animation-name:rotateInDownLeft}@-webkit-keyframes rotateInDownRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInDownRight{0%{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-down-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInDownRight;animation-name:rotateInDownRight}@-webkit-keyframes rotateInUpLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInUpLeft{0%{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-up-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInUpLeft;animation-name:rotateInUpLeft}@-webkit-keyframes rotateInUpRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInUpRight{0%{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(-90deg);-ms-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-up-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInUpRight;animation-name:rotateInUpRight}@-webkit-keyframes rubberBand{0%{-webkit-transform:scale(1);transform:scale(1)}30%{-webkit-transform:scaleX(1.25) scaleY(.75);transform:scaleX(1.25) scaleY(.75)}40%{-webkit-transform:scaleX(.75) scaleY(1.25);transform:scaleX(.75) scaleY(1.25)}60%{-webkit-transform:scaleX(1.15) scaleY(.85);transform:scaleX(1.15) scaleY(.85)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes rubberBand{0%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}30%{-webkit-transform:scaleX(1.25) scaleY(.75);-ms-transform:scaleX(1.25) scaleY(.75);transform:scaleX(1.25) scaleY(.75)}40%{-webkit-transform:scaleX(.75) scaleY(1.25);-ms-transform:scaleX(.75) scaleY(1.25);transform:scaleX(.75) scaleY(1.25)}60%{-webkit-transform:scaleX(1.15) scaleY(.85);-ms-transform:scaleX(1.15) scaleY(.85);transform:scaleX(1.15) scaleY(.85)}to{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}.om-animation-rubber-band{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:rubberBand;animation-name:rubberBand}@-webkit-keyframes shake{0%,to{-webkit-transform:translateX(0);transform:translateX(0)}10%,30%,50%,70%,90%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}20%,40%,60%,80%{-webkit-transform:translateX(10px);transform:translateX(10px)}}@keyframes shake{0%,to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}10%,30%,50%,70%,90%{-webkit-transform:translateX(-10px);-ms-transform:translateX(-10px);transform:translateX(-10px)}20%,40%,60%,80%{-webkit-transform:translateX(10px);-ms-transform:translateX(10px);transform:translateX(10px)}}.om-animation-shake{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:shake;animation-name:shake}@-webkit-keyframes slideInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes slideInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);-ms-transform:translateY(-2000px);transform:translateY(-2000px)}to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}}.om-animation-slide-in-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInDown;animation-name:slideInDown}@-webkit-keyframes slideInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes slideInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);-ms-transform:translateX(-2000px);transform:translateX(-2000px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-slide-in-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInLeft;animation-name:slideInLeft}@-webkit-keyframes slideInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes slideInRight{0%{opacity:0;-webkit-transform:translateX(2000px);-ms-transform:translateX(2000px);transform:translateX(2000px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-slide-in-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInRight;animation-name:slideInRight}@-webkit-keyframes swing{20%{-webkit-transform:rotate(15deg);transform:rotate(15deg)}40%{-webkit-transform:rotate(-10deg);transform:rotate(-10deg)}60%{-webkit-transform:rotate(5deg);transform:rotate(5deg)}80%{-webkit-transform:rotate(-5deg);transform:rotate(-5deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@keyframes swing{20%{-webkit-transform:rotate(15deg);-ms-transform:rotate(15deg);transform:rotate(15deg)}40%{-webkit-transform:rotate(-10deg);-ms-transform:rotate(-10deg);transform:rotate(-10deg)}60%{-webkit-transform:rotate(5deg);-ms-transform:rotate(5deg);transform:rotate(5deg)}80%{-webkit-transform:rotate(-5deg);-ms-transform:rotate(-5deg);transform:rotate(-5deg)}to{-webkit-transform:rotate(0deg);-ms-transform:rotate(0deg);transform:rotate(0deg)}}.om-animation-swing{-webkit-animation-duration:1s;animation-duration:1s;-webkit-transform-origin:top center;-ms-transform-origin:top center;transform-origin:top center;-webkit-animation-name:swing;animation-name:swing}@-webkit-keyframes tada{0%{-webkit-transform:scale(1);transform:scale(1)}10%,20%{-webkit-transform:scale(.9) rotate(-3deg);transform:scale(.9) rotate(-3deg)}30%,50%,70%,90%{-webkit-transform:scale(1.1) rotate(3deg);transform:scale(1.1) rotate(3deg)}40%,60%,80%{-webkit-transform:scale(1.1) rotate(-3deg);transform:scale(1.1) rotate(-3deg)}to{-webkit-transform:scale(1) rotate(0);transform:scale(1) rotate(0)}}@keyframes tada{0%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}10%,20%{-webkit-transform:scale(.9) rotate(-3deg);-ms-transform:scale(.9) rotate(-3deg);transform:scale(.9) rotate(-3deg)}30%,50%,70%,90%{-webkit-transform:scale(1.1) rotate(3deg);-ms-transform:scale(1.1) rotate(3deg);transform:scale(1.1) rotate(3deg)}40%,60%,80%{-webkit-transform:scale(1.1) rotate(-3deg);-ms-transform:scale(1.1) rotate(-3deg);transform:scale(1.1) rotate(-3deg)}to{-webkit-transform:scale(1) rotate(0);-ms-transform:scale(1) rotate(0);transform:scale(1) rotate(0)}}.om-animation-tada{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:tada;animation-name:tada}@-webkit-keyframes wobble{0%{-webkit-transform:translateX(0);transform:translateX(0)}15%{-webkit-transform:translateX(-25%) rotate(-5deg);transform:translateX(-25%) rotate(-5deg)}30%{-webkit-transform:translateX(20%) rotate(3deg);transform:translateX(20%) rotate(3deg)}45%{-webkit-transform:translateX(-15%) rotate(-3deg);transform:translateX(-15%) rotate(-3deg)}60%{-webkit-transform:translateX(10%) rotate(2deg);transform:translateX(10%) rotate(2deg)}75%{-webkit-transform:translateX(-5%) rotate(-1deg);transform:translateX(-5%) rotate(-1deg)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes wobble{0%{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}15%{-webkit-transform:translateX(-25%) rotate(-5deg);-ms-transform:translateX(-25%) rotate(-5deg);transform:translateX(-25%) rotate(-5deg)}30%{-webkit-transform:translateX(20%) rotate(3deg);-ms-transform:translateX(20%) rotate(3deg);transform:translateX(20%) rotate(3deg)}45%{-webkit-transform:translateX(-15%) rotate(-3deg);-ms-transform:translateX(-15%) rotate(-3deg);transform:translateX(-15%) rotate(-3deg)}60%{-webkit-transform:translateX(10%) rotate(2deg);-ms-transform:translateX(10%) rotate(2deg);transform:translateX(10%) rotate(2deg)}75%{-webkit-transform:translateX(-5%) rotate(-1deg);-ms-transform:translateX(-5%) rotate(-1deg);transform:translateX(-5%) rotate(-1deg)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-wobble{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:wobble;animation-name:wobble}.om-content-lock{color:transparent!important;text-shadow:rgba(0,0,0,.5) 0 0 10px;-webkit-user-select:none;-moz-user-select:none;user-select:none;pointer-events:none;filter:url("data:image/svg+xml;utf9,<svg%20version='1.1'%20xmlns='http://www.w3.org/2000/svg'><filter%20id='blur'><feGaussianBlur%20stdDeviation='10'%20/></filter></svg>#blur");-webkit-filter:blur(10px);-ms-filter:blur(10px);-o-filter:blur(10px);filter:blur(10px)}html.om-mobile-position,html.om-mobile-position body{position:fixed!important}html.om-ios-form,html.om-ios-form body{-webkit-transform:translateZ(0)!important;transform:translateZ(0)!important;-webkit-overflow-scrolling:touch!important;height:100%!important;overflow:auto!important}html.om-position-popup body{overflow:hidden!important}html.om-position-floating-top{transition:padding-top .5s ease!important}html.om-position-floating-bottom{transition:padding-bottom .5s ease!important}html.om-reset-dimensions{height:100%!important;width:100%!important}</style>



<link rel="https://api.w.org/" href="https://www.pyimagesearch.com/wp-json/">
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://www.pyimagesearch.com/xmlrpc.php?rsd">
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://www.pyimagesearch.com/wp-includes/wlwmanifest.xml"> 
<meta name="generator" content="WordPress 4.9.4">
<link rel="shortlink" href="https://www.pyimagesearch.com/?p=8981">
<link rel="alternate" type="application/json+oembed" href="https://www.pyimagesearch.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.pyimagesearch.com%2F2018%2F11%2F12%2Fyolo-object-detection-with-opencv%2F">
<link rel="alternate" type="text/xml+oembed" href="https://www.pyimagesearch.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.pyimagesearch.com%2F2018%2F11%2F12%2Fyolo-object-detection-with-opencv%2F&amp;format=xml">

<!-- Theme version -->
<meta name="generator" content="Canvas 5.5.7">
<meta name="generator" content="WooFramework 5.5.5">

<!-- Custom CSS Styling -->
<style type="text/css">
#logo .site-title, #logo .site-description { display:none; }
body {background-repeat:no-repeat;background-position:top left;background-attachment:scroll;border-top:0px solid #000000;}
#header {background-color:#ffffff;background-repeat:no-repeat;background-position:left top;margin-top:0px;margin-bottom:0px;padding-top:15px;padding-bottom:20px;border:0px solid ;}
#logo .site-title a {font:bold 32px/1em "Helvetica Neue", Helvetica, sans-serif;color:#222222;}
#logo .site-description {font:300 13px/1em "Helvetica Neue", Helvetica, sans-serif;color:#999999;}
#header-container{background-color:#ffffff;}#nav-container{background:#169fe6;}#nav-container{border-top:0px solid #dbdbdb;border-bottom:0px solid #dbdbdb;border-left:none;border-right:none;}#nav-container #navigation ul#main-nav > li:first-child{border-left: 0px solid #dbdbdb;}#footer-widgets-container{background-color:#f0f0f0}#footer-widgets{border:none;}#footer-container{background-color:#169fe6}#footer-container{border-top:0px solid #dbdbdb;}#footer {border-width: 0 !important;}
body, p { font:300 14px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#555555; }
h1 { font:bold 28px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }h2 { font:bold 24px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }h3 { font:bold 20px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }h4 { font:bold 16px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }h5 { font:bold 14px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }h6 { font:bold 12px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }
.page-title, .post .title, .page .title {font:bold 2.2em/1.1em Arial, sans-serif;color:#3E3E3E;}
.post .title a:link, .post .title a:visited, .page .title a:link, .page .title a:visited {color:#3E3E3E}
.post-meta { font:300 1em/1.5em Arial, sans-serif;color:#3E3E3E; }
.entry, .entry p{ font:300 15px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#555555; }
.post-more {font:300 13px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:;border-top:0px solid #e6e6e6;border-bottom:0px solid #e6e6e6;}
#post-author, #connect {border-top:1px solid #e6e6e6;border-bottom:1px solid #e6e6e6;border-left:1px solid #e6e6e6;border-right:1px solid #e6e6e6;border-radius:5px;-moz-border-radius:5px;-webkit-border-radius:5px;background-color:#fafafa}
.nav-entries a, .woo-pagination { font:300 13px/1em "Helvetica Neue", Helvetica, sans-serif;color:#888; }
.woo-pagination a, .woo-pagination a:hover {color:#888!important}
.widget h3 {font:bold 14px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#555555;border-bottom:1px solid #e6e6e6;}
.widget_recent_comments li, #twitter li { border-color: #e6e6e6;}
.widget p, .widget .textwidget { font:300 13px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#555555; }
.widget {font:300 13px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#555555;border-radius:0px;-moz-border-radius:0px;-webkit-border-radius:0px;}
#tabs .inside li a, .widget_woodojo_tabs .tabbable .tab-pane li a { font:bold 12px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#555555; }
#tabs .inside li span.meta, .widget_woodojo_tabs .tabbable .tab-pane li span.meta { font:300 11px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#999999; }
#tabs ul.wooTabs li a, .widget_woodojo_tabs .tabbable .nav-tabs li a { font:300 11px/2em "Helvetica Neue", Helvetica, sans-serif;color:#999999; }
@media only screen and (min-width:768px) {
ul.nav li a, #navigation ul.rss a, #navigation .cart-contents, #navigation ul.rss, #navigation ul.cart .cart_list a{ font:300 13px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#ffffff; } #navigation ul.rss li a:before { color:#ffffff;}
#navigation ul.nav > li a:hover, #navigation ul.nav > li:hover a, #navigation ul.nav li ul li a, #navigation ul.cart > li:hover > a, #navigation ul.cart > li > ul > div, #navigation ul.cart > li > ul > div p, #navigation ul.cart > li > ul span, #navigation ul.cart .cart_list a, #navigation ul.nav li.current_page_item a, #navigation ul.nav li.current_page_parent a, #navigation ul.nav li.current-menu-ancestor a, #navigation ul.nav li.current-cat a, #navigation ul.nav li.current-menu-item a { color:#169fe6!important; }
#navigation ul.nav > li a:hover, #navigation ul.nav > li:hover, #navigation ul.nav li ul, #navigation ul.cart > li:hover, #navigation ul.cart > li > ul > div, #navigation ul.nav li.current_page_item a, #navigation ul.nav li.current_page_parent a, #navigation ul.nav li.current-menu-ancestor a, #navigation ul.nav li.current-cat a, #navigation ul.nav li.current-menu-item a{background-color:#ffffff!important}
#navigation ul.nav li ul, #navigation ul.cart > li > ul > div  { border: 0px solid #dbdbdb; }
#navigation ul.nav > li > ul  { left: 0; }
#navigation ul.nav > li  { border-right: 0px solid #dbdbdb; }#navigation ul.nav > li > ul  { left: 0; }
#navigation  { box-shadow: none; -moz-box-shadow: none; -webkit-box-shadow: none; }#navigation ul li:first-child, #navigation ul li:first-child a { border-radius:0px 0 0 0px; -moz-border-radius:0px 0 0 0px; -webkit-border-radius:0px 0 0 0px; }
#navigation {background:#169fe6;border-top:0px solid #dbdbdb;border-bottom:0px solid #dbdbdb;border-left:0px solid #dbdbdb;border-right:0px solid #dbdbdb;border-radius:0px; -moz-border-radius:0px; -webkit-border-radius:0px;}
#top ul.nav li a { font:300 12px/1.6em "Helvetica Neue", Helvetica, sans-serif;color:#ddd; }
}
#footer, #footer p { font:300 13px/1.4em "Helvetica Neue", Helvetica, sans-serif;color:#ffffff; }
#footer {background-color:#169fe6;border-top:0px solid #dbdbdb;border-bottom:0px solid ;border-left:0px solid ;border-right:0px solid ;border-radius:0px; -moz-border-radius:0px; -webkit-border-radius:0px;}
.magazine #loopedSlider .content h2.title a { font:bold 24px/1em Arial, sans-serif;color:#ffffff; }
.magazine #loopedSlider .content .excerpt p { font:300 13px/1.5em Arial, sans-serif;color:#cccccc; }
.magazine .block .post .title, .magazine .block .post .title a { font:bold 18px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }
#loopedSlider.business-slider .content h2 { font:bold 24px/1em Arial, sans-serif;color:#ffffff; }
#loopedSlider.business-slider .content h2.title a { font:bold 24px/1em Arial, sans-serif;color:#ffffff; }
#wrapper #loopedSlider.business-slider .content p { font:300 13px/1.5em Arial, sans-serif;color:#cccccc; }
.archive_header { font:bold 18px/1em Arial, sans-serif;color:#222222; }
.archive_header {border-bottom:1px solid #e6e6e6;}
</style>
<!-- Options Panel Custom CSS -->
<style type="text/css">
/* Subscribe & Connect button style */
#mc-embedded-subscribe{background-color: #DF4B4B;}

/* MailChimp for WP Plugin styles */
.mc4wp-form input[type=submit]{background-color: #DF4B4B;}

/* Hide the header/footer on almost finished pages */
.page-id-365 #header, .page-id-365 #nav-container, .page-id-365 #footer-container{display: none;}
.page-id-4031 #header, .page-id-4031 #nav-container, .page-id-4031 #footer-container{display: none;}
.page-id-365 #content{padding-top: 30px;}
.page-id-4031 #content{padding-top: 30px;}
.page-id-5289 #header, .page-id-5289 #nav-container, .page-id-5289 #footer-container{display: none;}
.page-id-5289 #content{padding-top: 30px;}

/* Hide the header/footer on confirmation pages */
.page-id-1397 #header, .page-id-1397 #nav-container, .page-id-1397 #footer-container{display: none;}
.page-id-1382 #header, .page-id-1382 #nav-container, .page-id-1382 #footer-container{display: none;}
.page-id-1481 #header, .page-id-1481 #nav-container, .page-id-1481 #footer-container{display: none;}
.page-id-3200 #header, .page-id-3200 #nav-container, .page-id-3200 #footer-container{display: none;}
.page-id-4038 #header, .page-id-4038 #nav-container, .page-id-4038 #footer-container{display: none;}
.page-id-5278 #header, .page-id-5278 #nav-container, .page-id-5278 #footer-container{display: none;}
.page-id-8101 #header, .page-id-8101 #nav-container, .page-id-8101 #footer-container{display: none;}
.page-id-1397 #content, .page-id-1382 #content, .page-id-1481 #content, .page-id-4038 #content, .page-id-5278 #content, .page-id-8101 #content{padding-top: 30px;}

/* Manipulate content on 'Let me show you...' page */
.page-id-3200 #content{padding-top: 15px;}
.page-id-3200 #content h1.title{display: none;}
.page-id-3200 #content .entry h1{font-size: 32px;}

/* Add margin to bottom of LaTeX equations, but only when they are not in paragraphs */
section.entry .latex{margin-bottom: 15px;}
section.entry p .latex{margin-bottom: 0px;}

/* Fix list specific issues on the "Start Here" page */
.page-id-4374 #start_here_benefits li{margin-bottom: 15px;}

/* Fix search icon */
button.icon-search.submit{margin-top: -7px;}
</style>


<!-- Woo Shortcodes CSS -->


<!-- Custom Stylesheet -->

<style type="text/css">
/* <![CDATA[ */
img.latex { vertical-align: middle; border: none; }
/* ]]> */
</style>

<!-- start Mixpanel -->
<script type="text/javascript">(function(f,b){if(!b.__SV){var a,e,i,g;window.mixpanel=b;b._i=[];b.init=function(a,e,d){function f(b,h){var a=h.split(".");2==a.length&&(b=b[a[0]],h=a[1]);b[h]=function(){b.push([h].concat(Array.prototype.slice.call(arguments,0)))}}var c=b;"undefined"!==typeof d?c=b[d]=[]:d="mixpanel";c.people=c.people||[];c.toString=function(b){var a="mixpanel";"mixpanel"!==d&&(a+="."+d);b||(a+=" (stub)");return a};c.people.toString=function(){return c.toString(1)+".people (stub)"};i="disable track track_pageview track_links track_forms register register_once alias unregister identify name_tag set_config people.set people.set_once people.increment people.append people.track_charge people.clear_charges people.delete_user".split(" ");
for(g=0;g<i.length;g++)f(c,i[g]);b._i.push([a,e,d])};b.__SV=1.2;a=f.createElement("script");a.type="text/javascript";a.async=!0;a.src="//cdn.mxpnl.com/libs/mixpanel-2-latest.min.js";e=f.getElementsByTagName("script")[0];e.parentNode.insertBefore(a,e)}})(document,window.mixpanel||[]);
mixpanel.init("2486e0f021e92605d44d32fce5f1d826");
</script>
<!-- end Mixpanel -->

<style type="text/css">@-webkit-keyframes bounce{0%,20%,50%,80%,to{-webkit-transform:translateY(0);transform:translateY(0)}40%{-webkit-transform:translateY(-30px);transform:translateY(-30px)}60%{-webkit-transform:translateY(-15px);transform:translateY(-15px)}}@keyframes bounce{0%,20%,50%,80%,to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}40%{-webkit-transform:translateY(-30px);-ms-transform:translateY(-30px);transform:translateY(-30px)}60%{-webkit-transform:translateY(-15px);-ms-transform:translateY(-15px);transform:translateY(-15px)}}.om-animation-bounce{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:bounce;animation-name:bounce}@-webkit-keyframes bounceIn{0%{opacity:0;-webkit-transform:scale(.3);transform:scale(.3)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}70%{-webkit-transform:scale(.9);transform:scale(.9)}to{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes bounceIn{0%{opacity:0;-webkit-transform:scale(.3);-ms-transform:scale(.3);transform:scale(.3)}50%{opacity:1;-webkit-transform:scale(1.05);-ms-transform:scale(1.05);transform:scale(1.05)}70%{-webkit-transform:scale(.9);-ms-transform:scale(.9);transform:scale(.9)}to{opacity:1;-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}.om-animation-bounce-in{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceIn;animation-name:bounceIn}@-webkit-keyframes bounceInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}60%{opacity:1;-webkit-transform:translateY(30px);transform:translateY(30px)}80%{-webkit-transform:translateY(-10px);transform:translateY(-10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes bounceInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);-ms-transform:translateY(-2000px);transform:translateY(-2000px)}60%{opacity:1;-webkit-transform:translateY(30px);-ms-transform:translateY(30px);transform:translateY(30px)}80%{-webkit-transform:translateY(-10px);-ms-transform:translateY(-10px);transform:translateY(-10px)}to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}}.om-animation-bounce-in-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInDown;animation-name:bounceInDown}@-webkit-keyframes bounceInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}60%{opacity:1;-webkit-transform:translateX(30px);transform:translateX(30px)}80%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes bounceInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);-ms-transform:translateX(-2000px);transform:translateX(-2000px)}60%{opacity:1;-webkit-transform:translateX(30px);-ms-transform:translateX(30px);transform:translateX(30px)}80%{-webkit-transform:translateX(-10px);-ms-transform:translateX(-10px);transform:translateX(-10px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-bounce-in-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInLeft;animation-name:bounceInLeft}@-webkit-keyframes bounceInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}60%{opacity:1;-webkit-transform:translateX(-30px);transform:translateX(-30px)}80%{-webkit-transform:translateX(10px);transform:translateX(10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes bounceInRight{0%{opacity:0;-webkit-transform:translateX(2000px);-ms-transform:translateX(2000px);transform:translateX(2000px)}60%{opacity:1;-webkit-transform:translateX(-30px);-ms-transform:translateX(-30px);transform:translateX(-30px)}80%{-webkit-transform:translateX(10px);-ms-transform:translateX(10px);transform:translateX(10px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-bounce-in-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInRight;animation-name:bounceInRight}@-webkit-keyframes bounceInUp{0%{opacity:0;-webkit-transform:translateY(2000px);transform:translateY(2000px)}60%{opacity:1;-webkit-transform:translateY(-30px);transform:translateY(-30px)}80%{-webkit-transform:translateY(10px);transform:translateY(10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes bounceInUp{0%{opacity:0;-webkit-transform:translateY(2000px);-ms-transform:translateY(2000px);transform:translateY(2000px)}60%{opacity:1;-webkit-transform:translateY(-30px);-ms-transform:translateY(-30px);transform:translateY(-30px)}80%{-webkit-transform:translateY(10px);-ms-transform:translateY(10px);transform:translateY(10px)}to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}}.om-animation-bounce-in-up{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInUp;animation-name:bounceInUp}@-webkit-keyframes flash{0%,50%,to{opacity:1}25%,75%{opacity:0}}@keyframes flash{0%,50%,to{opacity:1}25%,75%{opacity:0}}.om-animation-flash{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:flash;animation-name:flash}@-webkit-keyframes flip{0%{-webkit-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}40%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}80%{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}to{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}@keyframes flip{0%{-webkit-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-ms-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}40%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-ms-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-ms-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}80%{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-ms-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}to{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-ms-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}.om-animation-flip{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;-ms-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flip;animation-name:flip}@-webkit-keyframes flipInX{0%{-webkit-transform:perspective(800px) rotateX(90deg);transform:perspective(800px) rotateX(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateX(-10deg);transform:perspective(800px) rotateX(-10deg)}70%{-webkit-transform:perspective(800px) rotateX(10deg);transform:perspective(800px) rotateX(10deg)}to{-webkit-transform:perspective(800px) rotateX(0deg);transform:perspective(800px) rotateX(0deg);opacity:1}}@keyframes flipInX{0%{-webkit-transform:perspective(800px) rotateX(90deg);-ms-transform:perspective(800px) rotateX(90deg);transform:perspective(800px) rotateX(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateX(-10deg);-ms-transform:perspective(800px) rotateX(-10deg);transform:perspective(800px) rotateX(-10deg)}70%{-webkit-transform:perspective(800px) rotateX(10deg);-ms-transform:perspective(800px) rotateX(10deg);transform:perspective(800px) rotateX(10deg)}to{-webkit-transform:perspective(800px) rotateX(0deg);-ms-transform:perspective(800px) rotateX(0deg);transform:perspective(800px) rotateX(0deg);opacity:1}}.om-animation-flip-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;-ms-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flipInX;animation-name:flipInX}@-webkit-keyframes flipInY{0%{-webkit-transform:perspective(800px) rotateY(90deg);transform:perspective(800px) rotateY(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateY(-10deg);transform:perspective(800px) rotateY(-10deg)}70%{-webkit-transform:perspective(800px) rotateY(10deg);transform:perspective(800px) rotateY(10deg)}to{-webkit-transform:perspective(800px) rotateY(0deg);transform:perspective(800px) rotateY(0deg);opacity:1}}@keyframes flipInY{0%{-webkit-transform:perspective(800px) rotateY(90deg);-ms-transform:perspective(800px) rotateY(90deg);transform:perspective(800px) rotateY(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateY(-10deg);-ms-transform:perspective(800px) rotateY(-10deg);transform:perspective(800px) rotateY(-10deg)}70%{-webkit-transform:perspective(800px) rotateY(10deg);-ms-transform:perspective(800px) rotateY(10deg);transform:perspective(800px) rotateY(10deg)}to{-webkit-transform:perspective(800px) rotateY(0deg);-ms-transform:perspective(800px) rotateY(0deg);transform:perspective(800px) rotateY(0deg);opacity:1}}.om-animation-flip-side{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;-ms-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flipInY;animation-name:flipInY}@-webkit-keyframes lightSpeedIn{0%{-webkit-transform:translateX(100%) skewX(-30deg);transform:translateX(100%) skewX(-30deg);opacity:0}60%{-webkit-transform:translateX(-20%) skewX(30deg);transform:translateX(-20%) skewX(30deg);opacity:1}80%{-webkit-transform:translateX(0) skewX(-15deg);transform:translateX(0) skewX(-15deg);opacity:1}to{-webkit-transform:translateX(0) skewX(0deg);transform:translateX(0) skewX(0deg);opacity:1}}@keyframes lightSpeedIn{0%{-webkit-transform:translateX(100%) skewX(-30deg);-ms-transform:translateX(100%) skewX(-30deg);transform:translateX(100%) skewX(-30deg);opacity:0}60%{-webkit-transform:translateX(-20%) skewX(30deg);-ms-transform:translateX(-20%) skewX(30deg);transform:translateX(-20%) skewX(30deg);opacity:1}80%{-webkit-transform:translateX(0) skewX(-15deg);-ms-transform:translateX(0) skewX(-15deg);transform:translateX(0) skewX(-15deg);opacity:1}to{-webkit-transform:translateX(0) skewX(0deg);-ms-transform:translateX(0) skewX(0deg);transform:translateX(0) skewX(0deg);opacity:1}}.om-animation-light-speed{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:lightSpeedIn;animation-name:lightSpeedIn;-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}@-webkit-keyframes pulse{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.1);transform:scale(1.1)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes pulse{0%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1)}to{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}.om-animation-pulse{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:pulse;animation-name:pulse}@-webkit-keyframes rollIn{0%{opacity:0;-webkit-transform:translateX(-100%) rotate(-120deg);transform:translateX(-100%) rotate(-120deg)}to{opacity:1;-webkit-transform:translateX(0) rotate(0deg);transform:translateX(0) rotate(0deg)}}@keyframes rollIn{0%{opacity:0;-webkit-transform:translateX(-100%) rotate(-120deg);-ms-transform:translateX(-100%) rotate(-120deg);transform:translateX(-100%) rotate(-120deg)}to{opacity:1;-webkit-transform:translateX(0) rotate(0deg);-ms-transform:translateX(0) rotate(0deg);transform:translateX(0) rotate(0deg)}}.om-animation-roll-in{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rollIn;animation-name:rollIn}@-webkit-keyframes rotateIn{0%{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(-200deg);transform:rotate(-200deg);opacity:0}to{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateIn{0%{-webkit-transform-origin:center center;-ms-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(-200deg);-ms-transform:rotate(-200deg);transform:rotate(-200deg);opacity:0}to{-webkit-transform-origin:center center;-ms-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateIn;animation-name:rotateIn}@-webkit-keyframes rotateInDownLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInDownLeft{0%{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(-90deg);-ms-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-down-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInDownLeft;animation-name:rotateInDownLeft}@-webkit-keyframes rotateInDownRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInDownRight{0%{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-down-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInDownRight;animation-name:rotateInDownRight}@-webkit-keyframes rotateInUpLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInUpLeft{0%{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-up-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInUpLeft;animation-name:rotateInUpLeft}@-webkit-keyframes rotateInUpRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInUpRight{0%{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(-90deg);-ms-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-up-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInUpRight;animation-name:rotateInUpRight}@-webkit-keyframes rubberBand{0%{-webkit-transform:scale(1);transform:scale(1)}30%{-webkit-transform:scaleX(1.25) scaleY(.75);transform:scaleX(1.25) scaleY(.75)}40%{-webkit-transform:scaleX(.75) scaleY(1.25);transform:scaleX(.75) scaleY(1.25)}60%{-webkit-transform:scaleX(1.15) scaleY(.85);transform:scaleX(1.15) scaleY(.85)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes rubberBand{0%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}30%{-webkit-transform:scaleX(1.25) scaleY(.75);-ms-transform:scaleX(1.25) scaleY(.75);transform:scaleX(1.25) scaleY(.75)}40%{-webkit-transform:scaleX(.75) scaleY(1.25);-ms-transform:scaleX(.75) scaleY(1.25);transform:scaleX(.75) scaleY(1.25)}60%{-webkit-transform:scaleX(1.15) scaleY(.85);-ms-transform:scaleX(1.15) scaleY(.85);transform:scaleX(1.15) scaleY(.85)}to{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}.om-animation-rubber-band{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:rubberBand;animation-name:rubberBand}@-webkit-keyframes shake{0%,to{-webkit-transform:translateX(0);transform:translateX(0)}10%,30%,50%,70%,90%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}20%,40%,60%,80%{-webkit-transform:translateX(10px);transform:translateX(10px)}}@keyframes shake{0%,to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}10%,30%,50%,70%,90%{-webkit-transform:translateX(-10px);-ms-transform:translateX(-10px);transform:translateX(-10px)}20%,40%,60%,80%{-webkit-transform:translateX(10px);-ms-transform:translateX(10px);transform:translateX(10px)}}.om-animation-shake{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:shake;animation-name:shake}@-webkit-keyframes slideInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes slideInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);-ms-transform:translateY(-2000px);transform:translateY(-2000px)}to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}}.om-animation-slide-in-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInDown;animation-name:slideInDown}@-webkit-keyframes slideInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes slideInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);-ms-transform:translateX(-2000px);transform:translateX(-2000px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-slide-in-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInLeft;animation-name:slideInLeft}@-webkit-keyframes slideInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes slideInRight{0%{opacity:0;-webkit-transform:translateX(2000px);-ms-transform:translateX(2000px);transform:translateX(2000px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-slide-in-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInRight;animation-name:slideInRight}@-webkit-keyframes swing{20%{-webkit-transform:rotate(15deg);transform:rotate(15deg)}40%{-webkit-transform:rotate(-10deg);transform:rotate(-10deg)}60%{-webkit-transform:rotate(5deg);transform:rotate(5deg)}80%{-webkit-transform:rotate(-5deg);transform:rotate(-5deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@keyframes swing{20%{-webkit-transform:rotate(15deg);-ms-transform:rotate(15deg);transform:rotate(15deg)}40%{-webkit-transform:rotate(-10deg);-ms-transform:rotate(-10deg);transform:rotate(-10deg)}60%{-webkit-transform:rotate(5deg);-ms-transform:rotate(5deg);transform:rotate(5deg)}80%{-webkit-transform:rotate(-5deg);-ms-transform:rotate(-5deg);transform:rotate(-5deg)}to{-webkit-transform:rotate(0deg);-ms-transform:rotate(0deg);transform:rotate(0deg)}}.om-animation-swing{-webkit-animation-duration:1s;animation-duration:1s;-webkit-transform-origin:top center;-ms-transform-origin:top center;transform-origin:top center;-webkit-animation-name:swing;animation-name:swing}@-webkit-keyframes tada{0%{-webkit-transform:scale(1);transform:scale(1)}10%,20%{-webkit-transform:scale(.9) rotate(-3deg);transform:scale(.9) rotate(-3deg)}30%,50%,70%,90%{-webkit-transform:scale(1.1) rotate(3deg);transform:scale(1.1) rotate(3deg)}40%,60%,80%{-webkit-transform:scale(1.1) rotate(-3deg);transform:scale(1.1) rotate(-3deg)}to{-webkit-transform:scale(1) rotate(0);transform:scale(1) rotate(0)}}@keyframes tada{0%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}10%,20%{-webkit-transform:scale(.9) rotate(-3deg);-ms-transform:scale(.9) rotate(-3deg);transform:scale(.9) rotate(-3deg)}30%,50%,70%,90%{-webkit-transform:scale(1.1) rotate(3deg);-ms-transform:scale(1.1) rotate(3deg);transform:scale(1.1) rotate(3deg)}40%,60%,80%{-webkit-transform:scale(1.1) rotate(-3deg);-ms-transform:scale(1.1) rotate(-3deg);transform:scale(1.1) rotate(-3deg)}to{-webkit-transform:scale(1) rotate(0);-ms-transform:scale(1) rotate(0);transform:scale(1) rotate(0)}}.om-animation-tada{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:tada;animation-name:tada}@-webkit-keyframes wobble{0%{-webkit-transform:translateX(0);transform:translateX(0)}15%{-webkit-transform:translateX(-25%) rotate(-5deg);transform:translateX(-25%) rotate(-5deg)}30%{-webkit-transform:translateX(20%) rotate(3deg);transform:translateX(20%) rotate(3deg)}45%{-webkit-transform:translateX(-15%) rotate(-3deg);transform:translateX(-15%) rotate(-3deg)}60%{-webkit-transform:translateX(10%) rotate(2deg);transform:translateX(10%) rotate(2deg)}75%{-webkit-transform:translateX(-5%) rotate(-1deg);transform:translateX(-5%) rotate(-1deg)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes wobble{0%{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}15%{-webkit-transform:translateX(-25%) rotate(-5deg);-ms-transform:translateX(-25%) rotate(-5deg);transform:translateX(-25%) rotate(-5deg)}30%{-webkit-transform:translateX(20%) rotate(3deg);-ms-transform:translateX(20%) rotate(3deg);transform:translateX(20%) rotate(3deg)}45%{-webkit-transform:translateX(-15%) rotate(-3deg);-ms-transform:translateX(-15%) rotate(-3deg);transform:translateX(-15%) rotate(-3deg)}60%{-webkit-transform:translateX(10%) rotate(2deg);-ms-transform:translateX(10%) rotate(2deg);transform:translateX(10%) rotate(2deg)}75%{-webkit-transform:translateX(-5%) rotate(-1deg);-ms-transform:translateX(-5%) rotate(-1deg);transform:translateX(-5%) rotate(-1deg)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-wobble{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:wobble;animation-name:wobble}.om-content-lock{color:transparent!important;text-shadow:rgba(0,0,0,.5) 0 0 10px;-webkit-user-select:none;-moz-user-select:none;user-select:none;pointer-events:none;filter:url("data:image/svg+xml;utf9,<svg%20version='1.1'%20xmlns='http://www.w3.org/2000/svg'><filter%20id='blur'><feGaussianBlur%20stdDeviation='10'%20/></filter></svg>#blur");-webkit-filter:blur(10px);-ms-filter:blur(10px);-o-filter:blur(10px);filter:blur(10px)}html.om-mobile-position,html.om-mobile-position body{position:fixed!important}html.om-ios-form,html.om-ios-form body{-webkit-transform:translateZ(0)!important;transform:translateZ(0)!important;-webkit-overflow-scrolling:touch!important;height:100%!important;overflow:auto!important}html.om-position-popup body{overflow:hidden!important}html.om-position-floating-top{transition:padding-top .5s ease!important}html.om-position-floating-bottom{transition:padding-bottom .5s ease!important}html.om-reset-dimensions{height:100%!important;width:100%!important}</style><style type="text/css">@-webkit-keyframes bounce{0%,20%,50%,80%,to{-webkit-transform:translateY(0);transform:translateY(0)}40%{-webkit-transform:translateY(-30px);transform:translateY(-30px)}60%{-webkit-transform:translateY(-15px);transform:translateY(-15px)}}@keyframes bounce{0%,20%,50%,80%,to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}40%{-webkit-transform:translateY(-30px);-ms-transform:translateY(-30px);transform:translateY(-30px)}60%{-webkit-transform:translateY(-15px);-ms-transform:translateY(-15px);transform:translateY(-15px)}}.om-animation-bounce{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:bounce;animation-name:bounce}@-webkit-keyframes bounceIn{0%{opacity:0;-webkit-transform:scale(.3);transform:scale(.3)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}70%{-webkit-transform:scale(.9);transform:scale(.9)}to{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes bounceIn{0%{opacity:0;-webkit-transform:scale(.3);-ms-transform:scale(.3);transform:scale(.3)}50%{opacity:1;-webkit-transform:scale(1.05);-ms-transform:scale(1.05);transform:scale(1.05)}70%{-webkit-transform:scale(.9);-ms-transform:scale(.9);transform:scale(.9)}to{opacity:1;-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}.om-animation-bounce-in{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceIn;animation-name:bounceIn}@-webkit-keyframes bounceInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}60%{opacity:1;-webkit-transform:translateY(30px);transform:translateY(30px)}80%{-webkit-transform:translateY(-10px);transform:translateY(-10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes bounceInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);-ms-transform:translateY(-2000px);transform:translateY(-2000px)}60%{opacity:1;-webkit-transform:translateY(30px);-ms-transform:translateY(30px);transform:translateY(30px)}80%{-webkit-transform:translateY(-10px);-ms-transform:translateY(-10px);transform:translateY(-10px)}to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}}.om-animation-bounce-in-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInDown;animation-name:bounceInDown}@-webkit-keyframes bounceInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}60%{opacity:1;-webkit-transform:translateX(30px);transform:translateX(30px)}80%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes bounceInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);-ms-transform:translateX(-2000px);transform:translateX(-2000px)}60%{opacity:1;-webkit-transform:translateX(30px);-ms-transform:translateX(30px);transform:translateX(30px)}80%{-webkit-transform:translateX(-10px);-ms-transform:translateX(-10px);transform:translateX(-10px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-bounce-in-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInLeft;animation-name:bounceInLeft}@-webkit-keyframes bounceInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}60%{opacity:1;-webkit-transform:translateX(-30px);transform:translateX(-30px)}80%{-webkit-transform:translateX(10px);transform:translateX(10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes bounceInRight{0%{opacity:0;-webkit-transform:translateX(2000px);-ms-transform:translateX(2000px);transform:translateX(2000px)}60%{opacity:1;-webkit-transform:translateX(-30px);-ms-transform:translateX(-30px);transform:translateX(-30px)}80%{-webkit-transform:translateX(10px);-ms-transform:translateX(10px);transform:translateX(10px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-bounce-in-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInRight;animation-name:bounceInRight}@-webkit-keyframes bounceInUp{0%{opacity:0;-webkit-transform:translateY(2000px);transform:translateY(2000px)}60%{opacity:1;-webkit-transform:translateY(-30px);transform:translateY(-30px)}80%{-webkit-transform:translateY(10px);transform:translateY(10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes bounceInUp{0%{opacity:0;-webkit-transform:translateY(2000px);-ms-transform:translateY(2000px);transform:translateY(2000px)}60%{opacity:1;-webkit-transform:translateY(-30px);-ms-transform:translateY(-30px);transform:translateY(-30px)}80%{-webkit-transform:translateY(10px);-ms-transform:translateY(10px);transform:translateY(10px)}to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}}.om-animation-bounce-in-up{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInUp;animation-name:bounceInUp}@-webkit-keyframes flash{0%,50%,to{opacity:1}25%,75%{opacity:0}}@keyframes flash{0%,50%,to{opacity:1}25%,75%{opacity:0}}.om-animation-flash{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:flash;animation-name:flash}@-webkit-keyframes flip{0%{-webkit-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}40%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}80%{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}to{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}@keyframes flip{0%{-webkit-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-ms-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}40%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-ms-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-ms-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}80%{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-ms-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}to{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-ms-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}.om-animation-flip{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;-ms-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flip;animation-name:flip}@-webkit-keyframes flipInX{0%{-webkit-transform:perspective(800px) rotateX(90deg);transform:perspective(800px) rotateX(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateX(-10deg);transform:perspective(800px) rotateX(-10deg)}70%{-webkit-transform:perspective(800px) rotateX(10deg);transform:perspective(800px) rotateX(10deg)}to{-webkit-transform:perspective(800px) rotateX(0deg);transform:perspective(800px) rotateX(0deg);opacity:1}}@keyframes flipInX{0%{-webkit-transform:perspective(800px) rotateX(90deg);-ms-transform:perspective(800px) rotateX(90deg);transform:perspective(800px) rotateX(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateX(-10deg);-ms-transform:perspective(800px) rotateX(-10deg);transform:perspective(800px) rotateX(-10deg)}70%{-webkit-transform:perspective(800px) rotateX(10deg);-ms-transform:perspective(800px) rotateX(10deg);transform:perspective(800px) rotateX(10deg)}to{-webkit-transform:perspective(800px) rotateX(0deg);-ms-transform:perspective(800px) rotateX(0deg);transform:perspective(800px) rotateX(0deg);opacity:1}}.om-animation-flip-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;-ms-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flipInX;animation-name:flipInX}@-webkit-keyframes flipInY{0%{-webkit-transform:perspective(800px) rotateY(90deg);transform:perspective(800px) rotateY(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateY(-10deg);transform:perspective(800px) rotateY(-10deg)}70%{-webkit-transform:perspective(800px) rotateY(10deg);transform:perspective(800px) rotateY(10deg)}to{-webkit-transform:perspective(800px) rotateY(0deg);transform:perspective(800px) rotateY(0deg);opacity:1}}@keyframes flipInY{0%{-webkit-transform:perspective(800px) rotateY(90deg);-ms-transform:perspective(800px) rotateY(90deg);transform:perspective(800px) rotateY(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateY(-10deg);-ms-transform:perspective(800px) rotateY(-10deg);transform:perspective(800px) rotateY(-10deg)}70%{-webkit-transform:perspective(800px) rotateY(10deg);-ms-transform:perspective(800px) rotateY(10deg);transform:perspective(800px) rotateY(10deg)}to{-webkit-transform:perspective(800px) rotateY(0deg);-ms-transform:perspective(800px) rotateY(0deg);transform:perspective(800px) rotateY(0deg);opacity:1}}.om-animation-flip-side{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;-ms-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flipInY;animation-name:flipInY}@-webkit-keyframes lightSpeedIn{0%{-webkit-transform:translateX(100%) skewX(-30deg);transform:translateX(100%) skewX(-30deg);opacity:0}60%{-webkit-transform:translateX(-20%) skewX(30deg);transform:translateX(-20%) skewX(30deg);opacity:1}80%{-webkit-transform:translateX(0) skewX(-15deg);transform:translateX(0) skewX(-15deg);opacity:1}to{-webkit-transform:translateX(0) skewX(0deg);transform:translateX(0) skewX(0deg);opacity:1}}@keyframes lightSpeedIn{0%{-webkit-transform:translateX(100%) skewX(-30deg);-ms-transform:translateX(100%) skewX(-30deg);transform:translateX(100%) skewX(-30deg);opacity:0}60%{-webkit-transform:translateX(-20%) skewX(30deg);-ms-transform:translateX(-20%) skewX(30deg);transform:translateX(-20%) skewX(30deg);opacity:1}80%{-webkit-transform:translateX(0) skewX(-15deg);-ms-transform:translateX(0) skewX(-15deg);transform:translateX(0) skewX(-15deg);opacity:1}to{-webkit-transform:translateX(0) skewX(0deg);-ms-transform:translateX(0) skewX(0deg);transform:translateX(0) skewX(0deg);opacity:1}}.om-animation-light-speed{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:lightSpeedIn;animation-name:lightSpeedIn;-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}@-webkit-keyframes pulse{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.1);transform:scale(1.1)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes pulse{0%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1)}to{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}.om-animation-pulse{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:pulse;animation-name:pulse}@-webkit-keyframes rollIn{0%{opacity:0;-webkit-transform:translateX(-100%) rotate(-120deg);transform:translateX(-100%) rotate(-120deg)}to{opacity:1;-webkit-transform:translateX(0) rotate(0deg);transform:translateX(0) rotate(0deg)}}@keyframes rollIn{0%{opacity:0;-webkit-transform:translateX(-100%) rotate(-120deg);-ms-transform:translateX(-100%) rotate(-120deg);transform:translateX(-100%) rotate(-120deg)}to{opacity:1;-webkit-transform:translateX(0) rotate(0deg);-ms-transform:translateX(0) rotate(0deg);transform:translateX(0) rotate(0deg)}}.om-animation-roll-in{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rollIn;animation-name:rollIn}@-webkit-keyframes rotateIn{0%{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(-200deg);transform:rotate(-200deg);opacity:0}to{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateIn{0%{-webkit-transform-origin:center center;-ms-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(-200deg);-ms-transform:rotate(-200deg);transform:rotate(-200deg);opacity:0}to{-webkit-transform-origin:center center;-ms-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateIn;animation-name:rotateIn}@-webkit-keyframes rotateInDownLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInDownLeft{0%{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(-90deg);-ms-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-down-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInDownLeft;animation-name:rotateInDownLeft}@-webkit-keyframes rotateInDownRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInDownRight{0%{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-down-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInDownRight;animation-name:rotateInDownRight}@-webkit-keyframes rotateInUpLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInUpLeft{0%{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-up-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInUpLeft;animation-name:rotateInUpLeft}@-webkit-keyframes rotateInUpRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInUpRight{0%{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(-90deg);-ms-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-up-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInUpRight;animation-name:rotateInUpRight}@-webkit-keyframes rubberBand{0%{-webkit-transform:scale(1);transform:scale(1)}30%{-webkit-transform:scaleX(1.25) scaleY(.75);transform:scaleX(1.25) scaleY(.75)}40%{-webkit-transform:scaleX(.75) scaleY(1.25);transform:scaleX(.75) scaleY(1.25)}60%{-webkit-transform:scaleX(1.15) scaleY(.85);transform:scaleX(1.15) scaleY(.85)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes rubberBand{0%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}30%{-webkit-transform:scaleX(1.25) scaleY(.75);-ms-transform:scaleX(1.25) scaleY(.75);transform:scaleX(1.25) scaleY(.75)}40%{-webkit-transform:scaleX(.75) scaleY(1.25);-ms-transform:scaleX(.75) scaleY(1.25);transform:scaleX(.75) scaleY(1.25)}60%{-webkit-transform:scaleX(1.15) scaleY(.85);-ms-transform:scaleX(1.15) scaleY(.85);transform:scaleX(1.15) scaleY(.85)}to{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}.om-animation-rubber-band{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:rubberBand;animation-name:rubberBand}@-webkit-keyframes shake{0%,to{-webkit-transform:translateX(0);transform:translateX(0)}10%,30%,50%,70%,90%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}20%,40%,60%,80%{-webkit-transform:translateX(10px);transform:translateX(10px)}}@keyframes shake{0%,to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}10%,30%,50%,70%,90%{-webkit-transform:translateX(-10px);-ms-transform:translateX(-10px);transform:translateX(-10px)}20%,40%,60%,80%{-webkit-transform:translateX(10px);-ms-transform:translateX(10px);transform:translateX(10px)}}.om-animation-shake{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:shake;animation-name:shake}@-webkit-keyframes slideInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes slideInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);-ms-transform:translateY(-2000px);transform:translateY(-2000px)}to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}}.om-animation-slide-in-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInDown;animation-name:slideInDown}@-webkit-keyframes slideInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes slideInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);-ms-transform:translateX(-2000px);transform:translateX(-2000px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-slide-in-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInLeft;animation-name:slideInLeft}@-webkit-keyframes slideInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes slideInRight{0%{opacity:0;-webkit-transform:translateX(2000px);-ms-transform:translateX(2000px);transform:translateX(2000px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-slide-in-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInRight;animation-name:slideInRight}@-webkit-keyframes swing{20%{-webkit-transform:rotate(15deg);transform:rotate(15deg)}40%{-webkit-transform:rotate(-10deg);transform:rotate(-10deg)}60%{-webkit-transform:rotate(5deg);transform:rotate(5deg)}80%{-webkit-transform:rotate(-5deg);transform:rotate(-5deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@keyframes swing{20%{-webkit-transform:rotate(15deg);-ms-transform:rotate(15deg);transform:rotate(15deg)}40%{-webkit-transform:rotate(-10deg);-ms-transform:rotate(-10deg);transform:rotate(-10deg)}60%{-webkit-transform:rotate(5deg);-ms-transform:rotate(5deg);transform:rotate(5deg)}80%{-webkit-transform:rotate(-5deg);-ms-transform:rotate(-5deg);transform:rotate(-5deg)}to{-webkit-transform:rotate(0deg);-ms-transform:rotate(0deg);transform:rotate(0deg)}}.om-animation-swing{-webkit-animation-duration:1s;animation-duration:1s;-webkit-transform-origin:top center;-ms-transform-origin:top center;transform-origin:top center;-webkit-animation-name:swing;animation-name:swing}@-webkit-keyframes tada{0%{-webkit-transform:scale(1);transform:scale(1)}10%,20%{-webkit-transform:scale(.9) rotate(-3deg);transform:scale(.9) rotate(-3deg)}30%,50%,70%,90%{-webkit-transform:scale(1.1) rotate(3deg);transform:scale(1.1) rotate(3deg)}40%,60%,80%{-webkit-transform:scale(1.1) rotate(-3deg);transform:scale(1.1) rotate(-3deg)}to{-webkit-transform:scale(1) rotate(0);transform:scale(1) rotate(0)}}@keyframes tada{0%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}10%,20%{-webkit-transform:scale(.9) rotate(-3deg);-ms-transform:scale(.9) rotate(-3deg);transform:scale(.9) rotate(-3deg)}30%,50%,70%,90%{-webkit-transform:scale(1.1) rotate(3deg);-ms-transform:scale(1.1) rotate(3deg);transform:scale(1.1) rotate(3deg)}40%,60%,80%{-webkit-transform:scale(1.1) rotate(-3deg);-ms-transform:scale(1.1) rotate(-3deg);transform:scale(1.1) rotate(-3deg)}to{-webkit-transform:scale(1) rotate(0);-ms-transform:scale(1) rotate(0);transform:scale(1) rotate(0)}}.om-animation-tada{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:tada;animation-name:tada}@-webkit-keyframes wobble{0%{-webkit-transform:translateX(0);transform:translateX(0)}15%{-webkit-transform:translateX(-25%) rotate(-5deg);transform:translateX(-25%) rotate(-5deg)}30%{-webkit-transform:translateX(20%) rotate(3deg);transform:translateX(20%) rotate(3deg)}45%{-webkit-transform:translateX(-15%) rotate(-3deg);transform:translateX(-15%) rotate(-3deg)}60%{-webkit-transform:translateX(10%) rotate(2deg);transform:translateX(10%) rotate(2deg)}75%{-webkit-transform:translateX(-5%) rotate(-1deg);transform:translateX(-5%) rotate(-1deg)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes wobble{0%{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}15%{-webkit-transform:translateX(-25%) rotate(-5deg);-ms-transform:translateX(-25%) rotate(-5deg);transform:translateX(-25%) rotate(-5deg)}30%{-webkit-transform:translateX(20%) rotate(3deg);-ms-transform:translateX(20%) rotate(3deg);transform:translateX(20%) rotate(3deg)}45%{-webkit-transform:translateX(-15%) rotate(-3deg);-ms-transform:translateX(-15%) rotate(-3deg);transform:translateX(-15%) rotate(-3deg)}60%{-webkit-transform:translateX(10%) rotate(2deg);-ms-transform:translateX(10%) rotate(2deg);transform:translateX(10%) rotate(2deg)}75%{-webkit-transform:translateX(-5%) rotate(-1deg);-ms-transform:translateX(-5%) rotate(-1deg);transform:translateX(-5%) rotate(-1deg)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-wobble{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:wobble;animation-name:wobble}.om-content-lock{color:transparent!important;text-shadow:rgba(0,0,0,.5) 0 0 10px;-webkit-user-select:none;-moz-user-select:none;user-select:none;pointer-events:none;filter:url("data:image/svg+xml;utf9,<svg%20version='1.1'%20xmlns='http://www.w3.org/2000/svg'><filter%20id='blur'><feGaussianBlur%20stdDeviation='10'%20/></filter></svg>#blur");-webkit-filter:blur(10px);-ms-filter:blur(10px);-o-filter:blur(10px);filter:blur(10px)}html.om-mobile-position,html.om-mobile-position body{position:fixed!important}html.om-ios-form,html.om-ios-form body{-webkit-transform:translateZ(0)!important;transform:translateZ(0)!important;-webkit-overflow-scrolling:touch!important;height:100%!important;overflow:auto!important}html.om-position-popup body{overflow:hidden!important}html.om-position-floating-top{transition:padding-top .5s ease!important}html.om-position-floating-bottom{transition:padding-bottom .5s ease!important}html.om-reset-dimensions{height:100%!important;width:100%!important}</style><style type="text/css">@-webkit-keyframes bounce{0%,20%,50%,80%,to{-webkit-transform:translateY(0);transform:translateY(0)}40%{-webkit-transform:translateY(-30px);transform:translateY(-30px)}60%{-webkit-transform:translateY(-15px);transform:translateY(-15px)}}@keyframes bounce{0%,20%,50%,80%,to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}40%{-webkit-transform:translateY(-30px);-ms-transform:translateY(-30px);transform:translateY(-30px)}60%{-webkit-transform:translateY(-15px);-ms-transform:translateY(-15px);transform:translateY(-15px)}}.om-animation-bounce{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:bounce;animation-name:bounce}@-webkit-keyframes bounceIn{0%{opacity:0;-webkit-transform:scale(.3);transform:scale(.3)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}70%{-webkit-transform:scale(.9);transform:scale(.9)}to{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes bounceIn{0%{opacity:0;-webkit-transform:scale(.3);-ms-transform:scale(.3);transform:scale(.3)}50%{opacity:1;-webkit-transform:scale(1.05);-ms-transform:scale(1.05);transform:scale(1.05)}70%{-webkit-transform:scale(.9);-ms-transform:scale(.9);transform:scale(.9)}to{opacity:1;-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}.om-animation-bounce-in{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceIn;animation-name:bounceIn}@-webkit-keyframes bounceInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}60%{opacity:1;-webkit-transform:translateY(30px);transform:translateY(30px)}80%{-webkit-transform:translateY(-10px);transform:translateY(-10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes bounceInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);-ms-transform:translateY(-2000px);transform:translateY(-2000px)}60%{opacity:1;-webkit-transform:translateY(30px);-ms-transform:translateY(30px);transform:translateY(30px)}80%{-webkit-transform:translateY(-10px);-ms-transform:translateY(-10px);transform:translateY(-10px)}to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}}.om-animation-bounce-in-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInDown;animation-name:bounceInDown}@-webkit-keyframes bounceInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}60%{opacity:1;-webkit-transform:translateX(30px);transform:translateX(30px)}80%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes bounceInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);-ms-transform:translateX(-2000px);transform:translateX(-2000px)}60%{opacity:1;-webkit-transform:translateX(30px);-ms-transform:translateX(30px);transform:translateX(30px)}80%{-webkit-transform:translateX(-10px);-ms-transform:translateX(-10px);transform:translateX(-10px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-bounce-in-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInLeft;animation-name:bounceInLeft}@-webkit-keyframes bounceInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}60%{opacity:1;-webkit-transform:translateX(-30px);transform:translateX(-30px)}80%{-webkit-transform:translateX(10px);transform:translateX(10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes bounceInRight{0%{opacity:0;-webkit-transform:translateX(2000px);-ms-transform:translateX(2000px);transform:translateX(2000px)}60%{opacity:1;-webkit-transform:translateX(-30px);-ms-transform:translateX(-30px);transform:translateX(-30px)}80%{-webkit-transform:translateX(10px);-ms-transform:translateX(10px);transform:translateX(10px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-bounce-in-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInRight;animation-name:bounceInRight}@-webkit-keyframes bounceInUp{0%{opacity:0;-webkit-transform:translateY(2000px);transform:translateY(2000px)}60%{opacity:1;-webkit-transform:translateY(-30px);transform:translateY(-30px)}80%{-webkit-transform:translateY(10px);transform:translateY(10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes bounceInUp{0%{opacity:0;-webkit-transform:translateY(2000px);-ms-transform:translateY(2000px);transform:translateY(2000px)}60%{opacity:1;-webkit-transform:translateY(-30px);-ms-transform:translateY(-30px);transform:translateY(-30px)}80%{-webkit-transform:translateY(10px);-ms-transform:translateY(10px);transform:translateY(10px)}to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}}.om-animation-bounce-in-up{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInUp;animation-name:bounceInUp}@-webkit-keyframes flash{0%,50%,to{opacity:1}25%,75%{opacity:0}}@keyframes flash{0%,50%,to{opacity:1}25%,75%{opacity:0}}.om-animation-flash{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:flash;animation-name:flash}@-webkit-keyframes flip{0%{-webkit-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}40%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}80%{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}to{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}@keyframes flip{0%{-webkit-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-ms-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}40%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-ms-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-ms-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}80%{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-ms-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}to{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-ms-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}.om-animation-flip{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;-ms-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flip;animation-name:flip}@-webkit-keyframes flipInX{0%{-webkit-transform:perspective(800px) rotateX(90deg);transform:perspective(800px) rotateX(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateX(-10deg);transform:perspective(800px) rotateX(-10deg)}70%{-webkit-transform:perspective(800px) rotateX(10deg);transform:perspective(800px) rotateX(10deg)}to{-webkit-transform:perspective(800px) rotateX(0deg);transform:perspective(800px) rotateX(0deg);opacity:1}}@keyframes flipInX{0%{-webkit-transform:perspective(800px) rotateX(90deg);-ms-transform:perspective(800px) rotateX(90deg);transform:perspective(800px) rotateX(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateX(-10deg);-ms-transform:perspective(800px) rotateX(-10deg);transform:perspective(800px) rotateX(-10deg)}70%{-webkit-transform:perspective(800px) rotateX(10deg);-ms-transform:perspective(800px) rotateX(10deg);transform:perspective(800px) rotateX(10deg)}to{-webkit-transform:perspective(800px) rotateX(0deg);-ms-transform:perspective(800px) rotateX(0deg);transform:perspective(800px) rotateX(0deg);opacity:1}}.om-animation-flip-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;-ms-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flipInX;animation-name:flipInX}@-webkit-keyframes flipInY{0%{-webkit-transform:perspective(800px) rotateY(90deg);transform:perspective(800px) rotateY(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateY(-10deg);transform:perspective(800px) rotateY(-10deg)}70%{-webkit-transform:perspective(800px) rotateY(10deg);transform:perspective(800px) rotateY(10deg)}to{-webkit-transform:perspective(800px) rotateY(0deg);transform:perspective(800px) rotateY(0deg);opacity:1}}@keyframes flipInY{0%{-webkit-transform:perspective(800px) rotateY(90deg);-ms-transform:perspective(800px) rotateY(90deg);transform:perspective(800px) rotateY(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateY(-10deg);-ms-transform:perspective(800px) rotateY(-10deg);transform:perspective(800px) rotateY(-10deg)}70%{-webkit-transform:perspective(800px) rotateY(10deg);-ms-transform:perspective(800px) rotateY(10deg);transform:perspective(800px) rotateY(10deg)}to{-webkit-transform:perspective(800px) rotateY(0deg);-ms-transform:perspective(800px) rotateY(0deg);transform:perspective(800px) rotateY(0deg);opacity:1}}.om-animation-flip-side{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;-ms-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flipInY;animation-name:flipInY}@-webkit-keyframes lightSpeedIn{0%{-webkit-transform:translateX(100%) skewX(-30deg);transform:translateX(100%) skewX(-30deg);opacity:0}60%{-webkit-transform:translateX(-20%) skewX(30deg);transform:translateX(-20%) skewX(30deg);opacity:1}80%{-webkit-transform:translateX(0) skewX(-15deg);transform:translateX(0) skewX(-15deg);opacity:1}to{-webkit-transform:translateX(0) skewX(0deg);transform:translateX(0) skewX(0deg);opacity:1}}@keyframes lightSpeedIn{0%{-webkit-transform:translateX(100%) skewX(-30deg);-ms-transform:translateX(100%) skewX(-30deg);transform:translateX(100%) skewX(-30deg);opacity:0}60%{-webkit-transform:translateX(-20%) skewX(30deg);-ms-transform:translateX(-20%) skewX(30deg);transform:translateX(-20%) skewX(30deg);opacity:1}80%{-webkit-transform:translateX(0) skewX(-15deg);-ms-transform:translateX(0) skewX(-15deg);transform:translateX(0) skewX(-15deg);opacity:1}to{-webkit-transform:translateX(0) skewX(0deg);-ms-transform:translateX(0) skewX(0deg);transform:translateX(0) skewX(0deg);opacity:1}}.om-animation-light-speed{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:lightSpeedIn;animation-name:lightSpeedIn;-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}@-webkit-keyframes pulse{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.1);transform:scale(1.1)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes pulse{0%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1)}to{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}.om-animation-pulse{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:pulse;animation-name:pulse}@-webkit-keyframes rollIn{0%{opacity:0;-webkit-transform:translateX(-100%) rotate(-120deg);transform:translateX(-100%) rotate(-120deg)}to{opacity:1;-webkit-transform:translateX(0) rotate(0deg);transform:translateX(0) rotate(0deg)}}@keyframes rollIn{0%{opacity:0;-webkit-transform:translateX(-100%) rotate(-120deg);-ms-transform:translateX(-100%) rotate(-120deg);transform:translateX(-100%) rotate(-120deg)}to{opacity:1;-webkit-transform:translateX(0) rotate(0deg);-ms-transform:translateX(0) rotate(0deg);transform:translateX(0) rotate(0deg)}}.om-animation-roll-in{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rollIn;animation-name:rollIn}@-webkit-keyframes rotateIn{0%{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(-200deg);transform:rotate(-200deg);opacity:0}to{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateIn{0%{-webkit-transform-origin:center center;-ms-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(-200deg);-ms-transform:rotate(-200deg);transform:rotate(-200deg);opacity:0}to{-webkit-transform-origin:center center;-ms-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateIn;animation-name:rotateIn}@-webkit-keyframes rotateInDownLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInDownLeft{0%{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(-90deg);-ms-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-down-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInDownLeft;animation-name:rotateInDownLeft}@-webkit-keyframes rotateInDownRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInDownRight{0%{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-down-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInDownRight;animation-name:rotateInDownRight}@-webkit-keyframes rotateInUpLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInUpLeft{0%{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-up-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInUpLeft;animation-name:rotateInUpLeft}@-webkit-keyframes rotateInUpRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInUpRight{0%{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(-90deg);-ms-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-up-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInUpRight;animation-name:rotateInUpRight}@-webkit-keyframes rubberBand{0%{-webkit-transform:scale(1);transform:scale(1)}30%{-webkit-transform:scaleX(1.25) scaleY(.75);transform:scaleX(1.25) scaleY(.75)}40%{-webkit-transform:scaleX(.75) scaleY(1.25);transform:scaleX(.75) scaleY(1.25)}60%{-webkit-transform:scaleX(1.15) scaleY(.85);transform:scaleX(1.15) scaleY(.85)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes rubberBand{0%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}30%{-webkit-transform:scaleX(1.25) scaleY(.75);-ms-transform:scaleX(1.25) scaleY(.75);transform:scaleX(1.25) scaleY(.75)}40%{-webkit-transform:scaleX(.75) scaleY(1.25);-ms-transform:scaleX(.75) scaleY(1.25);transform:scaleX(.75) scaleY(1.25)}60%{-webkit-transform:scaleX(1.15) scaleY(.85);-ms-transform:scaleX(1.15) scaleY(.85);transform:scaleX(1.15) scaleY(.85)}to{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}.om-animation-rubber-band{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:rubberBand;animation-name:rubberBand}@-webkit-keyframes shake{0%,to{-webkit-transform:translateX(0);transform:translateX(0)}10%,30%,50%,70%,90%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}20%,40%,60%,80%{-webkit-transform:translateX(10px);transform:translateX(10px)}}@keyframes shake{0%,to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}10%,30%,50%,70%,90%{-webkit-transform:translateX(-10px);-ms-transform:translateX(-10px);transform:translateX(-10px)}20%,40%,60%,80%{-webkit-transform:translateX(10px);-ms-transform:translateX(10px);transform:translateX(10px)}}.om-animation-shake{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:shake;animation-name:shake}@-webkit-keyframes slideInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes slideInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);-ms-transform:translateY(-2000px);transform:translateY(-2000px)}to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}}.om-animation-slide-in-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInDown;animation-name:slideInDown}@-webkit-keyframes slideInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes slideInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);-ms-transform:translateX(-2000px);transform:translateX(-2000px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-slide-in-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInLeft;animation-name:slideInLeft}@-webkit-keyframes slideInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes slideInRight{0%{opacity:0;-webkit-transform:translateX(2000px);-ms-transform:translateX(2000px);transform:translateX(2000px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-slide-in-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInRight;animation-name:slideInRight}@-webkit-keyframes swing{20%{-webkit-transform:rotate(15deg);transform:rotate(15deg)}40%{-webkit-transform:rotate(-10deg);transform:rotate(-10deg)}60%{-webkit-transform:rotate(5deg);transform:rotate(5deg)}80%{-webkit-transform:rotate(-5deg);transform:rotate(-5deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@keyframes swing{20%{-webkit-transform:rotate(15deg);-ms-transform:rotate(15deg);transform:rotate(15deg)}40%{-webkit-transform:rotate(-10deg);-ms-transform:rotate(-10deg);transform:rotate(-10deg)}60%{-webkit-transform:rotate(5deg);-ms-transform:rotate(5deg);transform:rotate(5deg)}80%{-webkit-transform:rotate(-5deg);-ms-transform:rotate(-5deg);transform:rotate(-5deg)}to{-webkit-transform:rotate(0deg);-ms-transform:rotate(0deg);transform:rotate(0deg)}}.om-animation-swing{-webkit-animation-duration:1s;animation-duration:1s;-webkit-transform-origin:top center;-ms-transform-origin:top center;transform-origin:top center;-webkit-animation-name:swing;animation-name:swing}@-webkit-keyframes tada{0%{-webkit-transform:scale(1);transform:scale(1)}10%,20%{-webkit-transform:scale(.9) rotate(-3deg);transform:scale(.9) rotate(-3deg)}30%,50%,70%,90%{-webkit-transform:scale(1.1) rotate(3deg);transform:scale(1.1) rotate(3deg)}40%,60%,80%{-webkit-transform:scale(1.1) rotate(-3deg);transform:scale(1.1) rotate(-3deg)}to{-webkit-transform:scale(1) rotate(0);transform:scale(1) rotate(0)}}@keyframes tada{0%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}10%,20%{-webkit-transform:scale(.9) rotate(-3deg);-ms-transform:scale(.9) rotate(-3deg);transform:scale(.9) rotate(-3deg)}30%,50%,70%,90%{-webkit-transform:scale(1.1) rotate(3deg);-ms-transform:scale(1.1) rotate(3deg);transform:scale(1.1) rotate(3deg)}40%,60%,80%{-webkit-transform:scale(1.1) rotate(-3deg);-ms-transform:scale(1.1) rotate(-3deg);transform:scale(1.1) rotate(-3deg)}to{-webkit-transform:scale(1) rotate(0);-ms-transform:scale(1) rotate(0);transform:scale(1) rotate(0)}}.om-animation-tada{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:tada;animation-name:tada}@-webkit-keyframes wobble{0%{-webkit-transform:translateX(0);transform:translateX(0)}15%{-webkit-transform:translateX(-25%) rotate(-5deg);transform:translateX(-25%) rotate(-5deg)}30%{-webkit-transform:translateX(20%) rotate(3deg);transform:translateX(20%) rotate(3deg)}45%{-webkit-transform:translateX(-15%) rotate(-3deg);transform:translateX(-15%) rotate(-3deg)}60%{-webkit-transform:translateX(10%) rotate(2deg);transform:translateX(10%) rotate(2deg)}75%{-webkit-transform:translateX(-5%) rotate(-1deg);transform:translateX(-5%) rotate(-1deg)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes wobble{0%{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}15%{-webkit-transform:translateX(-25%) rotate(-5deg);-ms-transform:translateX(-25%) rotate(-5deg);transform:translateX(-25%) rotate(-5deg)}30%{-webkit-transform:translateX(20%) rotate(3deg);-ms-transform:translateX(20%) rotate(3deg);transform:translateX(20%) rotate(3deg)}45%{-webkit-transform:translateX(-15%) rotate(-3deg);-ms-transform:translateX(-15%) rotate(-3deg);transform:translateX(-15%) rotate(-3deg)}60%{-webkit-transform:translateX(10%) rotate(2deg);-ms-transform:translateX(10%) rotate(2deg);transform:translateX(10%) rotate(2deg)}75%{-webkit-transform:translateX(-5%) rotate(-1deg);-ms-transform:translateX(-5%) rotate(-1deg);transform:translateX(-5%) rotate(-1deg)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-wobble{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:wobble;animation-name:wobble}.om-content-lock{color:transparent!important;text-shadow:rgba(0,0,0,.5) 0 0 10px;-webkit-user-select:none;-moz-user-select:none;user-select:none;pointer-events:none;filter:url("data:image/svg+xml;utf9,<svg%20version='1.1'%20xmlns='http://www.w3.org/2000/svg'><filter%20id='blur'><feGaussianBlur%20stdDeviation='10'%20/></filter></svg>#blur");-webkit-filter:blur(10px);-ms-filter:blur(10px);-o-filter:blur(10px);filter:blur(10px)}html.om-mobile-position,html.om-mobile-position body{position:fixed!important}html.om-ios-form,html.om-ios-form body{-webkit-transform:translateZ(0)!important;transform:translateZ(0)!important;-webkit-overflow-scrolling:touch!important;height:100%!important;overflow:auto!important}html.om-position-popup body{overflow:hidden!important}html.om-position-floating-top{transition:padding-top .5s ease!important}html.om-position-floating-bottom{transition:padding-bottom .5s ease!important}html.om-reset-dimensions{height:100%!important;width:100%!important}</style><style type="text/css">@-webkit-keyframes bounce{0%,20%,50%,80%,to{-webkit-transform:translateY(0);transform:translateY(0)}40%{-webkit-transform:translateY(-30px);transform:translateY(-30px)}60%{-webkit-transform:translateY(-15px);transform:translateY(-15px)}}@keyframes bounce{0%,20%,50%,80%,to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}40%{-webkit-transform:translateY(-30px);-ms-transform:translateY(-30px);transform:translateY(-30px)}60%{-webkit-transform:translateY(-15px);-ms-transform:translateY(-15px);transform:translateY(-15px)}}.om-animation-bounce{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:bounce;animation-name:bounce}@-webkit-keyframes bounceIn{0%{opacity:0;-webkit-transform:scale(.3);transform:scale(.3)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}70%{-webkit-transform:scale(.9);transform:scale(.9)}to{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes bounceIn{0%{opacity:0;-webkit-transform:scale(.3);-ms-transform:scale(.3);transform:scale(.3)}50%{opacity:1;-webkit-transform:scale(1.05);-ms-transform:scale(1.05);transform:scale(1.05)}70%{-webkit-transform:scale(.9);-ms-transform:scale(.9);transform:scale(.9)}to{opacity:1;-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}.om-animation-bounce-in{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceIn;animation-name:bounceIn}@-webkit-keyframes bounceInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}60%{opacity:1;-webkit-transform:translateY(30px);transform:translateY(30px)}80%{-webkit-transform:translateY(-10px);transform:translateY(-10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes bounceInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);-ms-transform:translateY(-2000px);transform:translateY(-2000px)}60%{opacity:1;-webkit-transform:translateY(30px);-ms-transform:translateY(30px);transform:translateY(30px)}80%{-webkit-transform:translateY(-10px);-ms-transform:translateY(-10px);transform:translateY(-10px)}to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}}.om-animation-bounce-in-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInDown;animation-name:bounceInDown}@-webkit-keyframes bounceInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}60%{opacity:1;-webkit-transform:translateX(30px);transform:translateX(30px)}80%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes bounceInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);-ms-transform:translateX(-2000px);transform:translateX(-2000px)}60%{opacity:1;-webkit-transform:translateX(30px);-ms-transform:translateX(30px);transform:translateX(30px)}80%{-webkit-transform:translateX(-10px);-ms-transform:translateX(-10px);transform:translateX(-10px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-bounce-in-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInLeft;animation-name:bounceInLeft}@-webkit-keyframes bounceInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}60%{opacity:1;-webkit-transform:translateX(-30px);transform:translateX(-30px)}80%{-webkit-transform:translateX(10px);transform:translateX(10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes bounceInRight{0%{opacity:0;-webkit-transform:translateX(2000px);-ms-transform:translateX(2000px);transform:translateX(2000px)}60%{opacity:1;-webkit-transform:translateX(-30px);-ms-transform:translateX(-30px);transform:translateX(-30px)}80%{-webkit-transform:translateX(10px);-ms-transform:translateX(10px);transform:translateX(10px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-bounce-in-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInRight;animation-name:bounceInRight}@-webkit-keyframes bounceInUp{0%{opacity:0;-webkit-transform:translateY(2000px);transform:translateY(2000px)}60%{opacity:1;-webkit-transform:translateY(-30px);transform:translateY(-30px)}80%{-webkit-transform:translateY(10px);transform:translateY(10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes bounceInUp{0%{opacity:0;-webkit-transform:translateY(2000px);-ms-transform:translateY(2000px);transform:translateY(2000px)}60%{opacity:1;-webkit-transform:translateY(-30px);-ms-transform:translateY(-30px);transform:translateY(-30px)}80%{-webkit-transform:translateY(10px);-ms-transform:translateY(10px);transform:translateY(10px)}to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}}.om-animation-bounce-in-up{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInUp;animation-name:bounceInUp}@-webkit-keyframes flash{0%,50%,to{opacity:1}25%,75%{opacity:0}}@keyframes flash{0%,50%,to{opacity:1}25%,75%{opacity:0}}.om-animation-flash{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:flash;animation-name:flash}@-webkit-keyframes flip{0%{-webkit-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}40%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}80%{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}to{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}@keyframes flip{0%{-webkit-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-ms-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}40%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-ms-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-ms-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}80%{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-ms-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}to{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-ms-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}.om-animation-flip{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;-ms-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flip;animation-name:flip}@-webkit-keyframes flipInX{0%{-webkit-transform:perspective(800px) rotateX(90deg);transform:perspective(800px) rotateX(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateX(-10deg);transform:perspective(800px) rotateX(-10deg)}70%{-webkit-transform:perspective(800px) rotateX(10deg);transform:perspective(800px) rotateX(10deg)}to{-webkit-transform:perspective(800px) rotateX(0deg);transform:perspective(800px) rotateX(0deg);opacity:1}}@keyframes flipInX{0%{-webkit-transform:perspective(800px) rotateX(90deg);-ms-transform:perspective(800px) rotateX(90deg);transform:perspective(800px) rotateX(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateX(-10deg);-ms-transform:perspective(800px) rotateX(-10deg);transform:perspective(800px) rotateX(-10deg)}70%{-webkit-transform:perspective(800px) rotateX(10deg);-ms-transform:perspective(800px) rotateX(10deg);transform:perspective(800px) rotateX(10deg)}to{-webkit-transform:perspective(800px) rotateX(0deg);-ms-transform:perspective(800px) rotateX(0deg);transform:perspective(800px) rotateX(0deg);opacity:1}}.om-animation-flip-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;-ms-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flipInX;animation-name:flipInX}@-webkit-keyframes flipInY{0%{-webkit-transform:perspective(800px) rotateY(90deg);transform:perspective(800px) rotateY(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateY(-10deg);transform:perspective(800px) rotateY(-10deg)}70%{-webkit-transform:perspective(800px) rotateY(10deg);transform:perspective(800px) rotateY(10deg)}to{-webkit-transform:perspective(800px) rotateY(0deg);transform:perspective(800px) rotateY(0deg);opacity:1}}@keyframes flipInY{0%{-webkit-transform:perspective(800px) rotateY(90deg);-ms-transform:perspective(800px) rotateY(90deg);transform:perspective(800px) rotateY(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateY(-10deg);-ms-transform:perspective(800px) rotateY(-10deg);transform:perspective(800px) rotateY(-10deg)}70%{-webkit-transform:perspective(800px) rotateY(10deg);-ms-transform:perspective(800px) rotateY(10deg);transform:perspective(800px) rotateY(10deg)}to{-webkit-transform:perspective(800px) rotateY(0deg);-ms-transform:perspective(800px) rotateY(0deg);transform:perspective(800px) rotateY(0deg);opacity:1}}.om-animation-flip-side{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;-ms-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flipInY;animation-name:flipInY}@-webkit-keyframes lightSpeedIn{0%{-webkit-transform:translateX(100%) skewX(-30deg);transform:translateX(100%) skewX(-30deg);opacity:0}60%{-webkit-transform:translateX(-20%) skewX(30deg);transform:translateX(-20%) skewX(30deg);opacity:1}80%{-webkit-transform:translateX(0) skewX(-15deg);transform:translateX(0) skewX(-15deg);opacity:1}to{-webkit-transform:translateX(0) skewX(0deg);transform:translateX(0) skewX(0deg);opacity:1}}@keyframes lightSpeedIn{0%{-webkit-transform:translateX(100%) skewX(-30deg);-ms-transform:translateX(100%) skewX(-30deg);transform:translateX(100%) skewX(-30deg);opacity:0}60%{-webkit-transform:translateX(-20%) skewX(30deg);-ms-transform:translateX(-20%) skewX(30deg);transform:translateX(-20%) skewX(30deg);opacity:1}80%{-webkit-transform:translateX(0) skewX(-15deg);-ms-transform:translateX(0) skewX(-15deg);transform:translateX(0) skewX(-15deg);opacity:1}to{-webkit-transform:translateX(0) skewX(0deg);-ms-transform:translateX(0) skewX(0deg);transform:translateX(0) skewX(0deg);opacity:1}}.om-animation-light-speed{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:lightSpeedIn;animation-name:lightSpeedIn;-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}@-webkit-keyframes pulse{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.1);transform:scale(1.1)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes pulse{0%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1)}to{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}.om-animation-pulse{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:pulse;animation-name:pulse}@-webkit-keyframes rollIn{0%{opacity:0;-webkit-transform:translateX(-100%) rotate(-120deg);transform:translateX(-100%) rotate(-120deg)}to{opacity:1;-webkit-transform:translateX(0) rotate(0deg);transform:translateX(0) rotate(0deg)}}@keyframes rollIn{0%{opacity:0;-webkit-transform:translateX(-100%) rotate(-120deg);-ms-transform:translateX(-100%) rotate(-120deg);transform:translateX(-100%) rotate(-120deg)}to{opacity:1;-webkit-transform:translateX(0) rotate(0deg);-ms-transform:translateX(0) rotate(0deg);transform:translateX(0) rotate(0deg)}}.om-animation-roll-in{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rollIn;animation-name:rollIn}@-webkit-keyframes rotateIn{0%{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(-200deg);transform:rotate(-200deg);opacity:0}to{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateIn{0%{-webkit-transform-origin:center center;-ms-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(-200deg);-ms-transform:rotate(-200deg);transform:rotate(-200deg);opacity:0}to{-webkit-transform-origin:center center;-ms-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateIn;animation-name:rotateIn}@-webkit-keyframes rotateInDownLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInDownLeft{0%{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(-90deg);-ms-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-down-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInDownLeft;animation-name:rotateInDownLeft}@-webkit-keyframes rotateInDownRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInDownRight{0%{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-down-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInDownRight;animation-name:rotateInDownRight}@-webkit-keyframes rotateInUpLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInUpLeft{0%{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-up-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInUpLeft;animation-name:rotateInUpLeft}@-webkit-keyframes rotateInUpRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInUpRight{0%{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(-90deg);-ms-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-up-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInUpRight;animation-name:rotateInUpRight}@-webkit-keyframes rubberBand{0%{-webkit-transform:scale(1);transform:scale(1)}30%{-webkit-transform:scaleX(1.25) scaleY(.75);transform:scaleX(1.25) scaleY(.75)}40%{-webkit-transform:scaleX(.75) scaleY(1.25);transform:scaleX(.75) scaleY(1.25)}60%{-webkit-transform:scaleX(1.15) scaleY(.85);transform:scaleX(1.15) scaleY(.85)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes rubberBand{0%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}30%{-webkit-transform:scaleX(1.25) scaleY(.75);-ms-transform:scaleX(1.25) scaleY(.75);transform:scaleX(1.25) scaleY(.75)}40%{-webkit-transform:scaleX(.75) scaleY(1.25);-ms-transform:scaleX(.75) scaleY(1.25);transform:scaleX(.75) scaleY(1.25)}60%{-webkit-transform:scaleX(1.15) scaleY(.85);-ms-transform:scaleX(1.15) scaleY(.85);transform:scaleX(1.15) scaleY(.85)}to{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}.om-animation-rubber-band{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:rubberBand;animation-name:rubberBand}@-webkit-keyframes shake{0%,to{-webkit-transform:translateX(0);transform:translateX(0)}10%,30%,50%,70%,90%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}20%,40%,60%,80%{-webkit-transform:translateX(10px);transform:translateX(10px)}}@keyframes shake{0%,to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}10%,30%,50%,70%,90%{-webkit-transform:translateX(-10px);-ms-transform:translateX(-10px);transform:translateX(-10px)}20%,40%,60%,80%{-webkit-transform:translateX(10px);-ms-transform:translateX(10px);transform:translateX(10px)}}.om-animation-shake{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:shake;animation-name:shake}@-webkit-keyframes slideInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes slideInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);-ms-transform:translateY(-2000px);transform:translateY(-2000px)}to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}}.om-animation-slide-in-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInDown;animation-name:slideInDown}@-webkit-keyframes slideInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes slideInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);-ms-transform:translateX(-2000px);transform:translateX(-2000px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-slide-in-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInLeft;animation-name:slideInLeft}@-webkit-keyframes slideInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes slideInRight{0%{opacity:0;-webkit-transform:translateX(2000px);-ms-transform:translateX(2000px);transform:translateX(2000px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-slide-in-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInRight;animation-name:slideInRight}@-webkit-keyframes swing{20%{-webkit-transform:rotate(15deg);transform:rotate(15deg)}40%{-webkit-transform:rotate(-10deg);transform:rotate(-10deg)}60%{-webkit-transform:rotate(5deg);transform:rotate(5deg)}80%{-webkit-transform:rotate(-5deg);transform:rotate(-5deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@keyframes swing{20%{-webkit-transform:rotate(15deg);-ms-transform:rotate(15deg);transform:rotate(15deg)}40%{-webkit-transform:rotate(-10deg);-ms-transform:rotate(-10deg);transform:rotate(-10deg)}60%{-webkit-transform:rotate(5deg);-ms-transform:rotate(5deg);transform:rotate(5deg)}80%{-webkit-transform:rotate(-5deg);-ms-transform:rotate(-5deg);transform:rotate(-5deg)}to{-webkit-transform:rotate(0deg);-ms-transform:rotate(0deg);transform:rotate(0deg)}}.om-animation-swing{-webkit-animation-duration:1s;animation-duration:1s;-webkit-transform-origin:top center;-ms-transform-origin:top center;transform-origin:top center;-webkit-animation-name:swing;animation-name:swing}@-webkit-keyframes tada{0%{-webkit-transform:scale(1);transform:scale(1)}10%,20%{-webkit-transform:scale(.9) rotate(-3deg);transform:scale(.9) rotate(-3deg)}30%,50%,70%,90%{-webkit-transform:scale(1.1) rotate(3deg);transform:scale(1.1) rotate(3deg)}40%,60%,80%{-webkit-transform:scale(1.1) rotate(-3deg);transform:scale(1.1) rotate(-3deg)}to{-webkit-transform:scale(1) rotate(0);transform:scale(1) rotate(0)}}@keyframes tada{0%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}10%,20%{-webkit-transform:scale(.9) rotate(-3deg);-ms-transform:scale(.9) rotate(-3deg);transform:scale(.9) rotate(-3deg)}30%,50%,70%,90%{-webkit-transform:scale(1.1) rotate(3deg);-ms-transform:scale(1.1) rotate(3deg);transform:scale(1.1) rotate(3deg)}40%,60%,80%{-webkit-transform:scale(1.1) rotate(-3deg);-ms-transform:scale(1.1) rotate(-3deg);transform:scale(1.1) rotate(-3deg)}to{-webkit-transform:scale(1) rotate(0);-ms-transform:scale(1) rotate(0);transform:scale(1) rotate(0)}}.om-animation-tada{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:tada;animation-name:tada}@-webkit-keyframes wobble{0%{-webkit-transform:translateX(0);transform:translateX(0)}15%{-webkit-transform:translateX(-25%) rotate(-5deg);transform:translateX(-25%) rotate(-5deg)}30%{-webkit-transform:translateX(20%) rotate(3deg);transform:translateX(20%) rotate(3deg)}45%{-webkit-transform:translateX(-15%) rotate(-3deg);transform:translateX(-15%) rotate(-3deg)}60%{-webkit-transform:translateX(10%) rotate(2deg);transform:translateX(10%) rotate(2deg)}75%{-webkit-transform:translateX(-5%) rotate(-1deg);transform:translateX(-5%) rotate(-1deg)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes wobble{0%{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}15%{-webkit-transform:translateX(-25%) rotate(-5deg);-ms-transform:translateX(-25%) rotate(-5deg);transform:translateX(-25%) rotate(-5deg)}30%{-webkit-transform:translateX(20%) rotate(3deg);-ms-transform:translateX(20%) rotate(3deg);transform:translateX(20%) rotate(3deg)}45%{-webkit-transform:translateX(-15%) rotate(-3deg);-ms-transform:translateX(-15%) rotate(-3deg);transform:translateX(-15%) rotate(-3deg)}60%{-webkit-transform:translateX(10%) rotate(2deg);-ms-transform:translateX(10%) rotate(2deg);transform:translateX(10%) rotate(2deg)}75%{-webkit-transform:translateX(-5%) rotate(-1deg);-ms-transform:translateX(-5%) rotate(-1deg);transform:translateX(-5%) rotate(-1deg)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-wobble{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:wobble;animation-name:wobble}.om-content-lock{color:transparent!important;text-shadow:rgba(0,0,0,.5) 0 0 10px;-webkit-user-select:none;-moz-user-select:none;user-select:none;pointer-events:none;filter:url("data:image/svg+xml;utf9,<svg%20version='1.1'%20xmlns='http://www.w3.org/2000/svg'><filter%20id='blur'><feGaussianBlur%20stdDeviation='10'%20/></filter></svg>#blur");-webkit-filter:blur(10px);-ms-filter:blur(10px);-o-filter:blur(10px);filter:blur(10px)}html.om-mobile-position,html.om-mobile-position body{position:fixed!important}html.om-ios-form,html.om-ios-form body{-webkit-transform:translateZ(0)!important;transform:translateZ(0)!important;-webkit-overflow-scrolling:touch!important;height:100%!important;overflow:auto!important}html.om-position-popup body{overflow:hidden!important}html.om-position-floating-top{transition:padding-top .5s ease!important}html.om-position-floating-bottom{transition:padding-bottom .5s ease!important}html.om-reset-dimensions{height:100%!important;width:100%!important}</style><script type="text/javascript" async="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/tagjs"></script><script src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/webfont.js" async=""></script><img src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/a.htm" width="1" height="1" border="0"><img src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/a.gif" width="1" height="1" border="0"><img src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/tr_003.gif" width="1" height="1" border="0"><img src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/seg.gif" width="1" height="1" border="0"><img src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/tr.gif" width="1" height="1" border="0"><img src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/seg_003.gif" width="1" height="1" border="0"><img src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/tr_002.gif" width="1" height="1" border="0"><img src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/seg_002.gif" width="1" height="1" border="0"><style type="text/css">
  /* === Form-Specific Styles === */
  /* stylelint-disable */

  #drip-129969 .drip-content,
  #drip-129969 .drip-header {
    background: rgb(223,75,75) !important;
    background: rgba(223,75,75,0.90) !important;
  }

  #drip-129969 .drip-content h3 {
    color: #e56f6f !important;
    font-size: 23px !important;
  }

  #drip-129969 .drip-submit-button {
    background-color: #e56f6f !important;
    font-size: 13px !important;
  }

  #drip-129969 .drip-submit-button:hover {
    background-color: #e25d5d !important;
  }

  #drip-129969 .drip-submit-button:active {
    background-color: #c94444 !important;
  }

  #drip-129969 dl dt,
  #drip-129969 .drip-content .drip-description,
  #drip-129969 .drip-content .classic--checkbox,
  #drip-129969 .drip-errors {
    font-size: 14px !important;
  }

  #drip-129969 .drip-text-field {
    font-size: 15px !important;
  }

  /* === Reset styles === */

  .drip-tab h1,
  .drip-tab h2,
  .drip-tab h3,
  .drip-tab div,
  .drip-tab dl,
  .drip-tab dt,
  .drip-tab dd,
  .drip-tab p,
  .drip-tab a,
  .drip-tab .drip-text-field,
  .drip-tab .drip-text-field:focus,
  .drip-tab .drip-submit-button {
    margin: 0;
    padding: 0;
    border: 0;
    font-size: 100%;
    font: inherit;
    vertical-align: baseline;
    float: none;
    width: auto;
    background-image: none;
    letter-spacing: 0;
    -webkit-box-shadow: none;
       -moz-box-shadow: none;
            box-shadow: none;
    -webkit-text-shadow: none !important;
       -moz-text-shadow: none !important;
            text-shadow: none !important;
  }

  .drip-tab a {
    text-decoration: none;
  }

  .drip-tab :focus {
    outline: 0;
  }

  /* === Clearfix === */

  .drip-clearfix:after {
    visibility: hidden;
    display: block;
    font-size: 0;
    content: " ";
    clear: both;
    height: 0;
  }
  * html .drip-clearfix             { zoom: 1; } /* IE6 */
  *:first-child+html .drip-clearfix { zoom: 1; } /* IE7 */

  /* === Main Container === */

  .drip-tab-container * {
    box-sizing: content-box;
  }

  /* === Content === */

  .drip-tab .drip-content {
    margin: 0;
    padding: 5px;
    width: 330px;
    position: fixed;
    font-size: 100%;
    font: inherit;
    z-index: 10000;
    color: #333;
    vertical-align: baseline;
    text-align: left;
    box-sizing: border-box;
    -webkit-box-shadow: 0px 0px 20px rgba(0,0,0,0.25);
       -moz-box-shadow: 0px 0px 20px rgba(0,0,0,0.25);
            box-shadow: 0px 0px 20px rgba(0,0,0,0.25);
  }

  .drip-tab.bottom .drip-content {
    bottom: -800px;
    -webkit-border-radius: 8px 8px 0 0;
       -moz-border-radius: 8px 8px 0 0;
            border-radius: 8px 8px 0 0;
    -webkit-transition: bottom 200ms ease-in;
       -moz-transition: bottom 200ms ease-in;
         -o-transition: bottom 200ms ease-in;
            transition: bottom 200ms ease-in;
  }

  .drip-tab.bottom.left .drip-content {
    left: 40px;
  }

  .drip-tab.bottom.right .drip-content {
    right: 40px;
  }

  .drip-tab.image-left .drip-content,
  .drip-tab.image-right .drip-content {
    width: 510px;
  }

  .drip-tab.side .drip-content {
    top: 10%;
  }

  .drip-tab.side.right .drip-content {
    right: -550px;
    -webkit-border-radius: 8px 0 0 8px;
       -moz-border-radius: 8px 0 0 8px;
            border-radius: 8px 0 0 8px;
    -webkit-transition: right 200ms ease-in;
       -moz-transition: right 200ms ease-in;
         -o-transition: right 200ms ease-in;
            transition: right 200ms ease-in;
  }

  .drip-tab.side.left .drip-content {
    left: -550px;
    -webkit-border-radius: 0 8px 8px 0;
       -moz-border-radius: 0 8px 8px 0;
            border-radius: 0 8px 8px 0;
    -webkit-transition: left 200ms ease-in;
       -moz-transition: left 200ms ease-in;
         -o-transition: left 200ms ease-in;
            transition: left 200ms ease-in;
  }

  .drip-tab.mobile .drip-content {
    width: 100% !important;
    bottom: -800px;
    left: 0;
    -webkit-border-radius: 0;
       -moz-border-radius: 0;
            border-radius: 0;
    -webkit-transition: bottom 200ms ease-in;
       -moz-transition: bottom 200ms ease-in;
         -o-transition: bottom 200ms ease-in;
            transition: bottom 200ms ease-in;
  }

  .drip-tab.drip-scrollable .drip-content {
    overflow-y: scroll;
  }

  /* === Header === */

  .drip-tab .drip-header {
    margin: 0;
    padding: 0;
    position: fixed;
    font-size: 100%;
    font: inherit;
    z-index: 10000;
    color: #333;
    vertical-align: baseline;
    text-align: left;
    -webkit-border-radius: 8px 8px 0 0;
       -moz-border-radius: 8px 8px 0 0;
            border-radius: 8px 8px 0 0;
    -webkit-box-shadow: 0px 10px 28px rgba(0,0,0,0.36);
       -moz-box-shadow: 0px 10px 28px rgba(0,0,0,0.36);
            box-shadow: 0px 10px 28px rgba(0,0,0,0.36);
  }

  .drip-tab.bottom .drip-header {
    width: 330px;
    bottom: 0;
    -webkit-transition: bottom 200ms ease-in;
       -moz-transition: bottom 200ms ease-in;
         -o-transition: bottom 200ms ease-in;
            transition: bottom 200ms ease-in;
  }

  .drip-tab.bottom .drip-header.drip-hidden {
    bottom: -800px;
  }

  .drip-tab.bottom.left .drip-header {
    left: 40px;
  }

  .drip-tab.bottom.right .drip-header {
    right: 40px;
  }

  .drip-tab.bottom.image-left .drip-header,
  .drip-tab.bottom.image-right .drip-header {
    width: 510px;
  }

  .drip-tab.side .drip-header {
    width: 330px;
    top: 10%;
  }

  .drip-tab.side.right .drip-header {
    right: -100px;
    -webkit-transition: right 400ms ease-in;
       -moz-transition: right 400ms ease-in;
         -o-transition: right 400ms ease-in;
            transition: right 400ms ease-in;
    -webkit-transform: rotate(-90deg) !important;
       -moz-transform: rotate(-90deg) !important;
        -ms-transform: rotate(-90deg) !important;
         -o-transform: rotate(-90deg) !important;
            transform: rotate(-90deg) !important;
    -webkit-transform-origin: right center;
       -moz-transform-origin: right center;
         -o-transform-origin: right center;
            transform-origin: right center;
  }

  .drip-tab.side.right .drip-header.drip-hidden {
    right: -100px;
  }

  .drip-tab.side.left .drip-header {
    left: -100px;
    -webkit-transition: left 400ms ease-in;
       -moz-transition: left 400ms ease-in;
         -o-transition: left 400ms ease-in;
            transition: left 400ms ease-in;
    -webkit-transform: rotate(90deg) !important;
       -moz-transform: rotate(90deg) !important;
        -ms-transform: rotate(90deg) !important;
         -o-transform: rotate(90deg) !important;
            transform: rotate(90deg) !important;
    -webkit-transform-origin: left center;
       -moz-transform-origin: left center;
         -o-transform-origin: left center;
            transform-origin: left center;
  }

  .drip-tab.side.left .drip-header.drip-hidden {
    left: -100px;
  }

  .drip-tab.mobile .drip-header {
    width: 100% !important;
    bottom: 0;
    left: 0;
    -webkit-border-radius: 0;
       -moz-border-radius: 0;
            border-radius: 0;
    -webkit-transition: bottom 200ms ease-in;
       -moz-transition: bottom 200ms ease-in;
         -o-transition: bottom 200ms ease-in;
            transition: bottom 200ms ease-in;
  }

  .drip-tab.mobile .drip-header.drip-hidden {
    bottom: -300px;
  }

  /* === Header Toggle === */

  .drip-tab .drip-toggle {
    display: block;
    text-decoration: none;
    padding: 10px 50px 10px 20px; /* extra padding for the arrow */
  }

  /* === Teaser === */

  .drip-tab .drip-header h2 {
    display: block;
    margin: 0 !important;
    padding: 0 !important;
    border: 0 !important;
    font-size: 14px !important;
    line-height: 1.5 !important;
    font-weight: bold !important;
    text-align: left !important;
    color: #fff !important;
    clear: none !important;
    letter-spacing: 0 !important;
    width: auto !important;
  }

  /* === Arrows === */

  .drip-tab .drip-header span.drip-arrow {
    display: block;
    position: absolute;
    margin: 0;
    padding: 0;
    width: 0;
    height: 0;
    line-height: 0;
    top: 17px;
    right: 32px;
  }

  /* === Panel === */

  .drip-tab .drip-content > div.drip-panel {
    padding: 15px 15px 12px;
    background-color: #fff;
    -webkit-border-radius: 6px;
       -moz-border-radius: 6px;
            border-radius: 6px;
  }

  /* === Powered By === */

  .drip-tab .drip-powered-by {
    padding: 8px;
    margin-bottom: -5px;
    font-family: Helvetica, Arial, sans-serif;
    text-align: left;
    font-weight: bold;
    font-size: 10px;
    line-height: 16px;
    color: #ffffff;
    letter-spacing: 1px;
    text-align: center;
    text-transform: uppercase;
    display: -webkit-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .drip-tab .drip-powered-by a {
    color: #ffffff !important;
    text-decoration: underline !important;
    letter-spacing: 1px;
    margin-left: 6px;
  }

  /* === Content Headings & Paragraphs === */

  .drip-tab .drip-content h3 {
    display: block;
    margin: 0 20px 0 0 !important;
    padding: 0 0 15px 0 !important;
    line-height: 1.4 !important;
    font-weight: bold !important;
    text-align: left !important;
    color: #4477bd !important;
    clear: none !important;
  }

  .drip-tab .drip-content .drip-description {
    margin: 0;
    padding: 0 0 20px 0;
    line-height: 1.6;
    text-align: left;
  }

  .drip-tab.image-left .drip-content .drip-description {
    margin-left: 170px;
  }

  .drip-tab.image-right .drip-content .drip-description {
    margin-right: 170px;
  }

  @media screen and (max-width: 510px) {
    .drip-tab.image-left .drip-content .drip-description {
      margin-left: 0; /* 120px; */
    }

    .drip-tab.image-right .drip-content .drip-description {
      margin-right: 0; /* 120px; */
    }
  }

  .drip-tab .drip-content .drip-description a {
    text-decoration: underline;
  }

  .drip-tab .drip-content .drip-description em {
    font-style: italic;
  }

  .drip-tab .drip-content .drip-description ul,
  .drip-tab .drip-content .drip-description ol {
    list-style-position: outside;
    margin: 8px 0 8px 30px;
  }

  .drip-tab .drip-content .drip-description ul li
  .drip-tab .drip-content .drip-description ol li {
    padding: 0;
  }

  .drip-tab .drip-content img.drip-image {
    margin-bottom: 20px;
  }

  .drip-tab.image-left .drip-content img.drip-image {
    float: left;
    width: 150px;
  }

  .drip-tab.image-right .drip-content img.drip-image {
    float: right;
    width: 150px;
  }

  @media screen and (max-width: 510px) {
    .drip-tab.image-left .drip-content img.drip-image {
      margin-right: 20px;
      width: 100px;
    }

    .drip-tab.image-right .drip-content img.drip-image {
      margin-left: 20px;
      width: 100px;
    }
  }

  .drip-tab .drip-content a.drip-close {
    font-family: Arial, Helvetica, sans-serif;
    margin: -1px 0 0 0;
    float: right;
    font-size: 28px;
    line-height: 15px;
    font-weight: normal;
    color: #333;
    opacity: 0.4;
  }

  .drip-tab .drip-content a.drip-close:hover {
    text-decoration: none;
    cursor: pointer;
    opacity: 0.6;
  }

  /* === Content Subscribe Form === */

  .drip-tab form {
    margin: 0 !important;
    padding: 0 !important;
  }

  .drip-tab dl {
    display: block;
    margin: 0;
    padding: 0;
  }

  .drip-tab dl dt {
    display: block;
    padding: 0 0 5px 0;
    font-weight: bold;
  }

  .drip-tab dl.no-labels dt {
    display: none;
  }

  .drip-tab dl dd {
    display: block;
    padding: 0 0 10px 0;
  }

  .drip-tab .drip-text-field {
    margin: 0 !important;
    padding: 6px !important;
    height: auto !important;
    width: 100% !important;
    color: #333 !important;
    background-color: #fff !important;
    border: 1px solid #c4c4c4 !important;
    -webkit-box-shadow: inset 0 0 3px rgba(0,0,0,0.18) !important;
       -moz-box-shadow: inset 0 0 3px rgba(0,0,0,0.18) !important;
            box-shadow: inset 0 0 3px rgba(0,0,0,0.18) !important;
    -webkit-border-radius: 4px !important;
       -moz-border-radius: 4px !important;
            border-radius: 4px !important;
    -webkit-box-sizing: border-box !important;
       -moz-box-sizing: border-box !important;
        -ms-box-sizing: border-box !important;
            box-sizing: border-box !important;
    background-image: none !important;
    min-width: 0 !important;
    min-height: 0 !important;
  }

  .drip-tab .drip-text-field::-webkit-input-placeholder { /* WebKit browsers */
    color: #999999 !important;
  }
  .drip-tab .drip-text-field:-moz-placeholder { /* Mozilla Firefox 4 to 18 */
    color: #999999 !important;
  }
  .drip-tab .drip-text-field::-moz-placeholder { /* Mozilla Firefox 19+ */
    color: #999999 !important;
  }
  .drip-tab .drip-text-field:-ms-input-placeholder { /* Internet Explorer 10+ */
    color: #999999 !important;
  }

  .drip-tab .drip-text-field:focus {
    border-color: #a4a4a4 !important;
    outline: 0;
    background-image: none;
    background-color: #fff !important;
  }

  .drip-tab.mobile .drip-text-field {
    font-size: 16px;
  }

  .drip-tab .drip-errors {
    padding: 5px 0 0 0;
    font-weight: normal;
    color: red;
  }

  .drip-tab .drip-submit-button {
    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif !important;
    padding: 3px 12px !important;
    color: #ffffff !important;
    font-weight: bold !important;
    line-height: 1.6 !important;
    border: 0 !important;
    -webkit-border-radius: 15px !important;
       -moz-border-radius: 15px !important;
            border-radius: 15px !important;
    cursor: pointer !important;
    background-image: none !important;
    min-width: 0 !important;
    min-height: 0 !important;
    height: auto;
  }

  .drip-tab .drip-submit-button:hover {
    background-image: none !important;
  }

  .drip-tab .drip-submit-button:active {
    background-image: none !important;
  }

  /* checkbox */
  .drip-tab .classic--checkbox.hidden {
    margin-bottom: -8px;
    display: none;
  }

  .drip-tab .classic--checkbox input[type="checkbox"] {
    display: inline-block;
    width: auto;
  }

  /* stylelint-enable */

</style><meta class="foundation-mq"><link rel="stylesheet" href="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/css_002.css" media="all"><link rel="stylesheet" href="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/css.css" media="all"><script src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/analytics.js" async=""></script></head>
<body class="post-template-default single single-post postid-8981 single-format-standard chrome alt-style-default two-col-left width-960 two-col-left-960 full-width full-header full-footer">
<div id="wrapper">

	<div id="inner-wrapper">

	    <!--#header-container-->
    <div id="header-container">
<h3 class="nav-toggle icon"><a href="#navigation">Navigation</a></h3>

	<header id="header" class="col-full">

		<div id="logo">
<a href="https://www.pyimagesearch.com/" title="Be awesome at OpenCV, Python, deep learning, and computer vision"><img src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/logo.png" alt="PyImageSearch"></a>
<span class="site-title"><a href="https://www.pyimagesearch.com/">PyImageSearch</a></span>
<span class="site-description">Be awesome at OpenCV, Python, deep learning, and computer vision</span>
</div>

	</header>

	    </div><!--/#header-container-->
    <!--#nav-container-->
    <div id="nav-container">
<nav id="navigation" class="col-full" role="navigation">

	<section class="menus">

		<a href="https://www.pyimagesearch.com/" class="nav-home"><span>Home</span></a>

	<h3>Main Menu</h3><ul id="main-nav" class="nav fl"><li id="menu-item-4519" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4519"><a href="https://www.pyimagesearch.com/start-here-learn-computer-vision-opencv/">Start Here</a></li>
<li id="menu-item-2616" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2616"><a href="https://www.pyimagesearch.com/practical-python-opencv/">Practical Python and OpenCV</a></li>
<li id="menu-item-2617" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2617"><a href="https://www.pyimagesearch.com/pyimagesearch-gurus/">PyImageSearch Gurus</a></li>
<li id="menu-item-2615" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2615"><a href="https://www.pyimagesearch.com/opencv-tutorials-resources-guides/">OpenCV 3 &amp; 4 Tutorials</a></li>
<li id="menu-item-9774" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-9774"><a href="https://www.pyimagesearch.com/free-opencv-computer-vision-deep-learning-crash-course/">FREE Crash Course</a></li>
<li id="menu-item-2619" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2619"><a href="https://www.pyimagesearch.com/about/">About</a></li>
<li id="menu-item-6744" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-6744"><a href="https://www.pyimagesearch.com/contact/">Contact</a></li>
</ul>
	</section><!-- /.menus -->

	<a href="#top" class="nav-close"><span>Return to Content</span></a>

</nav>
    </div><!--/#nav-container-->
       
    <!-- #content Starts -->
	    <div id="content" class="col-full">
    
    	<div id="main-sidebar-container">    

            <!-- #main Starts -->
                        <section id="main">                       
<article class="post-8981 post type-post status-publish format-standard hentry category-deep-learning-2 category-object-detection category-tutorials tag-cnn tag-convolutional-neural-network tag-machine-learning tag-object-detection tag-yolo">
	<header>
	<h1 class="title">YOLO object detection with OpenCV</h1>	</header>
<div class="post-meta"><span class="small">By</span> <span class="author vcard"><span class="fn"><a href="https://www.pyimagesearch.com/author/adrian/" title="Posts by Adrian Rosebrock" rel="author">Adrian Rosebrock</a></span></span> <span class="small">on</span> <abbr class="date time published" title="2018-11-12T10:00:55-0400">November 12, 2018</abbr>  <span class="small">in</span> <span class="categories"><a href="https://www.pyimagesearch.com/category/deep-learning-2/" title="View all items in Deep Learning">Deep Learning</a>, <a href="https://www.pyimagesearch.com/category/object-detection/" title="View all items in Object Detection">Object Detection</a>, <a href="https://www.pyimagesearch.com/category/tutorials/" title="View all items in Tutorials">Tutorials</a></span>  
</div> <!-- Close out Post Meta div -->

<div id="pyis-optinmonster-sticky-anchor"></div>

<div id="pyis-optinmonster-sticky-bar" data-sticky-container="" class="sticky-container" style="height: 67px;">

	<div class="sticky is-stuck is-at-top" data-sticky="univmt-sticky" data-options="topAnchor: pyis-optinmonster-sticky-anchor:top; marginTop: 0; stickyOn: small;" data-resize="lnnv47-sticky" data-mutate="lnnv47-sticky" style="max-width: 622.933px; margin-top: 0em; top: 0px; bottom: auto;" data-events="resize">
		
		<a href="https://app.monstercampaigns.com/c/tortsem7qkvyuxc4cyfi/" id="pyis-optinmonster-open-modal" data-optin-slug="tortsem7qkvyuxc4cyfi">
			
			<img src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/python_icon.png" alt="Python File Icon">
			
			<span class="link-text">
			
				Click here to download the source code to this post				
			</span>
			
			<div class="clearfix"></div>
			
		</a>
		
	</div>
	
<!-- Our div gets closed out by the one originally intended for Post Meta --></div>
	<section class="entry">
<p><img class="aligncenter size-full" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/yolo_car_chase_01_output.gif" width="600"></p>
<p>In this tutorial, you’ll learn how to use the YOLO object detector to
 detect objects in both images and video streams using Deep Learning, 
OpenCV, and Python.</p>
<p>By applying object detection, you’ll not only be able to determine <em>what</em> is in an image, but also <em>where</em> a given object resides!</p>
<p>We’ll start with a brief discussion of the YOLO object detector, including how the object detector works.</p>
<p>From there we’ll use OpenCV, Python, and deep learning to:</p>
<ol>
<li>Apply the YOLO object detector to images</li>
<li>Apply YOLO to video streams</li>
</ol>
<p>We’ll wrap up the tutorial by discussing some of the limitations and 
drawbacks of the YOLO object detector, including some of my personal 
tips and suggestions.</p>
<p><strong>To learn how use YOLO for object detection with OpenCV, <em>just keep reading!</em></strong></p>
<div style="padding-top: 10px; padding-bottom: 15px; padding-right: 10px; height: 70px; background: url('https://www.pyimagesearch.com/wp-content/uploads/2014/02/download-code-icon.png'); background-size: 70px 70px; background-repeat: no-repeat;">
<p style="margin-top: 1px; margin-left: 80px; font-weight: bold;">Looking for the source code to this post?<br>
<a id="scroll_to_code" href="#">Jump right to the downloads section.</a></p>
</div>
<h2>YOLO Object detection with OpenCV</h2>
<p><iframe src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/eeIEH2wjvhg_002.htm" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" width="500" height="281" frameborder="0"></iframe></p>
<p>In the rest of this tutorial we’ll:</p>
<ul>
<li>Discuss the YOLO object detector model and architecture</li>
<li>Utilize YOLO to detect objects in images</li>
<li>Apply YOLO to detect objects in video streams</li>
<li>Discuss some of the limitations and drawbacks of the YOLO object detector</li>
</ul>
<p>Let’s dive in!</p>
<h3>What is the YOLO object detector?</h3>
<div id="attachment_8989" style="max-width: 610px" class="wp-caption aligncenter"><a href="https://www.pyimagesearch.com/wp-content/uploads/2018/11/yolo_design.jpg"><img class="wp-image-8989 size-full" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/yolo_design.jpg" alt="" srcset="https://www.pyimagesearch.com/wp-content/uploads/2018/11/yolo_design.jpg 600w, https://www.pyimagesearch.com/wp-content/uploads/2018/11/yolo_design-300x191.jpg 300w" sizes="(max-width: 600px) 100vw, 600px" width="600" height="381"></a><p class="wp-caption-text"><strong>Figure 1:</strong> A simplified illustration of the YOLO object detector pipeline (<a href="https://arxiv.org/abs/1506.02640" target="_blank" rel="noopener">source</a>). We’ll use YOLO with OpenCV in this blog post.</p></div>
<p>When it comes to deep learning-based object detection, there are three primary object detectors you’ll encounter:</p>
<ul>
<li>R-CNN and their variants, including the original R-CNN, Fast R- CNN, and Faster R-CNN</li>
<li>Single Shot Detector (SSDs)</li>
<li>YOLO</li>
</ul>
<p>R-CNNs are one of the first deep learning-based object detectors and are an example of a <em><strong>two-stage detector.</strong></em></p>
<ol>
<li>In the first R-CNN publication, <a href="https://arxiv.org/abs/1311.2524" target="_blank" rel="noopener"><em>Rich feature hierarchies for accurate object detection and semantic segmentation</em></a>, (2013) Girshick et al. proposed an object detector that required an algorithm such as <a href="http://www.huppelen.nl/publications/selectiveSearchDraft.pdf" target="_blank" rel="noopener">Selective Search</a> (or equivalent) to propose candidate bounding boxes that could contain objects.</li>
<li>These regions were then passed into a CNN for classification, 
ultimately leading to one of the first deep learning-based object 
detectors.</li>
</ol>
<p>The problem with the standard R-CNN method was that it was <em>painfully slow</em> and not a complete end-to-end object detector.</p>
<p>Girshick et al. published a second paper in 2015, entitled <a href="https://arxiv.org/abs/1504.08083" target="_blank" rel="noopener"><em>Fast R- CNN</em></a>.
 The Fast R-CNN algorithm made considerable improvements to the original
 R-CNN, namely increasing accuracy and reducing the time it took to 
perform a forward pass; however, the model still relied on an external 
region proposal algorithm.</p>
<p>It wasn’t until Girshick et al.’s follow-up 2015 paper, <a href="https://arxiv.org/abs/1506.01497" target="_blank" rel="noopener"><em>Faster R-CNN: Towards Real-Time Object Detection with Region Proposal Networks</em></a>,
 that R-CNNs became a true end-to-end deep learning object detector by 
removing the Selective Search requirement and instead relying on a 
Region Proposal Network (RPN) that is (1) fully convolutional and (2) 
can predict the object bounding boxes and “objectness” scores (i.e., a 
score quantifying how likely it is a region of an image may contain an 
image). The outputs of the RPNs are then passed into the R-CNN component
 for final classification and labeling.</p>
<p><strong>While R-CNNs tend to very accurate, the biggest problem with 
the R-CNN family of networks is their speed — they were incredibly slow,
 obtaining only 5 FPS on a GPU.</strong></p>
<p>To help increase the speed of deep learning-based object detectors, both Single Shot Detectors (SSDs) and YOLO use a <strong><em>one-stage detector strategy</em></strong>.</p>
<p>These algorithms treat object detection as a regression problem, 
taking a given input image and simultaneously learning bounding box 
coordinates and corresponding class label probabilities.</p>
<p><strong>In general, single-stage detectors tend to be less accurate than two-stage detectors <em>but are significantly faster.</em></strong></p>
<p>YOLO is a great example of a single stage detector.</p>
<p>First introduced in 2015 by Redmon et al., their paper, <a href="https://arxiv.org/abs/1506.02640" target="_blank" rel="noopener"><em>You Only Look Once: Unified, Real-Time Object Detection</em></a>, details an object detector capable of super real-time object detection, obtaining&nbsp;<strong>45 FPS</strong> on a GPU.</p>
<p><em><strong>Note:</strong> A smaller variant of their model called “Fast YOLO” claims to achieve 155 FPS on a GPU.</em></p>
<p>YOLO has gone through a number of different iterations, including <a href="https://arxiv.org/abs/1612.08242" target="_blank" rel="noopener"><em>YOLO9000: Better, Faster, Stronger</em></a> (i.e., YOLOv2), capable of detecting over 9,000 object detectors.</p>
<p>Redmon and Farhadi are able to achieve such a large number of object 
detections by performing joint training for both object detection and 
classification. Using joint training the authors trained YOLO9000 
simultaneously on both the ImageNet classification dataset and COCO 
detection dataset. The result is a YOLO model, called YOLO9000, that can
 predict detections for object classes that don’t have labeled detection
 data.</p>
<p>While interesting and novel, YOLOv2’s performance was a bit underwhelming given the title and abstract of the paper.</p>
<p>On the 156 class version of COCO, YOLO9000 achieved 16% mean Average 
Precision (mAP), and yes, while YOLO can detect 9,000 separate classes, 
the accuracy is not quite what we would desire.</p>
<p>Redmon and Farhadi recently published a new YOLO paper, <a href="https://arxiv.org/abs/1804.02767" target="_blank" rel="noopener"><em>YOLOv3: An Incremental Improvement</em></a>
 (2018). YOLOv3 is significantly larger than previous models but is, in 
my opinion, the best one yet out of the YOLO family of object detectors.</p>
<p>We’ll be using YOLOv3 in this blog post, in particular, YOLO trained on the COCO dataset.</p>
<p>The COCO dataset consists of 80 labels, including, but not limited to:</p>
<ul>
<li>People</li>
<li>Bicycles</li>
<li>Cars and trucks</li>
<li>Airplanes</li>
<li>Stop signs and fire hydrants</li>
<li>Animals, including cats, dogs, birds, horses, cows, and sheep, to name a few</li>
<li>Kitchen and dining objects, such as wine glasses, cups, forks, knives, spoons, etc.</li>
<li><em>…and much more!</em></li>
</ul>
<p><strong>You can find a full list of what YOLO trained on the COCO dataset can detect <a href="https://github.com/pjreddie/darknet/blob/master/data/coco.names" target="_blank" rel="noopener">using this link</a>.</strong></p>
<p>I’ll wrap up this section by saying that any academic needs to read 
Redmon’s YOLO papers and tech reports — not only are they novel and 
insightful they are incredibly entertaining as well.</p>
<p>But seriously, if you do nothing else today <a href="https://arxiv.org/pdf/1804.02767.pdf" target="_blank" rel="noopener"><strong>read the YOLOv3 tech report</strong>.</a></p>
<p>It’s only 6 pages and one of those pages is just references/citations.</p>
<p>Furthermore, the tech report is honest in a way that academic papers rarely, if ever, are.</p>
<h3>Project structure</h3>
<p>Let’s take a look at today’s project layout. You can use your OS’s 
GUI (Finder for OSX, Nautilus for Ubuntu), but you may find it easier 
and faster to use the 
			<span id="crayon-5c93e5d088720632733727" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">tree</span></span></span>&nbsp; command in your terminal:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93e5d088738866084620" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">YOLO Object Detection with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Shell</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft">$ tree
.
├── images
│&nbsp;&nbsp; ├── baggage_claim.jpg
│&nbsp;&nbsp; ├── dining_table.jpg
│&nbsp;&nbsp; ├── living_room.jpg
│&nbsp;&nbsp; └── soccer.jpg
├── output
│&nbsp;&nbsp; ├── airport_output.avi
│&nbsp;&nbsp; ├── car_chase_01_output.avi
│&nbsp;&nbsp; ├── car_chase_02_output.avi
│&nbsp;&nbsp; └── overpass_output.avi
├── videos
│&nbsp;&nbsp; ├── airport.mp4
│&nbsp;&nbsp; ├── car_chase_01.mp4
│&nbsp;&nbsp; ├── car_chase_02.mp4
│&nbsp;&nbsp; └── overpass.mp4
├── yolo-coco
│&nbsp;&nbsp; ├── coco.names
│&nbsp;&nbsp; ├── yolov3.cfg
│&nbsp;&nbsp; └── yolov3.weights
├── yolo.py
└── yolo_video.py

4 directories, 19 files</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93e5d088738866084620-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088738866084620-2">2</div><div class="crayon-num" data-line="crayon-5c93e5d088738866084620-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088738866084620-4">4</div><div class="crayon-num" data-line="crayon-5c93e5d088738866084620-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088738866084620-6">6</div><div class="crayon-num" data-line="crayon-5c93e5d088738866084620-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088738866084620-8">8</div><div class="crayon-num" data-line="crayon-5c93e5d088738866084620-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088738866084620-10">10</div><div class="crayon-num" data-line="crayon-5c93e5d088738866084620-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088738866084620-12">12</div><div class="crayon-num" data-line="crayon-5c93e5d088738866084620-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088738866084620-14">14</div><div class="crayon-num" data-line="crayon-5c93e5d088738866084620-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088738866084620-16">16</div><div class="crayon-num" data-line="crayon-5c93e5d088738866084620-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088738866084620-18">18</div><div class="crayon-num" data-line="crayon-5c93e5d088738866084620-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088738866084620-20">20</div><div class="crayon-num" data-line="crayon-5c93e5d088738866084620-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088738866084620-22">22</div><div class="crayon-num" data-line="crayon-5c93e5d088738866084620-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088738866084620-24">24</div><div class="crayon-num" data-line="crayon-5c93e5d088738866084620-25">25</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93e5d088738866084620-1"><span class="crayon-sy">$</span><span class="crayon-h"> </span><span class="crayon-i">tree</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088738866084620-2"><span class="crayon-sy">.</span></div><div class="crayon-line" id="crayon-5c93e5d088738866084620-3">├──<span class="crayon-h"> </span><span class="crayon-i">images</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088738866084620-4">│&nbsp;&nbsp;<span class="crayon-h"> </span>├──<span class="crayon-h"> </span><span class="crayon-v">baggage_claim</span><span class="crayon-e">.jpg</span></div><div class="crayon-line" id="crayon-5c93e5d088738866084620-5">│&nbsp;&nbsp;<span class="crayon-h"> </span>├──<span class="crayon-h"> </span><span class="crayon-v">dining_table</span><span class="crayon-e">.jpg</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088738866084620-6">│&nbsp;&nbsp;<span class="crayon-h"> </span>├──<span class="crayon-h"> </span><span class="crayon-v">living_room</span><span class="crayon-e">.jpg</span></div><div class="crayon-line" id="crayon-5c93e5d088738866084620-7">│&nbsp;&nbsp;<span class="crayon-h"> </span>└──<span class="crayon-h"> </span><span class="crayon-v">soccer</span><span class="crayon-e">.jpg</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088738866084620-8">├──<span class="crayon-h"> </span><span class="crayon-i">output</span></div><div class="crayon-line" id="crayon-5c93e5d088738866084620-9">│&nbsp;&nbsp;<span class="crayon-h"> </span>├──<span class="crayon-h"> </span><span class="crayon-v">airport_output</span><span class="crayon-e">.avi</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088738866084620-10">│&nbsp;&nbsp;<span class="crayon-h"> </span>├──<span class="crayon-h"> </span><span class="crayon-v">car_chase_01_output</span><span class="crayon-e">.avi</span></div><div class="crayon-line" id="crayon-5c93e5d088738866084620-11">│&nbsp;&nbsp;<span class="crayon-h"> </span>├──<span class="crayon-h"> </span><span class="crayon-v">car_chase_02_output</span><span class="crayon-e">.avi</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088738866084620-12">│&nbsp;&nbsp;<span class="crayon-h"> </span>└──<span class="crayon-h"> </span><span class="crayon-v">overpass_output</span><span class="crayon-e">.avi</span></div><div class="crayon-line" id="crayon-5c93e5d088738866084620-13">├──<span class="crayon-h"> </span><span class="crayon-i">videos</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088738866084620-14">│&nbsp;&nbsp;<span class="crayon-h"> </span>├──<span class="crayon-h"> </span><span class="crayon-v">airport</span><span class="crayon-e">.mp4</span></div><div class="crayon-line" id="crayon-5c93e5d088738866084620-15">│&nbsp;&nbsp;<span class="crayon-h"> </span>├──<span class="crayon-h"> </span><span class="crayon-v">car_chase_01</span><span class="crayon-e">.mp4</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088738866084620-16">│&nbsp;&nbsp;<span class="crayon-h"> </span>├──<span class="crayon-h"> </span><span class="crayon-v">car_chase_02</span><span class="crayon-e">.mp4</span></div><div class="crayon-line" id="crayon-5c93e5d088738866084620-17">│&nbsp;&nbsp;<span class="crayon-h"> </span>└──<span class="crayon-h"> </span><span class="crayon-v">overpass</span><span class="crayon-e">.mp4</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088738866084620-18">├──<span class="crayon-h"> </span><span class="crayon-v">yolo</span><span class="crayon-o">-</span><span class="crayon-i">coco</span></div><div class="crayon-line" id="crayon-5c93e5d088738866084620-19">│&nbsp;&nbsp;<span class="crayon-h"> </span>├──<span class="crayon-h"> </span><span class="crayon-v">coco</span><span class="crayon-e">.names</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088738866084620-20">│&nbsp;&nbsp;<span class="crayon-h"> </span>├──<span class="crayon-h"> </span><span class="crayon-v">yolov3</span><span class="crayon-e">.cfg</span></div><div class="crayon-line" id="crayon-5c93e5d088738866084620-21">│&nbsp;&nbsp;<span class="crayon-h"> </span>└──<span class="crayon-h"> </span><span class="crayon-v">yolov3</span><span class="crayon-e">.weights</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088738866084620-22">├──<span class="crayon-h"> </span><span class="crayon-v">yolo</span><span class="crayon-e">.py</span></div><div class="crayon-line" id="crayon-5c93e5d088738866084620-23">└──<span class="crayon-h"> </span><span class="crayon-v">yolo_video</span><span class="crayon-e">.py</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088738866084620-24">&nbsp;</div><div class="crayon-line" id="crayon-5c93e5d088738866084620-25"><span class="crayon-cn">4</span><span class="crayon-h"> </span><span class="crayon-v">directories</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">19</span><span class="crayon-h"> </span><span class="crayon-v">files</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0031 seconds] -->
<p>Our project today consists of 4 directories and two Python scripts.</p>
<p>The directories (in order of importance) are:</p>
<ul>
<li>
			<span id="crayon-5c93e5d08873e295102883" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">yolo</span><span class="crayon-o">-</span><span class="crayon-v">coco</span><span class="crayon-o">/</span></span></span>&nbsp;: The YOLOv3 object detector pre-trained (on the COCO dataset) model files. These were trained by the <a href="https://pjreddie.com/darknet/yolo/" target="_blank" rel="noopener">Darknet team</a>.</li>
<li>
			<span id="crayon-5c93e5d088743463624506" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">images</span><span class="crayon-o">/</span></span></span>&nbsp;: This folder contains four static images which we’ll perform object detection on for testing and evaluation purposes.</li>
<li>
			<span id="crayon-5c93e5d08874e228029020" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">videos</span><span class="crayon-o">/</span></span></span>&nbsp;:
 After performing object detection with YOLO on images, we’ll process 
videos in real time. This directory contains four sample videos for you 
to test with.</li>
<li>
			<span id="crayon-5c93e5d088754937739045" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">output</span><span class="crayon-o">/</span></span></span>&nbsp;: Output videos that have been processed by YOLO and annotated with bounding boxes and class names can go in this folder.</li>
</ul>
<p>We’re reviewing two Python scripts — 
			<span id="crayon-5c93e5d088758664558533" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">yolo</span><span class="crayon-e">.py</span></span></span>&nbsp; and 
			<span id="crayon-5c93e5d08875c624614111" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">yolo_video</span><span class="crayon-e">.py</span></span></span>&nbsp;. The first script is for images and then we’ll take what we learn and apply it to video in the second script.</p>
<p>Are you ready?</p>
<h3>YOLO object detection in images</h3>
<p>Let’s get started applying the YOLO object detector to images!</p>
<p>Open up the 
			<span id="crayon-5c93e5d088760724198763" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">yolo</span><span class="crayon-e">.py</span></span></span>&nbsp; file in your project and insert the following code:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93e5d088765639400691" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">YOLO Object Detection with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft"># import the necessary packages
import numpy as np
import argparse
import time
import cv2
import os

# construct the argument parse and parse the arguments
ap = argparse.ArgumentParser()
ap.add_argument("-i", "--image", required=True,
	help="path to input image")
ap.add_argument("-y", "--yolo", required=True,
	help="base path to YOLO directory")
ap.add_argument("-c", "--confidence", type=float, default=0.5,
	help="minimum probability to filter weak detections")
ap.add_argument("-t", "--threshold", type=float, default=0.3,
	help="threshold when applying non-maxima suppression")
args = vars(ap.parse_args())</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93e5d088765639400691-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088765639400691-2">2</div><div class="crayon-num" data-line="crayon-5c93e5d088765639400691-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088765639400691-4">4</div><div class="crayon-num" data-line="crayon-5c93e5d088765639400691-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088765639400691-6">6</div><div class="crayon-num" data-line="crayon-5c93e5d088765639400691-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088765639400691-8">8</div><div class="crayon-num" data-line="crayon-5c93e5d088765639400691-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088765639400691-10">10</div><div class="crayon-num" data-line="crayon-5c93e5d088765639400691-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088765639400691-12">12</div><div class="crayon-num" data-line="crayon-5c93e5d088765639400691-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088765639400691-14">14</div><div class="crayon-num" data-line="crayon-5c93e5d088765639400691-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088765639400691-16">16</div><div class="crayon-num" data-line="crayon-5c93e5d088765639400691-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088765639400691-18">18</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93e5d088765639400691-1"><span class="crayon-c"># import the necessary packages</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088765639400691-2"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-e">numpy </span><span class="crayon-st">as</span><span class="crayon-h"> </span><span class="crayon-e">np</span></div><div class="crayon-line" id="crayon-5c93e5d088765639400691-3"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-k ">argparse</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088765639400691-4"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-k ">time</span></div><div class="crayon-line" id="crayon-5c93e5d088765639400691-5"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-e">cv2</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088765639400691-6"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-k ">os</span></div><div class="crayon-line" id="crayon-5c93e5d088765639400691-7">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088765639400691-8"><span class="crayon-c"># construct the argument parse and parse the arguments</span></div><div class="crayon-line" id="crayon-5c93e5d088765639400691-9"><span class="crayon-v">ap</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">argparse</span><span class="crayon-sy">.</span><span class="crayon-e">ArgumentParser</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088765639400691-10"><span class="crayon-v">ap</span><span class="crayon-sy">.</span><span class="crayon-e">add_argument</span><span class="crayon-sy">(</span><span class="crayon-s">"-i"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"--image"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">required</span><span class="crayon-o">=</span><span class="crayon-t">True</span><span class="crayon-sy">,</span></div><div class="crayon-line" id="crayon-5c93e5d088765639400691-11"><span class="crayon-h">	</span><span class="crayon-k ">help</span><span class="crayon-o">=</span><span class="crayon-s">"path to input image"</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088765639400691-12"><span class="crayon-v">ap</span><span class="crayon-sy">.</span><span class="crayon-e">add_argument</span><span class="crayon-sy">(</span><span class="crayon-s">"-y"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"--yolo"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">required</span><span class="crayon-o">=</span><span class="crayon-t">True</span><span class="crayon-sy">,</span></div><div class="crayon-line" id="crayon-5c93e5d088765639400691-13"><span class="crayon-h">	</span><span class="crayon-k ">help</span><span class="crayon-o">=</span><span class="crayon-s">"base path to YOLO directory"</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088765639400691-14"><span class="crayon-v">ap</span><span class="crayon-sy">.</span><span class="crayon-e">add_argument</span><span class="crayon-sy">(</span><span class="crayon-s">"-c"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"--confidence"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-k ">type</span><span class="crayon-o">=</span><span class="crayon-k ">float</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">default</span><span class="crayon-o">=</span><span class="crayon-cn">0.5</span><span class="crayon-sy">,</span></div><div class="crayon-line" id="crayon-5c93e5d088765639400691-15"><span class="crayon-h">	</span><span class="crayon-k ">help</span><span class="crayon-o">=</span><span class="crayon-s">"minimum probability to filter weak detections"</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088765639400691-16"><span class="crayon-v">ap</span><span class="crayon-sy">.</span><span class="crayon-e">add_argument</span><span class="crayon-sy">(</span><span class="crayon-s">"-t"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"--threshold"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-k ">type</span><span class="crayon-o">=</span><span class="crayon-k ">float</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">default</span><span class="crayon-o">=</span><span class="crayon-cn">0.3</span><span class="crayon-sy">,</span></div><div class="crayon-line" id="crayon-5c93e5d088765639400691-17"><span class="crayon-h">	</span><span class="crayon-k ">help</span><span class="crayon-o">=</span><span class="crayon-s">"threshold when applying non-maxima suppression"</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088765639400691-18"><span class="crayon-v">args</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">vars</span><span class="crayon-sy">(</span><span class="crayon-v">ap</span><span class="crayon-sy">.</span><span class="crayon-e">parse_args</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0046 seconds] -->
<p>All you need installed for this script OpenCV 3.4.2+ with Python bindings. You can find my <a href="https://www.pyimagesearch.com/opencv-tutorials-resources-guides/" target="_blank" rel="noopener">OpenCV installation tutorials here</a>,
 just keep in mind that OpenCV 4 is in beta right now — you may run into
 issues installing or running certain scripts since it’s not an official
 release. For the time being I recommend going for OpenCV 3.4.2+. You 
can actually be up and running in less than 5 minutes <a href="https://www.pyimagesearch.com/2018/09/19/pip-install-opencv/" target="_blank" rel="noopener">with pip</a> as well.</p>
<p>First, we import our required packages — as long as OpenCV and NumPy 
are installed, your interpreter will breeze past these lines.</p>
<p>Now let’s parse four command line arguments. Command line arguments 
are processed at runtime and allow us to change the inputs to our script
 from the terminal. If you aren’t familiar with them, I encourage you to
 read more in my <a href="https://www.pyimagesearch.com/2018/03/12/python-argparse-command-line-arguments/" target="_blank" rel="noopener">previous tutorial</a>. Our command line arguments include:</p>
<ul>
<li>
			<span id="crayon-5c93e5d08876a574444228" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-o">--</span><span class="crayon-v">image</span></span></span>&nbsp;: The path to the input image. We’ll detect objects in this image using YOLO.</li>
<li>
			<span id="crayon-5c93e5d088771640403306" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-o">--</span><span class="crayon-v">yolo</span></span></span>&nbsp;:
 The base path to the YOLO directory. Our script will then load the 
required YOLO files in order to perform object detection on the image.</li>
<li>
			<span id="crayon-5c93e5d088776130000436" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-o">--</span><span class="crayon-v">confidence</span></span></span>&nbsp;: Minimum probability to filter weak detections. I’ve given this a default value of 50% (
			<span id="crayon-5c93e5d08877a504290438" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-cn">0.5</span></span></span>&nbsp;), but you should feel free to experiment with this value.</li>
<li>
			<span id="crayon-5c93e5d08877e745288933" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-o">--</span><span class="crayon-v">threshold</span></span></span>&nbsp;: This is our non-maxima suppression threshold with a default value of 
			<span id="crayon-5c93e5d088783163677787" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-cn">0.3</span></span></span>&nbsp;. You can read more about <a href="https://www.pyimagesearch.com/2014/11/17/non-maximum-suppression-object-detection-python/" target="_blank" rel="noopener">non-maxima suppression here</a>.</li>
</ul>
<p>After parsing, the 
			<span id="crayon-5c93e5d088787030784193" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">args</span></span></span>&nbsp; variable is now a dictionary containing the key-value pairs for the command line arguments. You’ll see 
			<span id="crayon-5c93e5d08878b219479613" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">args</span></span></span>&nbsp; a number of times in the rest of this script.</p>
<p>Let’s load our class labels and set random colors for each:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93e5d088790382761237" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">YOLO Object Detection with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft"># load the COCO class labels our YOLO model was trained on
labelsPath = os.path.sep.join([args["yolo"], "coco.names"])
LABELS = open(labelsPath).read().strip().split("\n")

# initialize a list of colors to represent each possible class label
np.random.seed(42)
COLORS = np.random.randint(0, 255, size=(len(LABELS), 3),
	dtype="uint8")</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93e5d088790382761237-20">20</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088790382761237-21">21</div><div class="crayon-num" data-line="crayon-5c93e5d088790382761237-22">22</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088790382761237-23">23</div><div class="crayon-num" data-line="crayon-5c93e5d088790382761237-24">24</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088790382761237-25">25</div><div class="crayon-num" data-line="crayon-5c93e5d088790382761237-26">26</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088790382761237-27">27</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93e5d088790382761237-20"><span class="crayon-c"># load the COCO class labels our YOLO model was trained on</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088790382761237-21"><span class="crayon-v">labelsPath</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">os.path</span><span class="crayon-sy">.</span><span class="crayon-v">sep</span><span class="crayon-sy">.</span><span class="crayon-e">join</span><span class="crayon-sy">(</span><span class="crayon-sy">[</span><span class="crayon-v">args</span><span class="crayon-sy">[</span><span class="crayon-s">"yolo"</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"coco.names"</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d088790382761237-22"><span class="crayon-v">LABELS</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">open</span><span class="crayon-sy">(</span><span class="crayon-v">labelsPath</span><span class="crayon-sy">)</span><span class="crayon-sy">.</span><span class="crayon-e">read</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">.</span><span class="crayon-e">strip</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">.</span><span class="crayon-e">split</span><span class="crayon-sy">(</span><span class="crayon-s">"\n"</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088790382761237-23">&nbsp;</div><div class="crayon-line" id="crayon-5c93e5d088790382761237-24"><span class="crayon-c"># initialize a list of colors to represent each possible class label</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088790382761237-25"><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-k ">random</span><span class="crayon-sy">.</span><span class="crayon-e">seed</span><span class="crayon-sy">(</span><span class="crayon-cn">42</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d088790382761237-26"><span class="crayon-v">COLORS</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-k ">random</span><span class="crayon-sy">.</span><span class="crayon-e">randint</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">255</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">size</span><span class="crayon-o">=</span><span class="crayon-sy">(</span><span class="crayon-k ">len</span><span class="crayon-sy">(</span><span class="crayon-v">LABELS</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">3</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088790382761237-27"><span class="crayon-h">	</span><span class="crayon-v">dtype</span><span class="crayon-o">=</span><span class="crayon-s">"uint8"</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0026 seconds] -->
<p>Here we load all of our class 
			<span id="crayon-5c93e5d088794617630431" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">LABELS</span></span></span>&nbsp; (notice the first command line argument, 
			<span id="crayon-5c93e5d088798416447504" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">args</span><span class="crayon-sy">[</span><span class="crayon-s">"yolo"</span><span class="crayon-sy">]</span></span></span>&nbsp; being used) on&nbsp;<strong>Lines 21 and 22</strong>. Random 
			<span id="crayon-5c93e5d08879d114026415" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">COLORS</span></span></span>&nbsp; are then assigned to each label on&nbsp;<strong>Lines 25-27</strong>.</p>
<p>Let’s derive the paths to the YOLO weights and configuration files followed by loading YOLO from disk:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93e5d0887a1951290879" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">YOLO Object Detection with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft"># derive the paths to the YOLO weights and model configuration
weightsPath = os.path.sep.join([args["yolo"], "yolov3.weights"])
configPath = os.path.sep.join([args["yolo"], "yolov3.cfg"])

# load our YOLO object detector trained on COCO dataset (80 classes)
print("[INFO] loading YOLO from disk...")
net = cv2.dnn.readNetFromDarknet(configPath, weightsPath)</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93e5d0887a1951290879-29">29</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0887a1951290879-30">30</div><div class="crayon-num" data-line="crayon-5c93e5d0887a1951290879-31">31</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0887a1951290879-32">32</div><div class="crayon-num" data-line="crayon-5c93e5d0887a1951290879-33">33</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0887a1951290879-34">34</div><div class="crayon-num" data-line="crayon-5c93e5d0887a1951290879-35">35</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93e5d0887a1951290879-29"><span class="crayon-c"># derive the paths to the YOLO weights and model configuration</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0887a1951290879-30"><span class="crayon-v">weightsPath</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">os.path</span><span class="crayon-sy">.</span><span class="crayon-v">sep</span><span class="crayon-sy">.</span><span class="crayon-e">join</span><span class="crayon-sy">(</span><span class="crayon-sy">[</span><span class="crayon-v">args</span><span class="crayon-sy">[</span><span class="crayon-s">"yolo"</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"yolov3.weights"</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d0887a1951290879-31"><span class="crayon-v">configPath</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">os.path</span><span class="crayon-sy">.</span><span class="crayon-v">sep</span><span class="crayon-sy">.</span><span class="crayon-e">join</span><span class="crayon-sy">(</span><span class="crayon-sy">[</span><span class="crayon-v">args</span><span class="crayon-sy">[</span><span class="crayon-s">"yolo"</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"yolov3.cfg"</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0887a1951290879-32">&nbsp;</div><div class="crayon-line" id="crayon-5c93e5d0887a1951290879-33"><span class="crayon-c"># load our YOLO object detector trained on COCO dataset (80 classes)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0887a1951290879-34"><span class="crayon-k ">print</span><span class="crayon-sy">(</span><span class="crayon-s">"[INFO] loading YOLO from disk..."</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d0887a1951290879-35"><span class="crayon-v">net</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-v">dnn</span><span class="crayon-sy">.</span><span class="crayon-e">readNetFromDarknet</span><span class="crayon-sy">(</span><span class="crayon-v">configPath</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">weightsPath</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0017 seconds] -->
<p>To load YOLO from disk on&nbsp;<strong>Line 35</strong>, we’ll take advantage of OpenCV’s DNN function called 
			<span id="crayon-5c93e5d0887a8685884707" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-v">dnn</span><span class="crayon-sy">.</span><span class="crayon-v">readNetFromDarknet</span></span></span>&nbsp;. This function requires both a 
			<span id="crayon-5c93e5d0887ad188974911" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">configPath</span></span></span>&nbsp; and 
			<span id="crayon-5c93e5d0887b1144902299" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">weightsPath</span></span></span>&nbsp; which are established via command line arguments on&nbsp;<strong>Lines 30 and 31</strong>.</p>
<p>I cannot stress this enough: you’ll need at least OpenCV 3.4.2 to run this code as it has the updated 
			<span id="crayon-5c93e5d0887b5766130142" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">dnn</span></span></span>&nbsp; module required to load YOLO.</p>
<p>Let’s load the image and send it through the network:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93e5d0887b9103278393" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">YOLO Object Detection with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft"># load our input image and grab its spatial dimensions
image = cv2.imread(args["image"])
(H, W) = image.shape[:2]

# determine only the *output* layer names that we need from YOLO
ln = net.getLayerNames()
ln = [ln[i[0] - 1] for i in net.getUnconnectedOutLayers()]

# construct a blob from the input image and then perform a forward
# pass of the YOLO object detector, giving us our bounding boxes and
# associated probabilities
blob = cv2.dnn.blobFromImage(image, 1 / 255.0, (416, 416),
	swapRB=True, crop=False)
net.setInput(blob)
start = time.time()
layerOutputs = net.forward(ln)
end = time.time()

# show timing information on YOLO
print("[INFO] YOLO took {:.6f} seconds".format(end - start))</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93e5d0887b9103278393-37">37</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0887b9103278393-38">38</div><div class="crayon-num" data-line="crayon-5c93e5d0887b9103278393-39">39</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0887b9103278393-40">40</div><div class="crayon-num" data-line="crayon-5c93e5d0887b9103278393-41">41</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0887b9103278393-42">42</div><div class="crayon-num" data-line="crayon-5c93e5d0887b9103278393-43">43</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0887b9103278393-44">44</div><div class="crayon-num" data-line="crayon-5c93e5d0887b9103278393-45">45</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0887b9103278393-46">46</div><div class="crayon-num" data-line="crayon-5c93e5d0887b9103278393-47">47</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0887b9103278393-48">48</div><div class="crayon-num" data-line="crayon-5c93e5d0887b9103278393-49">49</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0887b9103278393-50">50</div><div class="crayon-num" data-line="crayon-5c93e5d0887b9103278393-51">51</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0887b9103278393-52">52</div><div class="crayon-num" data-line="crayon-5c93e5d0887b9103278393-53">53</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0887b9103278393-54">54</div><div class="crayon-num" data-line="crayon-5c93e5d0887b9103278393-55">55</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0887b9103278393-56">56</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93e5d0887b9103278393-37"><span class="crayon-c"># load our input image and grab its spatial dimensions</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0887b9103278393-38"><span class="crayon-v">image</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">imread</span><span class="crayon-sy">(</span><span class="crayon-v">args</span><span class="crayon-sy">[</span><span class="crayon-s">"image"</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d0887b9103278393-39"><span class="crayon-sy">(</span><span class="crayon-v">H</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-k ">W</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">image</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">[</span><span class="crayon-o">:</span><span class="crayon-cn">2</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0887b9103278393-40">&nbsp;</div><div class="crayon-line" id="crayon-5c93e5d0887b9103278393-41"><span class="crayon-c"># determine only the *output* layer names that we need from YOLO</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0887b9103278393-42"><span class="crayon-v">ln</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">net</span><span class="crayon-sy">.</span><span class="crayon-e">getLayerNames</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d0887b9103278393-43"><span class="crayon-v">ln</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-v">ln</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">net</span><span class="crayon-sy">.</span><span class="crayon-e">getUnconnectedOutLayers</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0887b9103278393-44">&nbsp;</div><div class="crayon-line" id="crayon-5c93e5d0887b9103278393-45"><span class="crayon-c"># construct a blob from the input image and then perform a forward</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0887b9103278393-46"><span class="crayon-c"># pass of the YOLO object detector, giving us our bounding boxes and</span></div><div class="crayon-line" id="crayon-5c93e5d0887b9103278393-47"><span class="crayon-c"># associated probabilities</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0887b9103278393-48"><span class="crayon-v">blob</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-v">dnn</span><span class="crayon-sy">.</span><span class="crayon-e">blobFromImage</span><span class="crayon-sy">(</span><span class="crayon-v">image</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-cn">255.0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-cn">416</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">416</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span></div><div class="crayon-line" id="crayon-5c93e5d0887b9103278393-49"><span class="crayon-h">	</span><span class="crayon-v">swapRB</span><span class="crayon-o">=</span><span class="crayon-t">True</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">crop</span><span class="crayon-o">=</span><span class="crayon-t">False</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0887b9103278393-50"><span class="crayon-v">net</span><span class="crayon-sy">.</span><span class="crayon-e">setInput</span><span class="crayon-sy">(</span><span class="crayon-v">blob</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d0887b9103278393-51"><span class="crayon-v">start</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">time</span><span class="crayon-sy">.</span><span class="crayon-k ">time</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0887b9103278393-52"><span class="crayon-v">layerOutputs</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">net</span><span class="crayon-sy">.</span><span class="crayon-e">forward</span><span class="crayon-sy">(</span><span class="crayon-v">ln</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d0887b9103278393-53"><span class="crayon-v">end</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">time</span><span class="crayon-sy">.</span><span class="crayon-k ">time</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0887b9103278393-54">&nbsp;</div><div class="crayon-line" id="crayon-5c93e5d0887b9103278393-55"><span class="crayon-c"># show timing information on YOLO</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0887b9103278393-56"><span class="crayon-k ">print</span><span class="crayon-sy">(</span><span class="crayon-s">"[INFO] YOLO took {:.6f} seconds"</span><span class="crayon-sy">.</span><span class="crayon-k ">format</span><span class="crayon-sy">(</span><span class="crayon-v">end</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-v">start</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0042 seconds] -->
<p>In this block we:</p>
<ul>
<li>Load the input 
			<span id="crayon-5c93e5d0887be699968727" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">image</span></span></span>&nbsp; and extract its dimensions (<strong>Lines 38 and 39</strong>).</li>
<li>Determine the output layer names from the YOLO model (<strong>Lines 42 and 43</strong>).</li>
<li>Construct a 
			<span id="crayon-5c93e5d0887c3104294569" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">blob</span></span></span>&nbsp; from the image (<strong>Lines 48 and 49</strong>). Are you confused about what a blob is or what the 
			<span id="crayon-5c93e5d0887c7262989306" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-v">dnn</span><span class="crayon-sy">.</span><span class="crayon-v">blobFromImage</span></span></span>&nbsp; does? Give <a href="https://www.pyimagesearch.com/2017/11/06/deep-learning-opencvs-blobfromimage-works/" target="_blank" rel="noopener">this blog post</a> a read.</li>
</ul>
<p>Now that our blob is prepared, we’ll</p>
<ul>
<li>Perform a forward pass through our YOLO network (<strong>Lines 50 and 52</strong>)</li>
<li>Show the inference time for YOLO (<strong>Line 56</strong>)</li>
</ul>
<p>What good is object detection unless we visualize our results? Let’s take steps now to filter and visualize our results.</p>
<p>But first, let’s initialize some lists we’ll need in the process of doing so:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93e5d0887cb496857936" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">YOLO Object Detection with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft"># initialize our lists of detected bounding boxes, confidences, and
# class IDs, respectively
boxes = []
confidences = []
classIDs = []</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93e5d0887cb496857936-58">58</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0887cb496857936-59">59</div><div class="crayon-num" data-line="crayon-5c93e5d0887cb496857936-60">60</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0887cb496857936-61">61</div><div class="crayon-num" data-line="crayon-5c93e5d0887cb496857936-62">62</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93e5d0887cb496857936-58"><span class="crayon-c"># initialize our lists of detected bounding boxes, confidences, and</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0887cb496857936-59"><span class="crayon-c"># class IDs, respectively</span></div><div class="crayon-line" id="crayon-5c93e5d0887cb496857936-60"><span class="crayon-v">boxes</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0887cb496857936-61"><span class="crayon-v">confidences</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-5c93e5d0887cb496857936-62"><span class="crayon-v">classIDs</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-sy">]</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0006 seconds] -->
<p>These lists include:</p>
<ul>
<li>
			<span id="crayon-5c93e5d0887d0170418201" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">boxes</span></span></span>&nbsp;: Our bounding boxes around the object.</li>
<li>
			<span id="crayon-5c93e5d0887d4636071633" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">confidences</span></span></span>&nbsp;:
 The confidence value that YOLO assigns to an object. Lower confidence 
values indicate that the object might not be what the network thinks it 
is. Remember from our command line arguments above that we’ll filter out
 objects that don’t meet the 
			<span id="crayon-5c93e5d0887d8254310936" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-cn">0.5</span></span></span>&nbsp; threshold.</li>
<li>
			<span id="crayon-5c93e5d0887df932611713" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">classIDs</span></span></span>&nbsp;: The detected object’s class label.</li>
</ul>
<p>Let’s begin populating these lists with data from our YOLO 
			<span id="crayon-5c93e5d0887e3225967890" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">layerOutputs</span></span></span>&nbsp;:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93e5d0887e7305286045" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">YOLO Object Detection with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft"># loop over each of the layer outputs
for output in layerOutputs:
	# loop over each of the detections
	for detection in output:
		# extract the class ID and confidence (i.e., probability) of
		# the current object detection
		scores = detection[5:]
		classID = np.argmax(scores)
		confidence = scores[classID]

		# filter out weak predictions by ensuring the detected
		# probability is greater than the minimum probability
		if confidence &gt; args["confidence"]:
			# scale the bounding box coordinates back relative to the
			# size of the image, keeping in mind that YOLO actually
			# returns the center (x, y)-coordinates of the bounding
			# box followed by the boxes' width and height
			box = detection[0:4] * np.array([W, H, W, H])
			(centerX, centerY, width, height) = box.astype("int")

			# use the center (x, y)-coordinates to derive the top and
			# and left corner of the bounding box
			x = int(centerX - (width / 2))
			y = int(centerY - (height / 2))

			# update our list of bounding box coordinates, confidences,
			# and class IDs
			boxes.append([x, y, int(width), int(height)])
			confidences.append(float(confidence))
			classIDs.append(classID)</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93e5d0887e7305286045-64">64</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0887e7305286045-65">65</div><div class="crayon-num" data-line="crayon-5c93e5d0887e7305286045-66">66</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0887e7305286045-67">67</div><div class="crayon-num" data-line="crayon-5c93e5d0887e7305286045-68">68</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0887e7305286045-69">69</div><div class="crayon-num" data-line="crayon-5c93e5d0887e7305286045-70">70</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0887e7305286045-71">71</div><div class="crayon-num" data-line="crayon-5c93e5d0887e7305286045-72">72</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0887e7305286045-73">73</div><div class="crayon-num" data-line="crayon-5c93e5d0887e7305286045-74">74</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0887e7305286045-75">75</div><div class="crayon-num" data-line="crayon-5c93e5d0887e7305286045-76">76</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0887e7305286045-77">77</div><div class="crayon-num" data-line="crayon-5c93e5d0887e7305286045-78">78</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0887e7305286045-79">79</div><div class="crayon-num" data-line="crayon-5c93e5d0887e7305286045-80">80</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0887e7305286045-81">81</div><div class="crayon-num" data-line="crayon-5c93e5d0887e7305286045-82">82</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0887e7305286045-83">83</div><div class="crayon-num" data-line="crayon-5c93e5d0887e7305286045-84">84</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0887e7305286045-85">85</div><div class="crayon-num" data-line="crayon-5c93e5d0887e7305286045-86">86</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0887e7305286045-87">87</div><div class="crayon-num" data-line="crayon-5c93e5d0887e7305286045-88">88</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0887e7305286045-89">89</div><div class="crayon-num" data-line="crayon-5c93e5d0887e7305286045-90">90</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0887e7305286045-91">91</div><div class="crayon-num" data-line="crayon-5c93e5d0887e7305286045-92">92</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0887e7305286045-93">93</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93e5d0887e7305286045-64"><span class="crayon-c"># loop over each of the layer outputs</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0887e7305286045-65"><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-e">output </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">layerOutputs</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-5c93e5d0887e7305286045-66"><span class="crayon-h">	</span><span class="crayon-c"># loop over each of the detections</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0887e7305286045-67"><span class="crayon-h">	</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-e">detection </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">output</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-5c93e5d0887e7305286045-68"><span class="crayon-h">		</span><span class="crayon-c"># extract the class ID and confidence (i.e., probability) of</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0887e7305286045-69"><span class="crayon-h">		</span><span class="crayon-c"># the current object detection</span></div><div class="crayon-line" id="crayon-5c93e5d0887e7305286045-70"><span class="crayon-h">		</span><span class="crayon-v">scores</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">detection</span><span class="crayon-sy">[</span><span class="crayon-cn">5</span><span class="crayon-o">:</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0887e7305286045-71"><span class="crayon-h">		</span><span class="crayon-v">classID</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">argmax</span><span class="crayon-sy">(</span><span class="crayon-v">scores</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d0887e7305286045-72"><span class="crayon-h">		</span><span class="crayon-v">confidence</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">scores</span><span class="crayon-sy">[</span><span class="crayon-v">classID</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0887e7305286045-73">&nbsp;</div><div class="crayon-line" id="crayon-5c93e5d0887e7305286045-74"><span class="crayon-h">		</span><span class="crayon-c"># filter out weak predictions by ensuring the detected</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0887e7305286045-75"><span class="crayon-h">		</span><span class="crayon-c"># probability is greater than the minimum probability</span></div><div class="crayon-line" id="crayon-5c93e5d0887e7305286045-76"><span class="crayon-h">		</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-v">confidence</span><span class="crayon-h"> </span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-v">args</span><span class="crayon-sy">[</span><span class="crayon-s">"confidence"</span><span class="crayon-sy">]</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0887e7305286045-77"><span class="crayon-h">			</span><span class="crayon-c"># scale the bounding box coordinates back relative to the</span></div><div class="crayon-line" id="crayon-5c93e5d0887e7305286045-78"><span class="crayon-h">			</span><span class="crayon-c"># size of the image, keeping in mind that YOLO actually</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0887e7305286045-79"><span class="crayon-h">			</span><span class="crayon-c"># returns the center (x, y)-coordinates of the bounding</span></div><div class="crayon-line" id="crayon-5c93e5d0887e7305286045-80"><span class="crayon-h">			</span><span class="crayon-c"># box followed by the boxes' width and height</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0887e7305286045-81"><span class="crayon-h">			</span><span class="crayon-v">box</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">detection</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-o">:</span><span class="crayon-cn">4</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-k ">array</span><span class="crayon-sy">(</span><span class="crayon-sy">[</span><span class="crayon-k ">W</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">H</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-k ">W</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">H</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d0887e7305286045-82"><span class="crayon-h">			</span><span class="crayon-sy">(</span><span class="crayon-v">centerX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">centerY</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">width</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">height</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">box</span><span class="crayon-sy">.</span><span class="crayon-e">astype</span><span class="crayon-sy">(</span><span class="crayon-s">"int"</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0887e7305286045-83">&nbsp;</div><div class="crayon-line" id="crayon-5c93e5d0887e7305286045-84"><span class="crayon-h">			</span><span class="crayon-c"># use the center (x, y)-coordinates to derive the top and</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0887e7305286045-85"><span class="crayon-h">			</span><span class="crayon-c"># and left corner of the bounding box</span></div><div class="crayon-line" id="crayon-5c93e5d0887e7305286045-86"><span class="crayon-h">			</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">int</span><span class="crayon-sy">(</span><span class="crayon-v">centerX</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">width</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0887e7305286045-87"><span class="crayon-h">			</span><span class="crayon-v">y</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">int</span><span class="crayon-sy">(</span><span class="crayon-v">centerY</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">height</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d0887e7305286045-88">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0887e7305286045-89"><span class="crayon-h">			</span><span class="crayon-c"># update our list of bounding box coordinates, confidences,</span></div><div class="crayon-line" id="crayon-5c93e5d0887e7305286045-90"><span class="crayon-h">			</span><span class="crayon-c"># and class IDs</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0887e7305286045-91"><span class="crayon-h">			</span><span class="crayon-v">boxes</span><span class="crayon-sy">.</span><span class="crayon-e">append</span><span class="crayon-sy">(</span><span class="crayon-sy">[</span><span class="crayon-v">x</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-k ">int</span><span class="crayon-sy">(</span><span class="crayon-v">width</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-k ">int</span><span class="crayon-sy">(</span><span class="crayon-v">height</span><span class="crayon-sy">)</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d0887e7305286045-92"><span class="crayon-h">			</span><span class="crayon-v">confidences</span><span class="crayon-sy">.</span><span class="crayon-e">append</span><span class="crayon-sy">(</span><span class="crayon-k ">float</span><span class="crayon-sy">(</span><span class="crayon-v">confidence</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0887e7305286045-93"><span class="crayon-h">			</span><span class="crayon-v">classIDs</span><span class="crayon-sy">.</span><span class="crayon-e">append</span><span class="crayon-sy">(</span><span class="crayon-v">classID</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0055 seconds] -->
<p>There’s a lot here in this code block — let’s break it down.</p>
<p>In this block, we:</p>
<ul>
<li>Loop over each of the 
			<span id="crayon-5c93e5d0887ed587387950" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">layerOutputs</span></span></span>&nbsp; (beginning on&nbsp;<strong>Line 65</strong>).</li>
<li>Loop over each 
			<span id="crayon-5c93e5d0887f1244919199" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">detection</span></span></span>&nbsp; in 
			<span id="crayon-5c93e5d0887f5242865087" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">output</span></span></span>&nbsp; (a nested loop beginning on&nbsp;<strong>Line 67</strong>).</li>
<li>Extract the 
			<span id="crayon-5c93e5d0887fa973895452" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">classID</span></span></span>&nbsp; and 
			<span id="crayon-5c93e5d0887fe652430539" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">confidence</span></span></span>&nbsp; (<strong>Lines 70-72</strong>).</li>
<li>Use the 
			<span id="crayon-5c93e5d088802129546316" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">confidence</span></span></span>&nbsp;to filter out weak detections (<strong>Line 76</strong>).</li>
</ul>
<p>Now that we’ve filtered out unwanted detections, we’re going to:</p>
<ul>
<li>Scale bounding box coordinates so we can display them properly on our original image (<strong>Line 81</strong>).</li>
<li>Extract coordinates and dimensions of the bounding box (<strong>Line 82</strong>).&nbsp;YOLO returns bounding box coordinates in the form: 
			<span id="crayon-5c93e5d088806205858894" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-sy">(</span><span class="crayon-v">centerX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">centerY</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">width</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-st">and</span><span class="crayon-h"> </span><span class="crayon-v">height</span><span class="crayon-sy">)</span></span></span>&nbsp;.</li>
<li>Use this information to derive the top-left <em>(x, y)</em>-coordinates of the bounding box (<strong>Lines 86 and 87</strong>).</li>
<li>Update the 
			<span id="crayon-5c93e5d08880a305120935" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">boxes</span></span></span>&nbsp;, 
			<span id="crayon-5c93e5d08880e817568490" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">confidences</span></span></span>&nbsp;, and 
			<span id="crayon-5c93e5d088812168171289" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">classIDs</span></span></span>&nbsp; lists (<strong>Lines 91-93</strong>).</li>
</ul>
<p>With this data, we’re now going to apply what is called “non-maxima suppression”:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93e5d088817506677576" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">YOLO Object Detection with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft"># apply non-maxima suppression to suppress weak, overlapping bounding
# boxes
idxs = cv2.dnn.NMSBoxes(boxes, confidences, args["confidence"],
	args["threshold"])</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93e5d088817506677576-95">95</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088817506677576-96">96</div><div class="crayon-num" data-line="crayon-5c93e5d088817506677576-97">97</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088817506677576-98">98</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93e5d088817506677576-95"><span class="crayon-c"># apply non-maxima suppression to suppress weak, overlapping bounding</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088817506677576-96"><span class="crayon-c"># boxes</span></div><div class="crayon-line" id="crayon-5c93e5d088817506677576-97"><span class="crayon-v">idxs</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-v">dnn</span><span class="crayon-sy">.</span><span class="crayon-e">NMSBoxes</span><span class="crayon-sy">(</span><span class="crayon-v">boxes</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">confidences</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">args</span><span class="crayon-sy">[</span><span class="crayon-s">"confidence"</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088817506677576-98"><span class="crayon-h">	</span><span class="crayon-v">args</span><span class="crayon-sy">[</span><span class="crayon-s">"threshold"</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0009 seconds] -->
<p>YOLO does not apply <a href="https://www.pyimagesearch.com/2014/11/17/non-maximum-suppression-object-detection-python/" target="_blank" rel="noopener">non-maxima suppression</a>&nbsp;for us, so we need to explicitly apply it.</p>
<p>Applying non-maxima suppression suppresses significantly overlapping bounding boxes, keeping only the most confident ones.</p>
<p>NMS also ensures that we do not have any redundant or extraneous bounding boxes.</p>
<p>Taking advantage of OpenCV’s built-in DNN module implementation of NMS, we perform non-maxima suppression on&nbsp;<strong>Lines 97 and 98</strong>. All that is required is that we submit our bounding 
			<span id="crayon-5c93e5d08881b402679438" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">boxes</span></span></span>&nbsp;, 
			<span id="crayon-5c93e5d088822582964839" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">confidences</span></span></span>&nbsp;, as well as both our confidence threshold and NMS threshold.</p>
<p>If you’ve been reading this blog, you might be wondering why we didn’t use my <a href="https://github.com/jrosebr1/imutils/blob/master/imutils/object_detection.py#L4" target="_blank" rel="noopener">imutils implementation of NMS</a>. The primary reason is that the 
			<span id="crayon-5c93e5d088826614220181" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">NMSBoxes</span></span></span>&nbsp; function is now working in OpenCV. Previously it failed for some inputs and resulted in an error message. Now that the 
			<span id="crayon-5c93e5d08882b313996807" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">NMSBoxes</span></span></span>&nbsp; function is working, we can use it in our own scripts.</p>
<p>Let’s draw the boxes and class text on the image!</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93e5d08882f119749507" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">YOLO Object Detection with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft"># ensure at least one detection exists
if len(idxs) &gt; 0:
	# loop over the indexes we are keeping
	for i in idxs.flatten():
		# extract the bounding box coordinates
		(x, y) = (boxes[i][0], boxes[i][1])
		(w, h) = (boxes[i][2], boxes[i][3])

		# draw a bounding box rectangle and label on the image
		color = [int(c) for c in COLORS[classIDs[i]]]
		cv2.rectangle(image, (x, y), (x + w, y + h), color, 2)
		text = "{}: {:.4f}".format(LABELS[classIDs[i]], confidences[i])
		cv2.putText(image, text, (x, y - 5), cv2.FONT_HERSHEY_SIMPLEX,
			0.5, color, 2)

# show the output image
cv2.imshow("Image", image)
cv2.waitKey(0)</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93e5d08882f119749507-100">100</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d08882f119749507-101">101</div><div class="crayon-num" data-line="crayon-5c93e5d08882f119749507-102">102</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d08882f119749507-103">103</div><div class="crayon-num" data-line="crayon-5c93e5d08882f119749507-104">104</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d08882f119749507-105">105</div><div class="crayon-num" data-line="crayon-5c93e5d08882f119749507-106">106</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d08882f119749507-107">107</div><div class="crayon-num" data-line="crayon-5c93e5d08882f119749507-108">108</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d08882f119749507-109">109</div><div class="crayon-num" data-line="crayon-5c93e5d08882f119749507-110">110</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d08882f119749507-111">111</div><div class="crayon-num" data-line="crayon-5c93e5d08882f119749507-112">112</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d08882f119749507-113">113</div><div class="crayon-num" data-line="crayon-5c93e5d08882f119749507-114">114</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d08882f119749507-115">115</div><div class="crayon-num" data-line="crayon-5c93e5d08882f119749507-116">116</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d08882f119749507-117">117</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93e5d08882f119749507-100"><span class="crayon-c"># ensure at least one detection exists</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d08882f119749507-101"><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-k ">len</span><span class="crayon-sy">(</span><span class="crayon-v">idxs</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-5c93e5d08882f119749507-102"><span class="crayon-h">	</span><span class="crayon-c"># loop over the indexes we are keeping</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d08882f119749507-103"><span class="crayon-h">	</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">idxs</span><span class="crayon-sy">.</span><span class="crayon-e">flatten</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-5c93e5d08882f119749507-104"><span class="crayon-h">		</span><span class="crayon-c"># extract the bounding box coordinates</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d08882f119749507-105"><span class="crayon-h">		</span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">boxes</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">boxes</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d08882f119749507-106"><span class="crayon-h">		</span><span class="crayon-sy">(</span><span class="crayon-k ">w</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">h</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">boxes</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">[</span><span class="crayon-cn">2</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">boxes</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">[</span><span class="crayon-cn">3</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d08882f119749507-107">&nbsp;</div><div class="crayon-line" id="crayon-5c93e5d08882f119749507-108"><span class="crayon-h">		</span><span class="crayon-c"># draw a bounding box rectangle and label on the image</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d08882f119749507-109"><span class="crayon-h">		</span><span class="crayon-v">color</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-k ">int</span><span class="crayon-sy">(</span><span class="crayon-v">c</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">c</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">COLORS</span><span class="crayon-sy">[</span><span class="crayon-v">classIDs</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">]</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-5c93e5d08882f119749507-110"><span class="crayon-h">		</span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">rectangle</span><span class="crayon-sy">(</span><span class="crayon-v">image</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-k ">w</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-v">h</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">color</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d08882f119749507-111"><span class="crayon-h">		</span><span class="crayon-v">text</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"{}: {:.4f}"</span><span class="crayon-sy">.</span><span class="crayon-k ">format</span><span class="crayon-sy">(</span><span class="crayon-v">LABELS</span><span class="crayon-sy">[</span><span class="crayon-v">classIDs</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">confidences</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d08882f119749507-112"><span class="crayon-h">		</span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">putText</span><span class="crayon-sy">(</span><span class="crayon-v">image</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">text</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-v">FONT_HERSHEY_SIMPLEX</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d08882f119749507-113"><span class="crayon-h">			</span><span class="crayon-cn">0.5</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">color</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d08882f119749507-114">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d08882f119749507-115"><span class="crayon-c"># show the output image</span></div><div class="crayon-line" id="crayon-5c93e5d08882f119749507-116"><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">imshow</span><span class="crayon-sy">(</span><span class="crayon-s">"Image"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">image</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d08882f119749507-117"><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">waitKey</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0059 seconds] -->
<p>Assuming at least one detection exists (<strong>Line 101</strong>), we proceed to loop over 
			<span id="crayon-5c93e5d088835903048414" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">idxs</span></span></span>&nbsp; determined by non-maxima suppression.</p>
<p>Then, we simply draw the bounding box and text on 
			<span id="crayon-5c93e5d088839902393219" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">image</span></span></span>&nbsp; using our random class colors (<strong>Lines 105-113</strong>).</p>
<p>Finally, we display our resulting image until the user presses any 
key on their keyboard (ensuring the window opened by OpenCV is selected 
and focused).</p>
<hr>
<p>To follow along with this guide, make sure you use the <em><strong>“Downloads”</strong></em> section of this tutorial to download the source code, YOLO model, and example images.</p>
<p>From there, open up a terminal and execute the following command:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93e5d08883d378389047" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">YOLO Object Detection with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Shell</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft">$ python yolo.py --image images/baggage_claim.jpg --yolo yolo-coco
[INFO] loading YOLO from disk...
[INFO] YOLO took 0.347815 seconds</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93e5d08883d378389047-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d08883d378389047-2">2</div><div class="crayon-num" data-line="crayon-5c93e5d08883d378389047-3">3</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93e5d08883d378389047-1"><span class="crayon-sy">$</span><span class="crayon-h"> </span><span class="crayon-e">python </span><span class="crayon-v">yolo</span><span class="crayon-e">.py</span><span class="crayon-h"> </span><span class="crayon-o">--</span><span class="crayon-e">image </span><span class="crayon-v">images</span><span class="crayon-o">/</span><span class="crayon-v">baggage_claim</span><span class="crayon-e">.jpg</span><span class="crayon-h"> </span><span class="crayon-o">--</span><span class="crayon-e">yolo </span><span class="crayon-v">yolo</span><span class="crayon-o">-</span><span class="crayon-i">coco</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d08883d378389047-2"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-e">loading </span><span class="crayon-e">YOLO </span><span class="crayon-e">from </span><span class="crayon-v">disk</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span></div><div class="crayon-line" id="crayon-5c93e5d08883d378389047-3"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-e">YOLO </span><span class="crayon-i">took</span><span class="crayon-h"> </span><span class="crayon-cn">0.347815</span><span class="crayon-h"> </span><span class="crayon-v">seconds</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0010 seconds] -->
<p></p><div id="attachment_8990" style="max-width: 610px" class="wp-caption aligncenter"><a href="https://www.pyimagesearch.com/wp-content/uploads/2018/11/yolo_baggage_claim_output.jpg"><img class="size-full wp-image-8990" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/yolo_baggage_claim_output.jpg" alt="" srcset="https://www.pyimagesearch.com/wp-content/uploads/2018/11/yolo_baggage_claim_output.jpg 600w, https://www.pyimagesearch.com/wp-content/uploads/2018/11/yolo_baggage_claim_output-300x255.jpg 300w" sizes="(max-width: 600px) 100vw, 600px" width="600" height="510"></a><p class="wp-caption-text"><strong>Figure 2:</strong> YOLO with OpenCV is used to detect people and baggage in an airport.</p></div><p></p>
<p>Here you can see that YOLO has not only detected each person in the input image, but also the suitcases as well!</p>
<p>Furthermore, if you take a look at the right corner of the image 
you’ll see that YOLO has also detected the handbag on the lady’s 
shoulder.</p>
<p>Let’s try another example:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93e5d088842007659466" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">YOLO Object Detection with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Shell</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft">$ python yolo.py --image images/living_room.jpg --yolo yolo-coco
[INFO] loading YOLO from disk...
[INFO] YOLO took 0.340221 seconds</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93e5d088842007659466-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088842007659466-2">2</div><div class="crayon-num" data-line="crayon-5c93e5d088842007659466-3">3</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93e5d088842007659466-1"><span class="crayon-sy">$</span><span class="crayon-h"> </span><span class="crayon-e">python </span><span class="crayon-v">yolo</span><span class="crayon-e">.py</span><span class="crayon-h"> </span><span class="crayon-o">--</span><span class="crayon-e">image </span><span class="crayon-v">images</span><span class="crayon-o">/</span><span class="crayon-v">living_room</span><span class="crayon-e">.jpg</span><span class="crayon-h"> </span><span class="crayon-o">--</span><span class="crayon-e">yolo </span><span class="crayon-v">yolo</span><span class="crayon-o">-</span><span class="crayon-i">coco</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088842007659466-2"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-e">loading </span><span class="crayon-e">YOLO </span><span class="crayon-e">from </span><span class="crayon-v">disk</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span></div><div class="crayon-line" id="crayon-5c93e5d088842007659466-3"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-e">YOLO </span><span class="crayon-i">took</span><span class="crayon-h"> </span><span class="crayon-cn">0.340221</span><span class="crayon-h"> </span><span class="crayon-v">seconds</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0011 seconds] -->
<p></p><div id="attachment_8991" style="max-width: 610px" class="wp-caption aligncenter"><a href="https://www.pyimagesearch.com/wp-content/uploads/2018/11/yolo_living_room_output.jpg"><img class="size-full wp-image-8991" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/yolo_living_room_output.jpg" alt="" srcset="https://www.pyimagesearch.com/wp-content/uploads/2018/11/yolo_living_room_output.jpg 600w, https://www.pyimagesearch.com/wp-content/uploads/2018/11/yolo_living_room_output-150x150.jpg 150w, https://www.pyimagesearch.com/wp-content/uploads/2018/11/yolo_living_room_output-300x300.jpg 300w" sizes="(max-width: 600px) 100vw, 600px" width="600" height="600"></a><p class="wp-caption-text"><strong>Figure 3:</strong>&nbsp;YOLO
 object detection with OpenCV is used to detect a person, dog, TV, and 
chair. The remote is a false-positive detection but looking at the ROI 
you could imagine that the area does share resemblances to a remote.</p></div><p></p>
<p>The image above contains a person (myself) and a dog (Jemma, the family beagle).</p>
<p>YOLO also detects the TV monitor and a chair as well. I’m 
particularly impressed that YOLO was able to detect the chair given that
 it’s handmade, old fashioned “baby high chair”.</p>
<p>Interestingly, YOLO thinks there is a “remote” in my hand. It’s 
actually not a remote — it’s the reflection of glass on a VHS tape; 
however, if you stare at the region it actually does look like it could 
be a remote.</p>
<p>The following example image demonstrates a limitation and weakness of the YOLO object detector:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93e5d08884a580861535" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">YOLO Object Detection with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Shell</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft">$ python yolo.py --image images/dining_table.jpg --yolo yolo-coco
[INFO] loading YOLO from disk...
[INFO] YOLO took 0.362369 seconds</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93e5d08884a580861535-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d08884a580861535-2">2</div><div class="crayon-num" data-line="crayon-5c93e5d08884a580861535-3">3</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93e5d08884a580861535-1"><span class="crayon-sy">$</span><span class="crayon-h"> </span><span class="crayon-e">python </span><span class="crayon-v">yolo</span><span class="crayon-e">.py</span><span class="crayon-h"> </span><span class="crayon-o">--</span><span class="crayon-e">image </span><span class="crayon-v">images</span><span class="crayon-o">/</span><span class="crayon-v">dining_table</span><span class="crayon-e">.jpg</span><span class="crayon-h"> </span><span class="crayon-o">--</span><span class="crayon-e">yolo </span><span class="crayon-v">yolo</span><span class="crayon-o">-</span><span class="crayon-i">coco</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d08884a580861535-2"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-e">loading </span><span class="crayon-e">YOLO </span><span class="crayon-e">from </span><span class="crayon-v">disk</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span></div><div class="crayon-line" id="crayon-5c93e5d08884a580861535-3"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-e">YOLO </span><span class="crayon-i">took</span><span class="crayon-h"> </span><span class="crayon-cn">0.362369</span><span class="crayon-h"> </span><span class="crayon-v">seconds</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0010 seconds] -->
<p></p><div id="attachment_8992" style="max-width: 610px" class="wp-caption aligncenter"><a href="https://www.pyimagesearch.com/wp-content/uploads/2018/11/yolo_dining_table_output.jpg"><img class="size-full wp-image-8992" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/yolo_dining_table_output.jpg" alt="" srcset="https://www.pyimagesearch.com/wp-content/uploads/2018/11/yolo_dining_table_output.jpg 600w, https://www.pyimagesearch.com/wp-content/uploads/2018/11/yolo_dining_table_output-268x300.jpg 268w" sizes="(max-width: 600px) 100vw, 600px" width="600" height="672"></a><p class="wp-caption-text"><strong>Figure 4:</strong> YOLO and OpenCV are used for object detection of a dining room table.</p></div><p></p>
<p>While both the wine bottle, dining table, and vase are correctly 
detected by YOLO, only one of the two wine glasses is properly detected.</p>
<p>We discuss why YOLO struggles with objects close together in the <em>“Limitations and drawbacks of the YOLO object detector”</em> section below.</p>
<p>Let’s try one final image:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93e5d088850275195587" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">YOLO Object Detection with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Shell</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft">$ python yolo.py --image images/soccer.jpg --yolo yolo-coco
[INFO] loading YOLO from disk...
[INFO] YOLO took 0.345656 seconds</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93e5d088850275195587-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088850275195587-2">2</div><div class="crayon-num" data-line="crayon-5c93e5d088850275195587-3">3</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93e5d088850275195587-1"><span class="crayon-sy">$</span><span class="crayon-h"> </span><span class="crayon-e">python </span><span class="crayon-v">yolo</span><span class="crayon-e">.py</span><span class="crayon-h"> </span><span class="crayon-o">--</span><span class="crayon-e">image </span><span class="crayon-v">images</span><span class="crayon-o">/</span><span class="crayon-v">soccer</span><span class="crayon-e">.jpg</span><span class="crayon-h"> </span><span class="crayon-o">--</span><span class="crayon-e">yolo </span><span class="crayon-v">yolo</span><span class="crayon-o">-</span><span class="crayon-i">coco</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088850275195587-2"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-e">loading </span><span class="crayon-e">YOLO </span><span class="crayon-e">from </span><span class="crayon-v">disk</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span></div><div class="crayon-line" id="crayon-5c93e5d088850275195587-3"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-e">YOLO </span><span class="crayon-i">took</span><span class="crayon-h"> </span><span class="crayon-cn">0.345656</span><span class="crayon-h"> </span><span class="crayon-v">seconds</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0010 seconds] -->
<p></p><div id="attachment_8993" style="max-width: 610px" class="wp-caption aligncenter"><a href="https://www.pyimagesearch.com/wp-content/uploads/2018/11/yolo_soccer_output.jpg"><img class="size-full wp-image-8993" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/yolo_soccer_output.jpg" alt="" srcset="https://www.pyimagesearch.com/wp-content/uploads/2018/11/yolo_soccer_output.jpg 600w, https://www.pyimagesearch.com/wp-content/uploads/2018/11/yolo_soccer_output-300x243.jpg 300w" sizes="(max-width: 600px) 100vw, 600px" width="600" height="486"></a><p class="wp-caption-text"><strong>Figure 5:</strong> Soccer players and a soccer ball are detected with OpenCV using the YOLO object detector.</p></div><p></p>
<p>YOLO is able to correctly detect each of the players on the pitch, 
including the soccer ball itself. Notice the person in the background 
who is detected despite the area being highly blurred and partially 
obscured.</p>
<h3>YOLO object detection in video streams</h3>
<p>Now that we’ve learned how to apply the YOLO object detector to 
single images, let’s also utilize YOLO to perform object detection in 
input video files as well.</p>
<p>Open up the 
			<span id="crayon-5c93e5d088855728461871" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">yolo_video</span><span class="crayon-e">.py</span></span></span>&nbsp; file and insert the following code:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93e5d088859476968605" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">YOLO Object Detection with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft"># import the necessary packages
import numpy as np
import argparse
import imutils
import time
import cv2
import os

# construct the argument parse and parse the arguments
ap = argparse.ArgumentParser()
ap.add_argument("-i", "--input", required=True,
	help="path to input video")
ap.add_argument("-o", "--output", required=True,
	help="path to output video")
ap.add_argument("-y", "--yolo", required=True,
	help="base path to YOLO directory")
ap.add_argument("-c", "--confidence", type=float, default=0.5,
	help="minimum probability to filter weak detections")
ap.add_argument("-t", "--threshold", type=float, default=0.3,
	help="threshold when applyong non-maxima suppression")
args = vars(ap.parse_args())</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93e5d088859476968605-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088859476968605-2">2</div><div class="crayon-num" data-line="crayon-5c93e5d088859476968605-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088859476968605-4">4</div><div class="crayon-num" data-line="crayon-5c93e5d088859476968605-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088859476968605-6">6</div><div class="crayon-num" data-line="crayon-5c93e5d088859476968605-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088859476968605-8">8</div><div class="crayon-num" data-line="crayon-5c93e5d088859476968605-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088859476968605-10">10</div><div class="crayon-num" data-line="crayon-5c93e5d088859476968605-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088859476968605-12">12</div><div class="crayon-num" data-line="crayon-5c93e5d088859476968605-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088859476968605-14">14</div><div class="crayon-num" data-line="crayon-5c93e5d088859476968605-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088859476968605-16">16</div><div class="crayon-num" data-line="crayon-5c93e5d088859476968605-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088859476968605-18">18</div><div class="crayon-num" data-line="crayon-5c93e5d088859476968605-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088859476968605-20">20</div><div class="crayon-num" data-line="crayon-5c93e5d088859476968605-21">21</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93e5d088859476968605-1"><span class="crayon-c"># import the necessary packages</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088859476968605-2"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-e">numpy </span><span class="crayon-st">as</span><span class="crayon-h"> </span><span class="crayon-e">np</span></div><div class="crayon-line" id="crayon-5c93e5d088859476968605-3"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-k ">argparse</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088859476968605-4"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-e">imutils</span></div><div class="crayon-line" id="crayon-5c93e5d088859476968605-5"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-k ">time</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088859476968605-6"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-e">cv2</span></div><div class="crayon-line" id="crayon-5c93e5d088859476968605-7"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-k ">os</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088859476968605-8">&nbsp;</div><div class="crayon-line" id="crayon-5c93e5d088859476968605-9"><span class="crayon-c"># construct the argument parse and parse the arguments</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088859476968605-10"><span class="crayon-v">ap</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">argparse</span><span class="crayon-sy">.</span><span class="crayon-e">ArgumentParser</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d088859476968605-11"><span class="crayon-v">ap</span><span class="crayon-sy">.</span><span class="crayon-e">add_argument</span><span class="crayon-sy">(</span><span class="crayon-s">"-i"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"--input"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">required</span><span class="crayon-o">=</span><span class="crayon-t">True</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088859476968605-12"><span class="crayon-h">	</span><span class="crayon-k ">help</span><span class="crayon-o">=</span><span class="crayon-s">"path to input video"</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d088859476968605-13"><span class="crayon-v">ap</span><span class="crayon-sy">.</span><span class="crayon-e">add_argument</span><span class="crayon-sy">(</span><span class="crayon-s">"-o"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"--output"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">required</span><span class="crayon-o">=</span><span class="crayon-t">True</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088859476968605-14"><span class="crayon-h">	</span><span class="crayon-k ">help</span><span class="crayon-o">=</span><span class="crayon-s">"path to output video"</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d088859476968605-15"><span class="crayon-v">ap</span><span class="crayon-sy">.</span><span class="crayon-e">add_argument</span><span class="crayon-sy">(</span><span class="crayon-s">"-y"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"--yolo"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">required</span><span class="crayon-o">=</span><span class="crayon-t">True</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088859476968605-16"><span class="crayon-h">	</span><span class="crayon-k ">help</span><span class="crayon-o">=</span><span class="crayon-s">"base path to YOLO directory"</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d088859476968605-17"><span class="crayon-v">ap</span><span class="crayon-sy">.</span><span class="crayon-e">add_argument</span><span class="crayon-sy">(</span><span class="crayon-s">"-c"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"--confidence"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-k ">type</span><span class="crayon-o">=</span><span class="crayon-k ">float</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">default</span><span class="crayon-o">=</span><span class="crayon-cn">0.5</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088859476968605-18"><span class="crayon-h">	</span><span class="crayon-k ">help</span><span class="crayon-o">=</span><span class="crayon-s">"minimum probability to filter weak detections"</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d088859476968605-19"><span class="crayon-v">ap</span><span class="crayon-sy">.</span><span class="crayon-e">add_argument</span><span class="crayon-sy">(</span><span class="crayon-s">"-t"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"--threshold"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-k ">type</span><span class="crayon-o">=</span><span class="crayon-k ">float</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">default</span><span class="crayon-o">=</span><span class="crayon-cn">0.3</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088859476968605-20"><span class="crayon-h">	</span><span class="crayon-k ">help</span><span class="crayon-o">=</span><span class="crayon-s">"threshold when applyong non-maxima suppression"</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d088859476968605-21"><span class="crayon-v">args</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">vars</span><span class="crayon-sy">(</span><span class="crayon-v">ap</span><span class="crayon-sy">.</span><span class="crayon-e">parse_args</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0037 seconds] -->
<p>We begin with our imports and command line arguments.</p>
<p>Notice that this script doesn’t have the 
			<span id="crayon-5c93e5d08885e931763374" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-o">--</span><span class="crayon-v">image</span></span></span>&nbsp; argument as before. To take its place, we now have two video-related arguments:</p>
<ul>
<li>
			<span id="crayon-5c93e5d088865115752229" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-o">--</span><span class="crayon-k ">input</span></span></span>&nbsp;: The path to the <em>input</em> video file.</li>
<li>
			<span id="crayon-5c93e5d088869832308411" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-o">--</span><span class="crayon-v">output</span></span></span>&nbsp;: Our path to the <em>output</em> video file.</li>
</ul>
<p>Given these arguments, you can now use videos that you record of 
scenes with your smartphone or videos you find online. You can then 
process the video file producing an annotated output video. Of course if
 you want to use your webcam to process a live video stream, that is 
possible too. Just find examples on PyImageSearch where the&nbsp;
			<span id="crayon-5c93e5d08886d084947227" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">VideoStream</span></span></span>&nbsp; class from 
			<span id="crayon-5c93e5d088872070825534" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">imutils</span><span class="crayon-sy">.</span><span class="crayon-v">video</span></span></span>&nbsp; is utilized and make some minor changes.</p>
<p>Moving on, the next block is&nbsp;<em>identical</em> to the block from the YOLO image processing script:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93e5d088876554116674" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">YOLO Object Detection with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft"># load the COCO class labels our YOLO model was trained on
labelsPath = os.path.sep.join([args["yolo"], "coco.names"])
LABELS = open(labelsPath).read().strip().split("\n")

# initialize a list of colors to represent each possible class label
np.random.seed(42)
COLORS = np.random.randint(0, 255, size=(len(LABELS), 3),
	dtype="uint8")

# derive the paths to the YOLO weights and model configuration
weightsPath = os.path.sep.join([args["yolo"], "yolov3.weights"])
configPath = os.path.sep.join([args["yolo"], "yolov3.cfg"])

# load our YOLO object detector trained on COCO dataset (80 classes)
# and determine only the *output* layer names that we need from YOLO
print("[INFO] loading YOLO from disk...")
net = cv2.dnn.readNetFromDarknet(configPath, weightsPath)
ln = net.getLayerNames()
ln = [ln[i[0] - 1] for i in net.getUnconnectedOutLayers()]</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93e5d088876554116674-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088876554116674-24">24</div><div class="crayon-num" data-line="crayon-5c93e5d088876554116674-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088876554116674-26">26</div><div class="crayon-num" data-line="crayon-5c93e5d088876554116674-27">27</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088876554116674-28">28</div><div class="crayon-num" data-line="crayon-5c93e5d088876554116674-29">29</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088876554116674-30">30</div><div class="crayon-num" data-line="crayon-5c93e5d088876554116674-31">31</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088876554116674-32">32</div><div class="crayon-num" data-line="crayon-5c93e5d088876554116674-33">33</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088876554116674-34">34</div><div class="crayon-num" data-line="crayon-5c93e5d088876554116674-35">35</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088876554116674-36">36</div><div class="crayon-num" data-line="crayon-5c93e5d088876554116674-37">37</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088876554116674-38">38</div><div class="crayon-num" data-line="crayon-5c93e5d088876554116674-39">39</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d088876554116674-40">40</div><div class="crayon-num" data-line="crayon-5c93e5d088876554116674-41">41</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93e5d088876554116674-23"><span class="crayon-c"># load the COCO class labels our YOLO model was trained on</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088876554116674-24"><span class="crayon-v">labelsPath</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">os.path</span><span class="crayon-sy">.</span><span class="crayon-v">sep</span><span class="crayon-sy">.</span><span class="crayon-e">join</span><span class="crayon-sy">(</span><span class="crayon-sy">[</span><span class="crayon-v">args</span><span class="crayon-sy">[</span><span class="crayon-s">"yolo"</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"coco.names"</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d088876554116674-25"><span class="crayon-v">LABELS</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">open</span><span class="crayon-sy">(</span><span class="crayon-v">labelsPath</span><span class="crayon-sy">)</span><span class="crayon-sy">.</span><span class="crayon-e">read</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">.</span><span class="crayon-e">strip</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">.</span><span class="crayon-e">split</span><span class="crayon-sy">(</span><span class="crayon-s">"\n"</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088876554116674-26">&nbsp;</div><div class="crayon-line" id="crayon-5c93e5d088876554116674-27"><span class="crayon-c"># initialize a list of colors to represent each possible class label</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088876554116674-28"><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-k ">random</span><span class="crayon-sy">.</span><span class="crayon-e">seed</span><span class="crayon-sy">(</span><span class="crayon-cn">42</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d088876554116674-29"><span class="crayon-v">COLORS</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-k ">random</span><span class="crayon-sy">.</span><span class="crayon-e">randint</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">255</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">size</span><span class="crayon-o">=</span><span class="crayon-sy">(</span><span class="crayon-k ">len</span><span class="crayon-sy">(</span><span class="crayon-v">LABELS</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">3</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088876554116674-30"><span class="crayon-h">	</span><span class="crayon-v">dtype</span><span class="crayon-o">=</span><span class="crayon-s">"uint8"</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d088876554116674-31">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088876554116674-32"><span class="crayon-c"># derive the paths to the YOLO weights and model configuration</span></div><div class="crayon-line" id="crayon-5c93e5d088876554116674-33"><span class="crayon-v">weightsPath</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">os.path</span><span class="crayon-sy">.</span><span class="crayon-v">sep</span><span class="crayon-sy">.</span><span class="crayon-e">join</span><span class="crayon-sy">(</span><span class="crayon-sy">[</span><span class="crayon-v">args</span><span class="crayon-sy">[</span><span class="crayon-s">"yolo"</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"yolov3.weights"</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088876554116674-34"><span class="crayon-v">configPath</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">os.path</span><span class="crayon-sy">.</span><span class="crayon-v">sep</span><span class="crayon-sy">.</span><span class="crayon-e">join</span><span class="crayon-sy">(</span><span class="crayon-sy">[</span><span class="crayon-v">args</span><span class="crayon-sy">[</span><span class="crayon-s">"yolo"</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"yolov3.cfg"</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d088876554116674-35">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088876554116674-36"><span class="crayon-c"># load our YOLO object detector trained on COCO dataset (80 classes)</span></div><div class="crayon-line" id="crayon-5c93e5d088876554116674-37"><span class="crayon-c"># and determine only the *output* layer names that we need from YOLO</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088876554116674-38"><span class="crayon-k ">print</span><span class="crayon-sy">(</span><span class="crayon-s">"[INFO] loading YOLO from disk..."</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d088876554116674-39"><span class="crayon-v">net</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-v">dnn</span><span class="crayon-sy">.</span><span class="crayon-e">readNetFromDarknet</span><span class="crayon-sy">(</span><span class="crayon-v">configPath</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">weightsPath</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d088876554116674-40"><span class="crayon-v">ln</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">net</span><span class="crayon-sy">.</span><span class="crayon-e">getLayerNames</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d088876554116674-41"><span class="crayon-v">ln</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-v">ln</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">net</span><span class="crayon-sy">.</span><span class="crayon-e">getUnconnectedOutLayers</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">]</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0046 seconds] -->
<p>Here we load labels and generate colors followed by loading our YOLO model and determining output layer names.</p>
<p>Next, we’ll take care of some video-specific tasks:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93e5d08887c487129687" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">YOLO Object Detection with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft"># initialize the video stream, pointer to output video file, and
# frame dimensions
vs = cv2.VideoCapture(args["input"])
writer = None
(W, H) = (None, None)

# try to determine the total number of frames in the video file
try:
	prop = cv2.cv.CV_CAP_PROP_FRAME_COUNT if imutils.is_cv2() \
		else cv2.CAP_PROP_FRAME_COUNT
	total = int(vs.get(prop))
	print("[INFO] {} total frames in video".format(total))

# an error occurred while trying to determine the total
# number of frames in the video file
except:
	print("[INFO] could not determine # of frames in video")
	print("[INFO] no approx. completion time can be provided")
	total = -1</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93e5d08887c487129687-43">43</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d08887c487129687-44">44</div><div class="crayon-num" data-line="crayon-5c93e5d08887c487129687-45">45</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d08887c487129687-46">46</div><div class="crayon-num" data-line="crayon-5c93e5d08887c487129687-47">47</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d08887c487129687-48">48</div><div class="crayon-num" data-line="crayon-5c93e5d08887c487129687-49">49</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d08887c487129687-50">50</div><div class="crayon-num" data-line="crayon-5c93e5d08887c487129687-51">51</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d08887c487129687-52">52</div><div class="crayon-num" data-line="crayon-5c93e5d08887c487129687-53">53</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d08887c487129687-54">54</div><div class="crayon-num" data-line="crayon-5c93e5d08887c487129687-55">55</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d08887c487129687-56">56</div><div class="crayon-num" data-line="crayon-5c93e5d08887c487129687-57">57</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d08887c487129687-58">58</div><div class="crayon-num" data-line="crayon-5c93e5d08887c487129687-59">59</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d08887c487129687-60">60</div><div class="crayon-num" data-line="crayon-5c93e5d08887c487129687-61">61</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93e5d08887c487129687-43"><span class="crayon-c"># initialize the video stream, pointer to output video file, and</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d08887c487129687-44"><span class="crayon-c"># frame dimensions</span></div><div class="crayon-line" id="crayon-5c93e5d08887c487129687-45"><span class="crayon-v">vs</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">VideoCapture</span><span class="crayon-sy">(</span><span class="crayon-v">args</span><span class="crayon-sy">[</span><span class="crayon-s">"input"</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d08887c487129687-46"><span class="crayon-v">writer</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-t">None</span></div><div class="crayon-line" id="crayon-5c93e5d08887c487129687-47"><span class="crayon-sy">(</span><span class="crayon-k ">W</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">H</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-t">None</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">None</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d08887c487129687-48">&nbsp;</div><div class="crayon-line" id="crayon-5c93e5d08887c487129687-49"><span class="crayon-c"># try to determine the total number of frames in the video file</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d08887c487129687-50"><span class="crayon-st">try</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-5c93e5d08887c487129687-51"><span class="crayon-h">	</span><span class="crayon-v">prop</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-v">cv</span><span class="crayon-sy">.</span><span class="crayon-e">CV_CAP_PROP_FRAME_COUNT </span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-v">imutils</span><span class="crayon-sy">.</span><span class="crayon-e">is_cv2</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">\</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d08887c487129687-52"><span class="crayon-h">		</span><span class="crayon-st">else</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">CAP_PROP_FRAME_COUNT</span></div><div class="crayon-line" id="crayon-5c93e5d08887c487129687-53"><span class="crayon-e">	</span><span class="crayon-v">total</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">int</span><span class="crayon-sy">(</span><span class="crayon-v">vs</span><span class="crayon-sy">.</span><span class="crayon-e">get</span><span class="crayon-sy">(</span><span class="crayon-v">prop</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d08887c487129687-54"><span class="crayon-h">	</span><span class="crayon-k ">print</span><span class="crayon-sy">(</span><span class="crayon-s">"[INFO] {} total frames in video"</span><span class="crayon-sy">.</span><span class="crayon-k ">format</span><span class="crayon-sy">(</span><span class="crayon-v">total</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d08887c487129687-55">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d08887c487129687-56"><span class="crayon-c"># an error occurred while trying to determine the total</span></div><div class="crayon-line" id="crayon-5c93e5d08887c487129687-57"><span class="crayon-c"># number of frames in the video file</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d08887c487129687-58"><span class="crayon-st">except</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-5c93e5d08887c487129687-59"><span class="crayon-h">	</span><span class="crayon-k ">print</span><span class="crayon-sy">(</span><span class="crayon-s">"[INFO] could not determine # of frames in video"</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d08887c487129687-60"><span class="crayon-h">	</span><span class="crayon-k ">print</span><span class="crayon-sy">(</span><span class="crayon-s">"[INFO] no approx. completion time can be provided"</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d08887c487129687-61"><span class="crayon-h">	</span><span class="crayon-v">total</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-cn">1</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0029 seconds] -->
<p>In this block, we:</p>
<ul>
<li>Open a file pointer to the video file for reading frames in the upcoming loop (<strong>Line 45</strong>).</li>
<li>Initialize our video 
			<span id="crayon-5c93e5d088881889084004" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">writer</span></span></span>&nbsp; and frame dimensions (<strong>Lines 46 and 47</strong>).</li>
<li>Try to determine the 
			<span id="crayon-5c93e5d088885601442624" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">total</span></span></span>&nbsp; number of frames in the video file so we can estimate how long processing the entire video will take (<strong>Lines 50-61</strong>).</li>
</ul>
<p>Now we’re ready to start processing frames one by one:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93e5d08888c108402704" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">YOLO Object Detection with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft"># loop over frames from the video file stream
while True:
	# read the next frame from the file
	(grabbed, frame) = vs.read()

	# if the frame was not grabbed, then we have reached the end
	# of the stream
	if not grabbed:
		break

	# if the frame dimensions are empty, grab them
	if W is None or H is None:
		(H, W) = frame.shape[:2]</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93e5d08888c108402704-63">63</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d08888c108402704-64">64</div><div class="crayon-num" data-line="crayon-5c93e5d08888c108402704-65">65</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d08888c108402704-66">66</div><div class="crayon-num" data-line="crayon-5c93e5d08888c108402704-67">67</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d08888c108402704-68">68</div><div class="crayon-num" data-line="crayon-5c93e5d08888c108402704-69">69</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d08888c108402704-70">70</div><div class="crayon-num" data-line="crayon-5c93e5d08888c108402704-71">71</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d08888c108402704-72">72</div><div class="crayon-num" data-line="crayon-5c93e5d08888c108402704-73">73</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d08888c108402704-74">74</div><div class="crayon-num" data-line="crayon-5c93e5d08888c108402704-75">75</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93e5d08888c108402704-63"><span class="crayon-c"># loop over frames from the video file stream</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d08888c108402704-64"><span class="crayon-st">while</span><span class="crayon-h"> </span><span class="crayon-t">True</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-5c93e5d08888c108402704-65"><span class="crayon-h">	</span><span class="crayon-c"># read the next frame from the file</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d08888c108402704-66"><span class="crayon-h">	</span><span class="crayon-sy">(</span><span class="crayon-v">grabbed</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">frame</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">vs</span><span class="crayon-sy">.</span><span class="crayon-e">read</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d08888c108402704-67">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d08888c108402704-68"><span class="crayon-h">	</span><span class="crayon-c"># if the frame was not grabbed, then we have reached the end</span></div><div class="crayon-line" id="crayon-5c93e5d08888c108402704-69"><span class="crayon-h">	</span><span class="crayon-c"># of the stream</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d08888c108402704-70"><span class="crayon-h">	</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-st">not</span><span class="crayon-h"> </span><span class="crayon-v">grabbed</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-5c93e5d08888c108402704-71"><span class="crayon-h">		</span><span class="crayon-st">break</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d08888c108402704-72">&nbsp;</div><div class="crayon-line" id="crayon-5c93e5d08888c108402704-73"><span class="crayon-h">	</span><span class="crayon-c"># if the frame dimensions are empty, grab them</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d08888c108402704-74"><span class="crayon-h">	</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-k ">W</span><span class="crayon-h"> </span><span class="crayon-st">is</span><span class="crayon-h"> </span><span class="crayon-t">None</span><span class="crayon-h"> </span><span class="crayon-st">or</span><span class="crayon-h"> </span><span class="crayon-i">H</span><span class="crayon-h"> </span><span class="crayon-st">is</span><span class="crayon-h"> </span><span class="crayon-t">None</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-5c93e5d08888c108402704-75"><span class="crayon-h">		</span><span class="crayon-sy">(</span><span class="crayon-v">H</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-k ">W</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">frame</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">[</span><span class="crayon-o">:</span><span class="crayon-cn">2</span><span class="crayon-sy">]</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0021 seconds] -->
<p>We define a 
			<span id="crayon-5c93e5d088890563494243" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-st">while</span></span></span>&nbsp; loop (<strong>Line 64</strong>) and then we grab our first frame (<strong>Line 66</strong>).</p>
<p>We make a check to see if it is the last frame of the video. If so we need to 
			<span id="crayon-5c93e5d088895108375798" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-st">break</span></span></span>&nbsp; from the 
			<span id="crayon-5c93e5d088899722907458" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-st">while</span></span></span>&nbsp; loop (<strong>Lines 70 and 71</strong>).</p>
<p>Next, we grab the frame dimensions if they haven’t been grabbed yet (<strong>Lines 74 and 75</strong>).</p>
<p>Next, let’s perform a forward pass of YOLO, using our current 
			<span id="crayon-5c93e5d08889d185315000" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">frame</span></span></span>&nbsp; as the input:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93e5d0888a1936456418" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">YOLO Object Detection with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft">	# construct a blob from the input frame and then perform a forward
	# pass of the YOLO object detector, giving us our bounding boxes
	# and associated probabilities
	blob = cv2.dnn.blobFromImage(frame, 1 / 255.0, (416, 416),
		swapRB=True, crop=False)
	net.setInput(blob)
	start = time.time()
	layerOutputs = net.forward(ln)
	end = time.time()

	# initialize our lists of detected bounding boxes, confidences,
	# and class IDs, respectively
	boxes = []
	confidences = []
	classIDs = []</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93e5d0888a1936456418-77">77</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888a1936456418-78">78</div><div class="crayon-num" data-line="crayon-5c93e5d0888a1936456418-79">79</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888a1936456418-80">80</div><div class="crayon-num" data-line="crayon-5c93e5d0888a1936456418-81">81</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888a1936456418-82">82</div><div class="crayon-num" data-line="crayon-5c93e5d0888a1936456418-83">83</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888a1936456418-84">84</div><div class="crayon-num" data-line="crayon-5c93e5d0888a1936456418-85">85</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888a1936456418-86">86</div><div class="crayon-num" data-line="crayon-5c93e5d0888a1936456418-87">87</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888a1936456418-88">88</div><div class="crayon-num" data-line="crayon-5c93e5d0888a1936456418-89">89</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888a1936456418-90">90</div><div class="crayon-num" data-line="crayon-5c93e5d0888a1936456418-91">91</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93e5d0888a1936456418-77"><span class="crayon-h">	</span><span class="crayon-c"># construct a blob from the input frame and then perform a forward</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888a1936456418-78"><span class="crayon-h">	</span><span class="crayon-c"># pass of the YOLO object detector, giving us our bounding boxes</span></div><div class="crayon-line" id="crayon-5c93e5d0888a1936456418-79"><span class="crayon-h">	</span><span class="crayon-c"># and associated probabilities</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888a1936456418-80"><span class="crayon-h">	</span><span class="crayon-v">blob</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-v">dnn</span><span class="crayon-sy">.</span><span class="crayon-e">blobFromImage</span><span class="crayon-sy">(</span><span class="crayon-v">frame</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-cn">255.0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-cn">416</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">416</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span></div><div class="crayon-line" id="crayon-5c93e5d0888a1936456418-81"><span class="crayon-h">		</span><span class="crayon-v">swapRB</span><span class="crayon-o">=</span><span class="crayon-t">True</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">crop</span><span class="crayon-o">=</span><span class="crayon-t">False</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888a1936456418-82"><span class="crayon-h">	</span><span class="crayon-v">net</span><span class="crayon-sy">.</span><span class="crayon-e">setInput</span><span class="crayon-sy">(</span><span class="crayon-v">blob</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d0888a1936456418-83"><span class="crayon-h">	</span><span class="crayon-v">start</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">time</span><span class="crayon-sy">.</span><span class="crayon-k ">time</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888a1936456418-84"><span class="crayon-h">	</span><span class="crayon-v">layerOutputs</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">net</span><span class="crayon-sy">.</span><span class="crayon-e">forward</span><span class="crayon-sy">(</span><span class="crayon-v">ln</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d0888a1936456418-85"><span class="crayon-h">	</span><span class="crayon-v">end</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">time</span><span class="crayon-sy">.</span><span class="crayon-k ">time</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888a1936456418-86">&nbsp;</div><div class="crayon-line" id="crayon-5c93e5d0888a1936456418-87"><span class="crayon-h">	</span><span class="crayon-c"># initialize our lists of detected bounding boxes, confidences,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888a1936456418-88"><span class="crayon-h">	</span><span class="crayon-c"># and class IDs, respectively</span></div><div class="crayon-line" id="crayon-5c93e5d0888a1936456418-89"><span class="crayon-h">	</span><span class="crayon-v">boxes</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888a1936456418-90"><span class="crayon-h">	</span><span class="crayon-v">confidences</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-5c93e5d0888a1936456418-91"><span class="crayon-h">	</span><span class="crayon-v">classIDs</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-sy">]</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0031 seconds] -->
<p>Here we construct a 
			<span id="crayon-5c93e5d0888a6783117201" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">blob</span></span></span>&nbsp;
 and pass it through the network, obtaining predictions. I’ve surrounded
 the forward pass operation with time stamps so we can calculate the 
elapsed time to make predictions on one frame — this will help us 
estimate the time needed to process the entire video.</p>
<p>We’ll then go ahead and initialize the same three lists we used in our previous script: 
			<span id="crayon-5c93e5d0888aa801623512" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">boxes</span></span></span>&nbsp;, 
			<span id="crayon-5c93e5d0888af544497292" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">confidences</span></span></span>&nbsp;, and 
			<span id="crayon-5c93e5d0888b3741998488" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">classIDs</span></span></span>&nbsp;.</p>
<p>This next block is, again,&nbsp;<em>identical</em> to our previous script:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93e5d0888b7147957252" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">YOLO Object Detection with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft">	# loop over each of the layer outputs
	for output in layerOutputs:
		# loop over each of the detections
		for detection in output:
			# extract the class ID and confidence (i.e., probability)
			# of the current object detection
			scores = detection[5:]
			classID = np.argmax(scores)
			confidence = scores[classID]

			# filter out weak predictions by ensuring the detected
			# probability is greater than the minimum probability
			if confidence &gt; args["confidence"]:
				# scale the bounding box coordinates back relative to
				# the size of the image, keeping in mind that YOLO
				# actually returns the center (x, y)-coordinates of
				# the bounding box followed by the boxes' width and
				# height
				box = detection[0:4] * np.array([W, H, W, H])
				(centerX, centerY, width, height) = box.astype("int")

				# use the center (x, y)-coordinates to derive the top
				# and and left corner of the bounding box
				x = int(centerX - (width / 2))
				y = int(centerY - (height / 2))

				# update our list of bounding box coordinates,
				# confidences, and class IDs
				boxes.append([x, y, int(width), int(height)])
				confidences.append(float(confidence))
				classIDs.append(classID)</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93e5d0888b7147957252-93">93</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888b7147957252-94">94</div><div class="crayon-num" data-line="crayon-5c93e5d0888b7147957252-95">95</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888b7147957252-96">96</div><div class="crayon-num" data-line="crayon-5c93e5d0888b7147957252-97">97</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888b7147957252-98">98</div><div class="crayon-num" data-line="crayon-5c93e5d0888b7147957252-99">99</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888b7147957252-100">100</div><div class="crayon-num" data-line="crayon-5c93e5d0888b7147957252-101">101</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888b7147957252-102">102</div><div class="crayon-num" data-line="crayon-5c93e5d0888b7147957252-103">103</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888b7147957252-104">104</div><div class="crayon-num" data-line="crayon-5c93e5d0888b7147957252-105">105</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888b7147957252-106">106</div><div class="crayon-num" data-line="crayon-5c93e5d0888b7147957252-107">107</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888b7147957252-108">108</div><div class="crayon-num" data-line="crayon-5c93e5d0888b7147957252-109">109</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888b7147957252-110">110</div><div class="crayon-num" data-line="crayon-5c93e5d0888b7147957252-111">111</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888b7147957252-112">112</div><div class="crayon-num" data-line="crayon-5c93e5d0888b7147957252-113">113</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888b7147957252-114">114</div><div class="crayon-num" data-line="crayon-5c93e5d0888b7147957252-115">115</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888b7147957252-116">116</div><div class="crayon-num" data-line="crayon-5c93e5d0888b7147957252-117">117</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888b7147957252-118">118</div><div class="crayon-num" data-line="crayon-5c93e5d0888b7147957252-119">119</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888b7147957252-120">120</div><div class="crayon-num" data-line="crayon-5c93e5d0888b7147957252-121">121</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888b7147957252-122">122</div><div class="crayon-num" data-line="crayon-5c93e5d0888b7147957252-123">123</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93e5d0888b7147957252-93"><span class="crayon-h">	</span><span class="crayon-c"># loop over each of the layer outputs</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888b7147957252-94"><span class="crayon-h">	</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-e">output </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">layerOutputs</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-5c93e5d0888b7147957252-95"><span class="crayon-h">		</span><span class="crayon-c"># loop over each of the detections</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888b7147957252-96"><span class="crayon-h">		</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-e">detection </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">output</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-5c93e5d0888b7147957252-97"><span class="crayon-h">			</span><span class="crayon-c"># extract the class ID and confidence (i.e., probability)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888b7147957252-98"><span class="crayon-h">			</span><span class="crayon-c"># of the current object detection</span></div><div class="crayon-line" id="crayon-5c93e5d0888b7147957252-99"><span class="crayon-h">			</span><span class="crayon-v">scores</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">detection</span><span class="crayon-sy">[</span><span class="crayon-cn">5</span><span class="crayon-o">:</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888b7147957252-100"><span class="crayon-h">			</span><span class="crayon-v">classID</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">argmax</span><span class="crayon-sy">(</span><span class="crayon-v">scores</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d0888b7147957252-101"><span class="crayon-h">			</span><span class="crayon-v">confidence</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">scores</span><span class="crayon-sy">[</span><span class="crayon-v">classID</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888b7147957252-102">&nbsp;</div><div class="crayon-line" id="crayon-5c93e5d0888b7147957252-103"><span class="crayon-h">			</span><span class="crayon-c"># filter out weak predictions by ensuring the detected</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888b7147957252-104"><span class="crayon-h">			</span><span class="crayon-c"># probability is greater than the minimum probability</span></div><div class="crayon-line" id="crayon-5c93e5d0888b7147957252-105"><span class="crayon-h">			</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-v">confidence</span><span class="crayon-h"> </span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-v">args</span><span class="crayon-sy">[</span><span class="crayon-s">"confidence"</span><span class="crayon-sy">]</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888b7147957252-106"><span class="crayon-h">				</span><span class="crayon-c"># scale the bounding box coordinates back relative to</span></div><div class="crayon-line" id="crayon-5c93e5d0888b7147957252-107"><span class="crayon-h">				</span><span class="crayon-c"># the size of the image, keeping in mind that YOLO</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888b7147957252-108"><span class="crayon-h">				</span><span class="crayon-c"># actually returns the center (x, y)-coordinates of</span></div><div class="crayon-line" id="crayon-5c93e5d0888b7147957252-109"><span class="crayon-h">				</span><span class="crayon-c"># the bounding box followed by the boxes' width and</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888b7147957252-110"><span class="crayon-h">				</span><span class="crayon-c"># height</span></div><div class="crayon-line" id="crayon-5c93e5d0888b7147957252-111"><span class="crayon-h">				</span><span class="crayon-v">box</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">detection</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-o">:</span><span class="crayon-cn">4</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-k ">array</span><span class="crayon-sy">(</span><span class="crayon-sy">[</span><span class="crayon-k ">W</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">H</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-k ">W</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">H</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888b7147957252-112"><span class="crayon-h">				</span><span class="crayon-sy">(</span><span class="crayon-v">centerX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">centerY</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">width</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">height</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">box</span><span class="crayon-sy">.</span><span class="crayon-e">astype</span><span class="crayon-sy">(</span><span class="crayon-s">"int"</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d0888b7147957252-113">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888b7147957252-114"><span class="crayon-h">				</span><span class="crayon-c"># use the center (x, y)-coordinates to derive the top</span></div><div class="crayon-line" id="crayon-5c93e5d0888b7147957252-115"><span class="crayon-h">				</span><span class="crayon-c"># and and left corner of the bounding box</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888b7147957252-116"><span class="crayon-h">				</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">int</span><span class="crayon-sy">(</span><span class="crayon-v">centerX</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">width</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d0888b7147957252-117"><span class="crayon-h">				</span><span class="crayon-v">y</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">int</span><span class="crayon-sy">(</span><span class="crayon-v">centerY</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">height</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888b7147957252-118">&nbsp;</div><div class="crayon-line" id="crayon-5c93e5d0888b7147957252-119"><span class="crayon-h">				</span><span class="crayon-c"># update our list of bounding box coordinates,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888b7147957252-120"><span class="crayon-h">				</span><span class="crayon-c"># confidences, and class IDs</span></div><div class="crayon-line" id="crayon-5c93e5d0888b7147957252-121"><span class="crayon-h">				</span><span class="crayon-v">boxes</span><span class="crayon-sy">.</span><span class="crayon-e">append</span><span class="crayon-sy">(</span><span class="crayon-sy">[</span><span class="crayon-v">x</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-k ">int</span><span class="crayon-sy">(</span><span class="crayon-v">width</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-k ">int</span><span class="crayon-sy">(</span><span class="crayon-v">height</span><span class="crayon-sy">)</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888b7147957252-122"><span class="crayon-h">				</span><span class="crayon-v">confidences</span><span class="crayon-sy">.</span><span class="crayon-e">append</span><span class="crayon-sy">(</span><span class="crayon-k ">float</span><span class="crayon-sy">(</span><span class="crayon-v">confidence</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d0888b7147957252-123"><span class="crayon-h">				</span><span class="crayon-v">classIDs</span><span class="crayon-sy">.</span><span class="crayon-e">append</span><span class="crayon-sy">(</span><span class="crayon-v">classID</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0074 seconds] -->
<p>In this code block, we:</p>
<ul>
<li>Loop over output layers and detections (<strong>Lines 94-96</strong>).</li>
<li>Extract the 
			<span id="crayon-5c93e5d0888bc928181867" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">classID</span></span></span>&nbsp; and filter out weak predictions (<strong>Lines 99-105</strong>).</li>
<li>Compute bounding box coordinates (<strong>Lines 111-117</strong>).</li>
<li>Update our respective lists (<strong>Lines 121-123</strong>).</li>
</ul>
<p>Next, we’ll apply non-maxima suppression and begin to proceed to annotate the frame:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93e5d0888c4129028733" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">YOLO Object Detection with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft">	# apply non-maxima suppression to suppress weak, overlapping
	# bounding boxes
	idxs = cv2.dnn.NMSBoxes(boxes, confidences, args["confidence"],
		args["threshold"])

	# ensure at least one detection exists
	if len(idxs) &gt; 0:
		# loop over the indexes we are keeping
		for i in idxs.flatten():
			# extract the bounding box coordinates
			(x, y) = (boxes[i][0], boxes[i][1])
			(w, h) = (boxes[i][2], boxes[i][3])

			# draw a bounding box rectangle and label on the frame
			color = [int(c) for c in COLORS[classIDs[i]]]
			cv2.rectangle(frame, (x, y), (x + w, y + h), color, 2)
			text = "{}: {:.4f}".format(LABELS[classIDs[i]],
				confidences[i])
			cv2.putText(frame, text, (x, y - 5),
				cv2.FONT_HERSHEY_SIMPLEX, 0.5, color, 2)</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93e5d0888c4129028733-125">125</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888c4129028733-126">126</div><div class="crayon-num" data-line="crayon-5c93e5d0888c4129028733-127">127</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888c4129028733-128">128</div><div class="crayon-num" data-line="crayon-5c93e5d0888c4129028733-129">129</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888c4129028733-130">130</div><div class="crayon-num" data-line="crayon-5c93e5d0888c4129028733-131">131</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888c4129028733-132">132</div><div class="crayon-num" data-line="crayon-5c93e5d0888c4129028733-133">133</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888c4129028733-134">134</div><div class="crayon-num" data-line="crayon-5c93e5d0888c4129028733-135">135</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888c4129028733-136">136</div><div class="crayon-num" data-line="crayon-5c93e5d0888c4129028733-137">137</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888c4129028733-138">138</div><div class="crayon-num" data-line="crayon-5c93e5d0888c4129028733-139">139</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888c4129028733-140">140</div><div class="crayon-num" data-line="crayon-5c93e5d0888c4129028733-141">141</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888c4129028733-142">142</div><div class="crayon-num" data-line="crayon-5c93e5d0888c4129028733-143">143</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888c4129028733-144">144</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93e5d0888c4129028733-125"><span class="crayon-h">	</span><span class="crayon-c"># apply non-maxima suppression to suppress weak, overlapping</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888c4129028733-126"><span class="crayon-h">	</span><span class="crayon-c"># bounding boxes</span></div><div class="crayon-line" id="crayon-5c93e5d0888c4129028733-127"><span class="crayon-h">	</span><span class="crayon-v">idxs</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-v">dnn</span><span class="crayon-sy">.</span><span class="crayon-e">NMSBoxes</span><span class="crayon-sy">(</span><span class="crayon-v">boxes</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">confidences</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">args</span><span class="crayon-sy">[</span><span class="crayon-s">"confidence"</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888c4129028733-128"><span class="crayon-h">		</span><span class="crayon-v">args</span><span class="crayon-sy">[</span><span class="crayon-s">"threshold"</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d0888c4129028733-129">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888c4129028733-130"><span class="crayon-h">	</span><span class="crayon-c"># ensure at least one detection exists</span></div><div class="crayon-line" id="crayon-5c93e5d0888c4129028733-131"><span class="crayon-h">	</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-k ">len</span><span class="crayon-sy">(</span><span class="crayon-v">idxs</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888c4129028733-132"><span class="crayon-h">		</span><span class="crayon-c"># loop over the indexes we are keeping</span></div><div class="crayon-line" id="crayon-5c93e5d0888c4129028733-133"><span class="crayon-h">		</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">idxs</span><span class="crayon-sy">.</span><span class="crayon-e">flatten</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888c4129028733-134"><span class="crayon-h">			</span><span class="crayon-c"># extract the bounding box coordinates</span></div><div class="crayon-line" id="crayon-5c93e5d0888c4129028733-135"><span class="crayon-h">			</span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">boxes</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">boxes</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888c4129028733-136"><span class="crayon-h">			</span><span class="crayon-sy">(</span><span class="crayon-k ">w</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">h</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">boxes</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">[</span><span class="crayon-cn">2</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">boxes</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">[</span><span class="crayon-cn">3</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d0888c4129028733-137">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888c4129028733-138"><span class="crayon-h">			</span><span class="crayon-c"># draw a bounding box rectangle and label on the frame</span></div><div class="crayon-line" id="crayon-5c93e5d0888c4129028733-139"><span class="crayon-h">			</span><span class="crayon-v">color</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-k ">int</span><span class="crayon-sy">(</span><span class="crayon-v">c</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">c</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">COLORS</span><span class="crayon-sy">[</span><span class="crayon-v">classIDs</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">]</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888c4129028733-140"><span class="crayon-h">			</span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">rectangle</span><span class="crayon-sy">(</span><span class="crayon-v">frame</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-k ">w</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-v">h</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">color</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d0888c4129028733-141"><span class="crayon-h">			</span><span class="crayon-v">text</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"{}: {:.4f}"</span><span class="crayon-sy">.</span><span class="crayon-k ">format</span><span class="crayon-sy">(</span><span class="crayon-v">LABELS</span><span class="crayon-sy">[</span><span class="crayon-v">classIDs</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888c4129028733-142"><span class="crayon-h">				</span><span class="crayon-v">confidences</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d0888c4129028733-143"><span class="crayon-h">			</span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">putText</span><span class="crayon-sy">(</span><span class="crayon-v">frame</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">text</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888c4129028733-144"><span class="crayon-h">				</span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-v">FONT_HERSHEY_SIMPLEX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">0.5</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">color</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0063 seconds] -->
<p>You should recognize these lines as well. Here we:</p>
<ul>
<li>Apply NMS using the 
			<span id="crayon-5c93e5d0888ca884582776" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-v">dnn</span><span class="crayon-sy">.</span><span class="crayon-v">NMSBoxes</span></span></span>&nbsp; function (<strong>Lines 127 and 128</strong>) to suppress weak, overlapping bounding boxes. You can read more about <a href="https://www.pyimagesearch.com/2014/11/17/non-maximum-suppression-object-detection-python/" target="_blank" rel="noopener">non-maxima suppression here</a>.</li>
<li>Loop over the 
			<span id="crayon-5c93e5d0888ce025874172" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">idxs</span></span></span>&nbsp; calculated by NMS and draw the corresponding bounding boxes + labels (<strong>Lines 131-144</strong>).</li>
</ul>
<p>Let’s finish out the script:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93e5d0888d2129161537" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">YOLO Object Detection with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft">	# check if the video writer is None
	if writer is None:
		# initialize our video writer
		fourcc = cv2.VideoWriter_fourcc(*"MJPG")
		writer = cv2.VideoWriter(args["output"], fourcc, 30,
			(frame.shape[1], frame.shape[0]), True)

		# some information on processing single frame
		if total &gt; 0:
			elap = (end - start)
			print("[INFO] single frame took {:.4f} seconds".format(elap))
			print("[INFO] estimated total time to finish: {:.4f}".format(
				elap * total))

	# write the output frame to disk
	writer.write(frame)

# release the file pointers
print("[INFO] cleaning up...")
writer.release()
vs.release()</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93e5d0888d2129161537-146">146</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888d2129161537-147">147</div><div class="crayon-num" data-line="crayon-5c93e5d0888d2129161537-148">148</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888d2129161537-149">149</div><div class="crayon-num" data-line="crayon-5c93e5d0888d2129161537-150">150</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888d2129161537-151">151</div><div class="crayon-num" data-line="crayon-5c93e5d0888d2129161537-152">152</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888d2129161537-153">153</div><div class="crayon-num" data-line="crayon-5c93e5d0888d2129161537-154">154</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888d2129161537-155">155</div><div class="crayon-num" data-line="crayon-5c93e5d0888d2129161537-156">156</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888d2129161537-157">157</div><div class="crayon-num" data-line="crayon-5c93e5d0888d2129161537-158">158</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888d2129161537-159">159</div><div class="crayon-num" data-line="crayon-5c93e5d0888d2129161537-160">160</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888d2129161537-161">161</div><div class="crayon-num" data-line="crayon-5c93e5d0888d2129161537-162">162</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888d2129161537-163">163</div><div class="crayon-num" data-line="crayon-5c93e5d0888d2129161537-164">164</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888d2129161537-165">165</div><div class="crayon-num" data-line="crayon-5c93e5d0888d2129161537-166">166</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93e5d0888d2129161537-146"><span class="crayon-h">	</span><span class="crayon-c"># check if the video writer is None</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888d2129161537-147"><span class="crayon-h">	</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-e">writer </span><span class="crayon-st">is</span><span class="crayon-h"> </span><span class="crayon-t">None</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-5c93e5d0888d2129161537-148"><span class="crayon-h">		</span><span class="crayon-c"># initialize our video writer</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888d2129161537-149"><span class="crayon-h">		</span><span class="crayon-v">fourcc</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">VideoWriter_fourcc</span><span class="crayon-sy">(</span><span class="crayon-o">*</span><span class="crayon-s">"MJPG"</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d0888d2129161537-150"><span class="crayon-h">		</span><span class="crayon-v">writer</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">VideoWriter</span><span class="crayon-sy">(</span><span class="crayon-v">args</span><span class="crayon-sy">[</span><span class="crayon-s">"output"</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">fourcc</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">30</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888d2129161537-151"><span class="crayon-h">			</span><span class="crayon-sy">(</span><span class="crayon-v">frame</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">frame</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">True</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d0888d2129161537-152">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888d2129161537-153"><span class="crayon-h">		</span><span class="crayon-c"># some information on processing single frame</span></div><div class="crayon-line" id="crayon-5c93e5d0888d2129161537-154"><span class="crayon-h">		</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-v">total</span><span class="crayon-h"> </span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888d2129161537-155"><span class="crayon-h">			</span><span class="crayon-v">elap</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">end</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-v">start</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d0888d2129161537-156"><span class="crayon-h">			</span><span class="crayon-k ">print</span><span class="crayon-sy">(</span><span class="crayon-s">"[INFO] single frame took {:.4f} seconds"</span><span class="crayon-sy">.</span><span class="crayon-k ">format</span><span class="crayon-sy">(</span><span class="crayon-v">elap</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888d2129161537-157"><span class="crayon-h">			</span><span class="crayon-k ">print</span><span class="crayon-sy">(</span><span class="crayon-s">"[INFO] estimated total time to finish: {:.4f}"</span><span class="crayon-sy">.</span><span class="crayon-k ">format</span><span class="crayon-sy">(</span></div><div class="crayon-line" id="crayon-5c93e5d0888d2129161537-158"><span class="crayon-h">				</span><span class="crayon-v">elap</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-v">total</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888d2129161537-159">&nbsp;</div><div class="crayon-line" id="crayon-5c93e5d0888d2129161537-160"><span class="crayon-h">	</span><span class="crayon-c"># write the output frame to disk</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888d2129161537-161"><span class="crayon-h">	</span><span class="crayon-v">writer</span><span class="crayon-sy">.</span><span class="crayon-e">write</span><span class="crayon-sy">(</span><span class="crayon-v">frame</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d0888d2129161537-162">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888d2129161537-163"><span class="crayon-c"># release the file pointers</span></div><div class="crayon-line" id="crayon-5c93e5d0888d2129161537-164"><span class="crayon-k ">print</span><span class="crayon-sy">(</span><span class="crayon-s">"[INFO] cleaning up..."</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888d2129161537-165"><span class="crayon-v">writer</span><span class="crayon-sy">.</span><span class="crayon-e">release</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93e5d0888d2129161537-166"><span class="crayon-v">vs</span><span class="crayon-sy">.</span><span class="crayon-e">release</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0035 seconds] -->
<p>To wrap up, we simply:</p>
<ul>
<li>Initialize our video 
			<span id="crayon-5c93e5d0888d8067611476" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">writer</span></span></span>&nbsp; if necessary (<strong>Lines 147-151</strong>). The 
			<span id="crayon-5c93e5d0888dc564273125" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">writer</span></span></span>&nbsp; will be initialized on the first iteration of the loop.</li>
<li>Print out our estimates of how long it will take to process the video (<strong>Lines 154-158</strong>).</li>
<li>Write the 
			<span id="crayon-5c93e5d0888e0171661466" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">frame</span></span></span>&nbsp; to the output video file (<strong>Line 161</strong>).</li>
<li>Cleanup and release pointers (<strong>Lines 165 and 166</strong>).</li>
</ul>
<hr>
<p>To apply YOLO object detection to video streams, make sure you use the <em><strong>“Downloads”</strong></em> section of this blog post to download the source, YOLO object detector, and example videos.</p>
<p>From there, open up a terminal and execute the following command:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93e5d0888e5896525684" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">YOLO Object Detection with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Shell</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft">$ python yolo_video.py --input videos/car_chase_01.mp4 \
	--output output/car_chase_01.avi --yolo yolo-coco
[INFO] loading YOLO from disk...
[INFO] 583 total frames in video
[INFO] single frame took 0.3500 seconds
[INFO] estimated total time to finish: 204.0238
[INFO] cleaning up...</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93e5d0888e5896525684-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888e5896525684-2">2</div><div class="crayon-num" data-line="crayon-5c93e5d0888e5896525684-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888e5896525684-4">4</div><div class="crayon-num" data-line="crayon-5c93e5d0888e5896525684-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888e5896525684-6">6</div><div class="crayon-num" data-line="crayon-5c93e5d0888e5896525684-7">7</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93e5d0888e5896525684-1"><span class="crayon-sy">$</span><span class="crayon-h"> </span><span class="crayon-e">python </span><span class="crayon-v">yolo_video</span><span class="crayon-e">.py</span><span class="crayon-h"> </span><span class="crayon-o">--</span><span class="crayon-e">input </span><span class="crayon-v">videos</span><span class="crayon-o">/</span><span class="crayon-v">car_chase_01</span><span class="crayon-e">.mp4</span><span class="crayon-h"> </span><span class="crayon-sy">\</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888e5896525684-2"><span class="crayon-h">	</span><span class="crayon-o">--</span><span class="crayon-e">output </span><span class="crayon-v">output</span><span class="crayon-o">/</span><span class="crayon-v">car_chase_01</span><span class="crayon-e">.avi</span><span class="crayon-h"> </span><span class="crayon-o">--</span><span class="crayon-e">yolo </span><span class="crayon-v">yolo</span><span class="crayon-o">-</span><span class="crayon-i">coco</span></div><div class="crayon-line" id="crayon-5c93e5d0888e5896525684-3"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-e">loading </span><span class="crayon-e">YOLO </span><span class="crayon-e">from </span><span class="crayon-v">disk</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888e5896525684-4"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-cn">583</span><span class="crayon-h"> </span><span class="crayon-e">total </span><span class="crayon-e">frames </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-i">video</span></div><div class="crayon-line" id="crayon-5c93e5d0888e5896525684-5"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-e">single </span><span class="crayon-e">frame </span><span class="crayon-i">took</span><span class="crayon-h"> </span><span class="crayon-cn">0.3500</span><span class="crayon-h"> </span><span class="crayon-i">seconds</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888e5896525684-6"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-e">estimated </span><span class="crayon-e">total </span><span class="crayon-r">time</span><span class="crayon-h"> </span><span class="crayon-st">to</span><span class="crayon-h"> </span><span class="crayon-v">finish</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-cn">204.0238</span></div><div class="crayon-line" id="crayon-5c93e5d0888e5896525684-7"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-e">cleaning </span><span class="crayon-v">up</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0019 seconds] -->
<p></p><div style="max-width: 610px" class="wp-caption aligncenter"><img class="size-full" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/yolo_car_chase_01_output.gif" width="600"><p class="wp-caption-text"><strong>Figure 6:</strong> YOLO deep learning object detection applied to a car crash video.</p></div><p></p>
<p>Above you can see a GIF excerpt from <a href="https://www.youtube.com/watch?v=7K3dZmrcriU" target="_blank" rel="noopener">a car chase video I found on YouTube</a>.</p>
<p>In the video/GIF, you can see not only the vehicles being detected, but people, as well as the traffic lights, are detected too!</p>
<p>The YOLO object detector is performing quite well here. Let’s try a different video clip from the same car chase video:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93e5d0888ed486453613" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">YOLO Object Detection with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Shell</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft">$ python yolo_video.py --input videos/car_chase_02.mp4 \
	--output output/car_chase_02.avi --yolo yolo-coco
[INFO] loading YOLO from disk...
[INFO] 3132 total frames in video
[INFO] single frame took 0.3455 seconds
[INFO] estimated total time to finish: 1082.0806
[INFO] cleaning up...</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93e5d0888ed486453613-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888ed486453613-2">2</div><div class="crayon-num" data-line="crayon-5c93e5d0888ed486453613-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888ed486453613-4">4</div><div class="crayon-num" data-line="crayon-5c93e5d0888ed486453613-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888ed486453613-6">6</div><div class="crayon-num" data-line="crayon-5c93e5d0888ed486453613-7">7</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93e5d0888ed486453613-1"><span class="crayon-sy">$</span><span class="crayon-h"> </span><span class="crayon-e">python </span><span class="crayon-v">yolo_video</span><span class="crayon-e">.py</span><span class="crayon-h"> </span><span class="crayon-o">--</span><span class="crayon-e">input </span><span class="crayon-v">videos</span><span class="crayon-o">/</span><span class="crayon-v">car_chase_02</span><span class="crayon-e">.mp4</span><span class="crayon-h"> </span><span class="crayon-sy">\</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888ed486453613-2"><span class="crayon-h">	</span><span class="crayon-o">--</span><span class="crayon-e">output </span><span class="crayon-v">output</span><span class="crayon-o">/</span><span class="crayon-v">car_chase_02</span><span class="crayon-e">.avi</span><span class="crayon-h"> </span><span class="crayon-o">--</span><span class="crayon-e">yolo </span><span class="crayon-v">yolo</span><span class="crayon-o">-</span><span class="crayon-i">coco</span></div><div class="crayon-line" id="crayon-5c93e5d0888ed486453613-3"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-e">loading </span><span class="crayon-e">YOLO </span><span class="crayon-e">from </span><span class="crayon-v">disk</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888ed486453613-4"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-cn">3132</span><span class="crayon-h"> </span><span class="crayon-e">total </span><span class="crayon-e">frames </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-i">video</span></div><div class="crayon-line" id="crayon-5c93e5d0888ed486453613-5"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-e">single </span><span class="crayon-e">frame </span><span class="crayon-i">took</span><span class="crayon-h"> </span><span class="crayon-cn">0.3455</span><span class="crayon-h"> </span><span class="crayon-i">seconds</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888ed486453613-6"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-e">estimated </span><span class="crayon-e">total </span><span class="crayon-r">time</span><span class="crayon-h"> </span><span class="crayon-st">to</span><span class="crayon-h"> </span><span class="crayon-v">finish</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-cn">1082.0806</span></div><div class="crayon-line" id="crayon-5c93e5d0888ed486453613-7"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-e">cleaning </span><span class="crayon-v">up</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0020 seconds] -->
<p></p><div style="max-width: 610px" class="wp-caption aligncenter"><img class="size-full" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/yolo_car_chase_02_output.gif" width="600"><p class="wp-caption-text"><strong>Figure 7:</strong> In this video of a suspect on the run, we have used OpenCV and YOLO object detection to find the person.</p></div><p></p>
<p>The suspect has now fled the car and is running across a parking lot.</p>
<p>YOLO is once again able to detect people.</p>
<p>At one point the suspect is actually able to make it back to their 
car and continue the chase — let’s see how YOLO performs there as well:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93e5d0888f3103612886" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">YOLO Object Detection with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Shell</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft">$ python yolo_video.py --input videos/car_chase_03.mp4 \
	--output output/car_chase_03.avi --yolo yolo-coco
[INFO] loading YOLO from disk...
[INFO] 749 total frames in video
[INFO] single frame took 0.3442 seconds
[INFO] estimated total time to finish: 257.8418
[INFO] cleaning up...</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93e5d0888f3103612886-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888f3103612886-2">2</div><div class="crayon-num" data-line="crayon-5c93e5d0888f3103612886-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888f3103612886-4">4</div><div class="crayon-num" data-line="crayon-5c93e5d0888f3103612886-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888f3103612886-6">6</div><div class="crayon-num" data-line="crayon-5c93e5d0888f3103612886-7">7</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93e5d0888f3103612886-1"><span class="crayon-sy">$</span><span class="crayon-h"> </span><span class="crayon-e">python </span><span class="crayon-v">yolo_video</span><span class="crayon-e">.py</span><span class="crayon-h"> </span><span class="crayon-o">--</span><span class="crayon-e">input </span><span class="crayon-v">videos</span><span class="crayon-o">/</span><span class="crayon-v">car_chase_03</span><span class="crayon-e">.mp4</span><span class="crayon-h"> </span><span class="crayon-sy">\</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888f3103612886-2"><span class="crayon-h">	</span><span class="crayon-o">--</span><span class="crayon-e">output </span><span class="crayon-v">output</span><span class="crayon-o">/</span><span class="crayon-v">car_chase_03</span><span class="crayon-e">.avi</span><span class="crayon-h"> </span><span class="crayon-o">--</span><span class="crayon-e">yolo </span><span class="crayon-v">yolo</span><span class="crayon-o">-</span><span class="crayon-i">coco</span></div><div class="crayon-line" id="crayon-5c93e5d0888f3103612886-3"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-e">loading </span><span class="crayon-e">YOLO </span><span class="crayon-e">from </span><span class="crayon-v">disk</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888f3103612886-4"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-cn">749</span><span class="crayon-h"> </span><span class="crayon-e">total </span><span class="crayon-e">frames </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-i">video</span></div><div class="crayon-line" id="crayon-5c93e5d0888f3103612886-5"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-e">single </span><span class="crayon-e">frame </span><span class="crayon-i">took</span><span class="crayon-h"> </span><span class="crayon-cn">0.3442</span><span class="crayon-h"> </span><span class="crayon-i">seconds</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888f3103612886-6"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-e">estimated </span><span class="crayon-e">total </span><span class="crayon-r">time</span><span class="crayon-h"> </span><span class="crayon-st">to</span><span class="crayon-h"> </span><span class="crayon-v">finish</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-cn">257.8418</span></div><div class="crayon-line" id="crayon-5c93e5d0888f3103612886-7"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-e">cleaning </span><span class="crayon-v">up</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0020 seconds] -->
<p></p><div style="max-width: 610px" class="wp-caption aligncenter"><img class="size-full" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/yolo_car_chase_03_output.gif" width="600"><p class="wp-caption-text"><strong>Figure 8:</strong> YOLO is a fast deep learning object detector capable of being used in real time video provided a GPU is utilized.</p></div><p></p>
<p><em><strong>Note:</strong> This video was simply too large for me to include in the <strong>“Downloads”</strong>. You may <a href="https://www.youtube.com/watch?v=7K3dZmrcriU" target="_blank" rel="noopener">download the video from YouTube here</a>.</em></p>
<p>As a final example, let’s see how we may use YOLO as a starting point to building a traffic counter:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93e5d0888f8114787913" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">YOLO Object Detection with OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Shell</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft">$ python yolo_video.py --input videos/overpass.mp4 \
	--output output/overpass.avi --yolo yolo-coco
[INFO] loading YOLO from disk...
[INFO] 812 total frames in video
[INFO] single frame took 0.3534 seconds
[INFO] estimated total time to finish: 286.9583
[INFO] cleaning up...</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93e5d0888f8114787913-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888f8114787913-2">2</div><div class="crayon-num" data-line="crayon-5c93e5d0888f8114787913-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888f8114787913-4">4</div><div class="crayon-num" data-line="crayon-5c93e5d0888f8114787913-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93e5d0888f8114787913-6">6</div><div class="crayon-num" data-line="crayon-5c93e5d0888f8114787913-7">7</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93e5d0888f8114787913-1"><span class="crayon-sy">$</span><span class="crayon-h"> </span><span class="crayon-e">python </span><span class="crayon-v">yolo_video</span><span class="crayon-e">.py</span><span class="crayon-h"> </span><span class="crayon-o">--</span><span class="crayon-e">input </span><span class="crayon-v">videos</span><span class="crayon-o">/</span><span class="crayon-v">overpass</span><span class="crayon-e">.mp4</span><span class="crayon-h"> </span><span class="crayon-sy">\</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888f8114787913-2"><span class="crayon-h">	</span><span class="crayon-o">--</span><span class="crayon-e">output </span><span class="crayon-v">output</span><span class="crayon-o">/</span><span class="crayon-v">overpass</span><span class="crayon-e">.avi</span><span class="crayon-h"> </span><span class="crayon-o">--</span><span class="crayon-e">yolo </span><span class="crayon-v">yolo</span><span class="crayon-o">-</span><span class="crayon-i">coco</span></div><div class="crayon-line" id="crayon-5c93e5d0888f8114787913-3"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-e">loading </span><span class="crayon-e">YOLO </span><span class="crayon-e">from </span><span class="crayon-v">disk</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888f8114787913-4"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-cn">812</span><span class="crayon-h"> </span><span class="crayon-e">total </span><span class="crayon-e">frames </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-i">video</span></div><div class="crayon-line" id="crayon-5c93e5d0888f8114787913-5"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-e">single </span><span class="crayon-e">frame </span><span class="crayon-i">took</span><span class="crayon-h"> </span><span class="crayon-cn">0.3534</span><span class="crayon-h"> </span><span class="crayon-i">seconds</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93e5d0888f8114787913-6"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-e">estimated </span><span class="crayon-e">total </span><span class="crayon-r">time</span><span class="crayon-h"> </span><span class="crayon-st">to</span><span class="crayon-h"> </span><span class="crayon-v">finish</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-cn">286.9583</span></div><div class="crayon-line" id="crayon-5c93e5d0888f8114787913-7"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-e">cleaning </span><span class="crayon-v">up</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0019 seconds] -->
<p></p><div style="max-width: 610px" class="wp-caption aligncenter"><img class="size-full" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/yolo_overpass_output.gif" width="600"><p class="wp-caption-text"><strong>Figure 9:</strong> A video of traffic going under an overpass demonstrates that YOLO and OpenCV can be used to detect cars accurately and quickly.</p></div><p></p>
<p>I’ve put together a full video of YOLO object detection examples below:</p>
<p><iframe src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/eeIEH2wjvhg_002.htm" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" width="500" height="281" frameborder="0"></iframe></p>
<p>Credits for video and audio:</p>
<ul>
<li>Car chase video posted on <a href="https://www.youtube.com/watch?v=7K3dZmrcriU" target="_blank" rel="noopener">YouTube by Quaker Oats</a>.</li>
<li>Overpass video on <a href="https://www.youtube.com/watch?v=nt3D26lrkho" target="_blank" rel="noopener">YouTube by Vlad Kiraly</a>.</li>
<li>“White Crow” on the&nbsp;<a href="http://freemusicarchive.org/music/XTaKeRuX/Empty_Grave/%20White_Crow" target="_blank" rel="noopener">FreeMusicArchive&nbsp;by XTaKeRuX</a>.</li>
</ul>
<h3>Limitations and drawbacks of the YOLO object detector</h3>
<p><strong>Arguably the largest limitation and drawback of the YOLO object detector is that:</strong></p>
<ol>
<li>It does not always handle small objects well</li>
<li>It <em>especially</em> does not handle objects grouped close together</li>
</ol>
<p>The reason for this limitation is due to the YOLO algorithm itself:</p>
<ul>
<li>The YOLO object detector divides an input image into an <em>SxS</em> grid where each cell in the grid predicts only a single object.</li>
<li>If there exist multiple, small objects in a single cell then YOLO 
will be unable to detect them, ultimately leading to missed object 
detections.</li>
</ul>
<p><strong>Therefore, if you know your dataset consists of many small 
objects grouped close together then you should not use the YOLO object 
detector.</strong></p>
<p>In terms of small objects, Faster R-CNN tends to work the best; however, it’s also the slowest.</p>
<p>SSDs can also be used here; however, SSDs can also struggle with smaller objects (but not as much as YOLO).</p>
<p>SSDs often give a nice tradeoff in terms of speed and accuracy as well.</p>
<p><strong>It’s also worth noting that YOLO ran slower than SSDs in this tutorial.</strong> In my previous tutorial on <a href="https://www.pyimagesearch.com/2017/09/11/object-detection-with-deep-learning-and-opencv/" target="_blank" rel="noopener">OpenCV object detection</a> we utilized an SSD — a single forward pass of the SSD took ~0.03 seconds.</p>
<p>However, from this tutorial, we know that a forward pass of the YOLO object detector took ~0.3 seconds, <em>approximately an order of magnitude slower!</em></p>
<p><strong>If you’re using the pre-trained deep learning object detectors OpenCV supplies you may want to consider using SSDs over YOLO.</strong> From my personal experience, I’ve rarely encountered situations where I needed to use YOLO over SSDs:</p>
<ul>
<li>I have found SSDs much easier to train and their performance in 
terms of accuracy almost always outperforms YOLO (at least for the 
datasets I’ve worked with).</li>
<li>YOLO may have excellent results on the COCO dataset; however, I have not found that same level of accuracy for my own tasks.</li>
</ul>
<p>I, therefore, tend to use the following guidelines when picking an object detector for a given problem:</p>
<ol>
<li>If I know I need to detect small objects and speed is not a concern, I tend to use Faster R-CNN.</li>
<li>If speed is absolutely paramount, I use YOLO.</li>
<li>If I need a middle ground, I tend to go with SSDs.</li>
</ol>
<p>In most of my situations I end up using SSDs or RetinaNet — both are a great balance between the YOLO/Faster R-CNN.</p>
<h3>Want to train your own deep learning object detectors?</h3>
<div id="attachment_8996" style="max-width: 610px" class="wp-caption aligncenter"><a href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/" target="_blank" rel="noopener"><img class="wp-image-8996 size-full" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/yolo_dl4cv.jpg" alt="" srcset="https://www.pyimagesearch.com/wp-content/uploads/2018/11/yolo_dl4cv.jpg 600w, https://www.pyimagesearch.com/wp-content/uploads/2018/11/yolo_dl4cv-300x200.jpg 300w" sizes="(max-width: 600px) 100vw, 600px" width="600" height="400"></a><p class="wp-caption-text"><strong>Figure 10:</strong> In my book, <a href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/" target="_blank" rel="noopener"><em>Deep Learning for Computer Vision with Python</em></a>,
 I cover multiple object detection algorithms including Faster R-CNN, 
SSDs, and RetinaNet. Inside I will teach you how to create your object 
detection image dataset, train the object detector, and make 
predictions. Not to mention I also cover deep learning fundamentals, 
best practices, and my personal set of rules of thumb. <a href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/" target="_blank" rel="noopener">Grab your copy now so you can start learning new skills.</a></p></div>
<p>The YOLO model we used in this tutorial was <em>pre-trained</em> on the COCO dataset…</p>
<p><strong>…but what if you wanted to train a deep learning object detector <em>on your own dataset?</em></strong></p>
<p>Inside my book, <a href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/" target="_blank" rel="noopener"><em>Deep Learning for Computer Vision with Python</em></a>, I’ll teach you how to train <strong>Faster R-CNNs, Single Shot Detectors (SSDs), and RetinaNet to:</strong></p>
<ul>
<li>Detect <strong>logos</strong> in images</li>
<li>Detect <strong>traffic signs</strong> (ex. stop sign, yield sign, etc.)</li>
<li>Detect the front and rear views of <strong>vehicles</strong> (useful for building a self-driving car application)</li>
<li>Detect <strong>weapons</strong> in images and video streams</li>
</ul>
<p>All object detection chapters in the book include a detailed explanation of <em>both</em> the algorithm and code, <strong>ensuring you will be able to successfully train your own object detectors.</strong></p>
<p style="text-align: center;"><strong><a href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/" target="_blank" rel="noopener">To learn more about my book (and grab your <em>free</em> set of sample chapters and table of contents), <em>just click here.</em></a></strong></p>
<h2>Summary</h2>
<p>In this tutorial we learned how to perform YOLO object detection using Deep Learning, OpenCV, and Python.</p>
<p>We then briefly discussed the YOLO architecture followed by implementing Python code to:</p>
<ol>
<li>Apply YOLO object detection to single images</li>
<li>Apply the YOLO object detector to video streams</li>
</ol>
<p>On my machine with a 3GHz Intel Xeon W processor, a single forward pass of YOLO took ~0.3 seconds; however, <a href="https://www.pyimagesearch.com/2017/09/11/object-detection-with-deep-learning-and-opencv/" target="_blank" rel="noopener">using a Single Shot Detector (SSD) from a previous tutorial</a>, resulted in only 0.03 second detection, <em>an order of magnitude faster!</em></p>
<p>For real-time deep learning-based object detection on your CPU with OpenCV and Python, you may want to consider using the SSD.</p>
<p>If you are interested in training your own deep learning object 
detectors on your own custom datasets, be sure to refer to my book, <a href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/" target="_blank" rel="noopener"><em>Deep Learning for Computer Vision with Python</em></a>, where I provide detailed guides on how to successfully train your own detectors.</p>
<p>I hope you enjoyed today’s YOLO object detection tutorial!</p>
<p><strong>To download the source code to today’s post, and be notified when future PyImageSearch blog posts are published, <em>just enter your email address in the form below</em>.</strong></p>
<h2 id="post_downloads">Downloads:</h2>
<div id="mc4wp-form-1" class="form mc4wp-form mc4wp-form-761"><form action="https://www.getdrip.com/forms/334349446/submissions" method="post" target="blank" data-drip-embedded-form="334349446" data-drip-id="334349446"><img style="padding-right: 10px; width: 115px; border: none; float: left;" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/download-code-icon.png" alt="">If
 you would like to download the code and images used in this post, 
please enter your email address in the form below. Not only will you get
 a .zip of the code, I’ll also send you a <strong>FREE 17-page Resource Guide on Computer Vision, OpenCV, and Deep Learning.</strong>
 Inside you'll find my hand-picked tutorials, books, courses, and 
libraries to help you master CV and DL! Sound good? If so, enter your 
email address and I’ll send you the code immediately!
<p style="margin-left: 130px; margin-top: 10px;"><label for="fields[email]">Email address:</label><input name="fields[email]" type="email" placeholder="Your email address"></p>
<p style="margin-left: 130px;"><input type="submit" value="Download the code!"></p>
<input type="hidden" name="time_zone" value="Europe/Berlin"><input type="hidden" name="url" value="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/"><input type="hidden" name="page_title" value="YOLO object detection with OpenCV - PyImageSearch"></form></div>
	</section><!-- /.entry -->
	<div class="fix"></div>
		<aside id="connect">
		<h3>Resource Guide (it’s totally free).</h3>

		<div>
			<p><img title="Get your FREE 17-page Computer Vision and Deep Learning Resource Guide PDF" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/computer_vision_deep_learning_resource_guide_cover.png" style="padding-right: 10px;width: 230px;float: left">
</p><div style="padding-top: 35px">
Enter your email address below to get my <strong>free 17-page Computer Vision, OpenCV, and Deep Learning Resource Guide PDF</strong>.
 Inside you'll find my hand-picked tutorials, books, courses, and Python
 libraries to help you master computer vision and deep learning!</div><p></p>

			
						<form action="https://www.getdrip.com/forms/657075648/submissions" method="post" target="_blank" data-drip-embedded-form="657075648" data-drip-id="657075648">
				<div>
					<input type="email" name="fields[email]" class="required email" placeholder="Your email address" style="width: 50%;">
				</div>
				<div>
					<input id="mc-embedded-subscribe" type="submit" name="submit" class="btn submit button" value="Download the Guide!" data-drip-attribute="sign-up-button">
				</div>
			<input type="hidden" name="time_zone" value="Europe/Berlin"><input type="hidden" name="url" value="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/"><input type="hidden" name="page_title" value="YOLO object detection with OpenCV - PyImageSearch"></form>
			
						<div class="social">
		   					</div>
			
		</div><!-- col-left -->

		
        <div class="fix"></div>
	</aside>
	<div class="post-utility"><p class="tags"><i class="icon-tag"></i> <a href="https://www.pyimagesearch.com/tag/cnn/" rel="tag">cnn</a>, <a href="https://www.pyimagesearch.com/tag/convolutional-neural-network/" rel="tag">convolutional neural network</a>, <a href="https://www.pyimagesearch.com/tag/machine-learning/" rel="tag">machine learning</a>, <a href="https://www.pyimagesearch.com/tag/object-detection/" rel="tag">object detection</a>, <a href="https://www.pyimagesearch.com/tag/yolo/" rel="tag">yolo</a></p> </div>
</article><!-- /.post -->
	        <div class="post-entries">
	            <div class="nav-prev fl"><a href="https://www.pyimagesearch.com/2018/11/05/creating-gifs-with-opencv/" rel="prev"><i class="icon-angle-left"></i> Creating GIFs with OpenCV</a></div>
	            <div class="nav-next fr"><a href="https://www.pyimagesearch.com/2018/11/19/mask-r-cnn-with-opencv/" rel="next">Mask R-CNN with OpenCV <i class="icon-angle-right"></i></a></div>
	            <div class="fix"></div>
	        </div>

		<div id="comments">		 	<h3 id="comments-title">200 Responses to <em>YOLO object detection with OpenCV</em></h3>
		 	<ol class="commentlist">
					                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-486741"></a>
	      	
	      	<div id="li-comment-486741" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/6689a119b178aaf896631cce3eb6dfa9.jpg" srcset="https://secure.gravatar.com/avatar/6689a119b178aaf896631cce3eb6dfa9?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Naser</span>           
	                <span class="date">November 12, 2018 at 11:25 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486741" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486741">
				
				<p>Great tutarial<br>
Thanks adrian.<br>
Can you make a tutarial and explain in that how can train yolo on our custom dataset??<br>
Thank you.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486741" onclick='return addComment.moveForm( "comment-486741", "486741", "respond", "8981" )' aria-label="Reply to Naser">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2 parent">
	    
	    	<a name="comment-486747"></a>
	      	
	      	<div id="li-comment-486747" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 12, 2018 at 12:10 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486747" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486747">
				
				<p>I actually cover how to train your own custom object detectors inside <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python</a>. I would suggest starting there.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486747" onclick='return addComment.moveForm( "comment-486747", "486747", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-3 parent">
	    
	    	<a name="comment-486811"></a>
	      	
	      	<div id="li-comment-486811" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/4e634b6fabdfe371f91b7f3f0e8257eb.jpg" srcset="https://secure.gravatar.com/avatar/4e634b6fabdfe371f91b7f3f0e8257eb?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Gary</span>           
	                <span class="date">November 12, 2018 at 6:40 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486811" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486811">
				
				<p>Hi Adrian,</p>
<p>did you show in your book training custom objects with different 
frameworks like Yolo,YoloV3,Tensorflow,Mxnet and Caffe with faster-RNN 
vs. SSD?</p>
<p>If not, that would be great to see which framework has the best 
object multi detector for small and close objects. Hope you will think 
about this. </p>
<p>Thanks a lot for all your great tutorials.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486811" onclick='return addComment.moveForm( "comment-486811", "486811", "respond", "8981" )' aria-label="Reply to Gary">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-4 parent">
	    
	    	<a name="comment-486967"></a>
	      	
	      	<div id="li-comment-486967" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 13, 2018 at 4:26 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486967" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486967">
				
				<p>Inside the book I focus on Faster R-CNN, SSDs, and RetinaNet. Per
 my suggestions in this blog post I don’t tend to use YOLO that often.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486967" onclick='return addComment.moveForm( "comment-486967", "486967", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-5">
	    
	    	<a name="comment-487142"></a>
	      	
	      	<div id="li-comment-487142" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/c2fe7247acbccf7da9d40b92fc94b922.jpg" srcset="https://secure.gravatar.com/avatar/c2fe7247acbccf7da9d40b92fc94b922?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">yan</span>           
	                <span class="date">November 14, 2018 at 12:14 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-487142" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-487142">
				
				<p>When I was using Raspberry 3B +, I encountered the error of 
Attribute Error:’ NoneType’ Object Has No Attribute’ Shape’, but I don’t
 know how to fix it. I hope I can get your guidance</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-5">
	    
	    	<a name="comment-487292"></a>
	      	
	      	<div id="li-comment-487292" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 15, 2018 at 12:00 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-487292" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-487292">
				
				<p>Your path to the input image is invalid and <code>cv2.imread</code> is returning “None”. Double-check the path to your input image. Also <a target="blank" href="https://www.pyimagesearch.com/2016/12/26/opencv-resolving-nonetype-errors/">read this tutorial on NoneType errors.</a></p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even depth-3 parent">
	    
	    	<a name="comment-489735"></a>
	      	
	      	<div id="li-comment-489735" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/cf10c606d43c9dbe6ce92610ed6be3da.jpg" srcset="https://secure.gravatar.com/avatar/cf10c606d43c9dbe6ce92610ed6be3da?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Yonten</span>           
	                <span class="date">November 29, 2018 at 3:31 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-489735" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-489735">
				
				<p>I have trained my dataset on darknet and I am using your code to 
detect my trained images but I cannot see the bounding box. When I run 
in darknet, I can cleary see the output with the bounding box. Can you 
tell me which code I should edit?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-489735" onclick='return addComment.moveForm( "comment-489735", "489735", "respond", "8981" )' aria-label="Reply to Yonten">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-4">
	    
	    	<a name="comment-490000"></a>
	      	
	      	<div id="li-comment-490000" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 30, 2018 at 9:00 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-490000" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-490000">
				
				<p>I would raise that question with the <a target="blank" href="https://github.com/opencv/opencv/issues/" rel="nofollow">OpenCV developers.</a> Your architecture may be different or some additional model conversion may need to take place.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-490000" onclick='return addComment.moveForm( "comment-490000", "490000", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-486743"></a>
	      	
	      	<div id="li-comment-486743" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/0ab93e227cabf8945357f2e4da33a40b.jpg" srcset="https://secure.gravatar.com/avatar/0ab93e227cabf8945357f2e4da33a40b?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">aiwen</span>           
	                <span class="date">November 12, 2018 at 11:42 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486743" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486743">
				
				<p>so good!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486743" onclick='return addComment.moveForm( "comment-486743", "486743", "respond", "8981" )' aria-label="Reply to aiwen">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-486746"></a>
	      	
	      	<div id="li-comment-486746" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 12, 2018 at 12:09 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486746" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486746">
				
				<p>Thanks Aiwen, I’m glad you liked it!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486746" onclick='return addComment.moveForm( "comment-486746", "486746", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-486744"></a>
	      	
	      	<div id="li-comment-486744" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/6df123df8b0ac23a9df3a5d8671f8c4e.jpg" srcset="https://secure.gravatar.com/avatar/6df123df8b0ac23a9df3a5d8671f8c4e?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">ShivaGuntuku</span>           
	                <span class="date">November 12, 2018 at 11:54 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486744" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486744">
				
				<p>Hi Adrian, thank you for the tutorial,</p>
<p>Although I am getting this error in ubuntu18 , python3.6 and cv2 version ‘3.4.0’</p>
<p>…<br>
error: (-212) Unknown layer type: shortcut in function ReadDarknetFromCfgFile,</p>
<p>Please help me out.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486744" onclick='return addComment.moveForm( "comment-486744", "486744", "respond", "8981" )' aria-label="Reply to ShivaGuntuku">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2 parent">
	    
	    	<a name="comment-486749"></a>
	      	
	      	<div id="li-comment-486749" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 12, 2018 at 12:12 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486749" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486749">
				
				<p>You need at least OpenCV 3.4.2 for this tutorial. OpenCV 4 would work as well.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486749" onclick='return addComment.moveForm( "comment-486749", "486749", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-3 parent">
	    
	    	<a name="comment-486765"></a>
	      	
	      	<div id="li-comment-486765" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/6df123df8b0ac23a9df3a5d8671f8c4e.jpg" srcset="https://secure.gravatar.com/avatar/6df123df8b0ac23a9df3a5d8671f8c4e?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">ShivaGuntuku</span>           
	                <span class="date">November 12, 2018 at 1:43 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486765" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486765">
				
				<p>Thanks Adrian, it worked. Nice</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486765" onclick='return addComment.moveForm( "comment-486765", "486765", "respond", "8981" )' aria-label="Reply to ShivaGuntuku">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-4 parent">
	    
	    	<a name="comment-486982"></a>
	      	
	      	<div id="li-comment-486982" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 13, 2018 at 4:35 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486982" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486982">
				
				<p>Awesome, I’m glad that worked.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486982" onclick='return addComment.moveForm( "comment-486982", "486982", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-5">
	    
	    	<a name="comment-487094"></a>
	      	
	      	<div id="li-comment-487094" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/a8b8f959840ecb983d3264223777520b.jpg" srcset="https://secure.gravatar.com/avatar/a8b8f959840ecb983d3264223777520b?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Richard Wiseman</span>           
	                <span class="date">November 14, 2018 at 5:04 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-487094" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-487094">
				
				<p>Might be worth updating the article to say 3.4.2 rather than 3.4 as it currently does.  This caught me out too.</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-5">
	    
	    	<a name="comment-487302"></a>
	      	
	      	<div id="li-comment-487302" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 15, 2018 at 12:06 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-487302" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-487302">
				
				<p>Thanks for catching that Richard. I’ve updated the post 😉</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even depth-3 parent">
	    
	    	<a name="comment-487023"></a>
	      	
	      	<div id="li-comment-487023" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/c6b9cc47ac64d49b74bb66f12e0d8c58.png" srcset="https://secure.gravatar.com/avatar/c6b9cc47ac64d49b74bb66f12e0d8c58?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">John Kang</span>           
	                <span class="date">November 13, 2018 at 6:15 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-487023" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-487023">
				
				<p>I got same error on Windows.  I have OpenCV-Python 3.4.0 installed.  How to install opencv-python 3.4.2 on windows?</p>
<p>thanks in advance</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-487023" onclick='return addComment.moveForm( "comment-487023", "487023", "respond", "8981" )' aria-label="Reply to John Kang">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-4">
	    
	    	<a name="comment-487316"></a>
	      	
	      	<div id="li-comment-487316" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 15, 2018 at 12:16 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-487316" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-487316">
				
				<p>I’m sorry to hear about the error message. You would indeed need 
to install OpenCV 3.4.2 or higher. That said, I do not officially 
support Windows here on the PyImageSearch blog (I haven’t even used a 
Windows machine in 11+ years now). When it comes to computer vision and 
deep learning I <em>highly recommend</em> you use a Unix-based machine such as Ubuntu or macOS. I have a <a target="blank" href="https://www.pyimagesearch.com/opencv-tutorials-resources-guides/">number of OpenCV install tutorials</a> for those operating systems. If you need help with Windows I would need to refer you to the <a target="blank" href="https://opencv.org/" rel="nofollow">official OpenCV website.</a></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-487316" onclick='return addComment.moveForm( "comment-487316", "487316", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment even depth-4">
	    
	    	<a name="comment-494389"></a>
	      	
	      	<div id="li-comment-494389" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/1c316251e2d5cdbe46cb527d71d73566.jpg" srcset="https://secure.gravatar.com/avatar/1c316251e2d5cdbe46cb527d71d73566?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Ulrich</span>           
	                <span class="date">January 1, 2019 at 11:23 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-494389" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-494389">
				
				<p>Hello John,</p>
<p>I use python 2.7 and opencv 2.4.11 on a windows10 System. I updated 
my opencv by using “pip install opencv-contrib-python” and opencv 3.4.5 
was installed in a view minutes.</p>
<p>The code is running well!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-494389" onclick='return addComment.moveForm( "comment-494389", "494389", "respond", "8981" )' aria-label="Reply to Ulrich">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-486745"></a>
	      	
	      	<div id="li-comment-486745" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/24eb4d5dc9f5368c266ff133bfa7a05e.jpg" srcset="https://secure.gravatar.com/avatar/24eb4d5dc9f5368c266ff133bfa7a05e?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Sourav</span>           
	                <span class="date">November 12, 2018 at 12:02 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486745" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486745">
				
				<p>can it be implemented on a pi 3B?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486745" onclick='return addComment.moveForm( "comment-486745", "486745", "respond", "8981" )' aria-label="Reply to Sourav">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2 parent">
	    
	    	<a name="comment-486748"></a>
	      	
	      	<div id="li-comment-486748" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 12, 2018 at 12:10 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486748" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486748">
				
				<p>Yes, but it would be extremely slow, under 1 FPS (at least for 
the OpenCV + YOLO version). The Movidius NCS does have a YOLO model that
 supposedly works but I have never tried it — that would likely get you 
to a FPS.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486748" onclick='return addComment.moveForm( "comment-486748", "486748", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-3 parent">
	    
	    	<a name="comment-486804"></a>
	      	
	      	<div id="li-comment-486804" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/a54ec0834fe7830d63ad2ebefc320ece.jpg" srcset="https://secure.gravatar.com/avatar/a54ec0834fe7830d63ad2ebefc320ece?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">wally kulecz</span>           
	                <span class="date">November 12, 2018 at 5:34 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486804" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486804">
				
				<p>If you are talking about this TinyYolo model for the Movidius from the appzoo:</p>
<p><a href="https://github.com/movidius/ncappzoo/tree/master/caffe/TinyYolo" rel="nofollow">https://github.com/movidius/ncappzoo/tree/master/caffe/TinyYolo</a></p>
<p>Its not the same model used in this tutorial.  </p>
<p>I’ve played with it and it was really poor at detecting people and 
really good at finding people in shadows (false positives) so it was 
useless for my purposes.</p>
<p>The YOLOv3 model used here has performed admirably on the test images
 where the TinyYolo model from the NCS appzoo (linked above) failed 
miserably.</p>
<p>If there is a Movidius version of this YOLOv3 model, point me to it and I’ll give it a try and report back.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486804" onclick='return addComment.moveForm( "comment-486804", "486804", "respond", "8981" )' aria-label="Reply to wally kulecz">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-4 parent">
	    
	    	<a name="comment-486968"></a>
	      	
	      	<div id="li-comment-486968" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 13, 2018 at 4:26 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486968" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486968">
				
				<p>That was the one I was thinking of, thanks Wally. I’m not aware of a YOLOv3 model for the Movidius though.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486968" onclick='return addComment.moveForm( "comment-486968", "486968", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-5">
	    
	    	<a name="comment-487165"></a>
	      	
	      	<div id="li-comment-487165" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/a54ec0834fe7830d63ad2ebefc320ece.jpg" srcset="https://secure.gravatar.com/avatar/a54ec0834fe7830d63ad2ebefc320ece?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">wally kulecz</span>           
	                <span class="date">November 14, 2018 at 4:51 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-487165" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-487165">
				
				<p>Looks like a Movidius NCS2 using the Myriad X is available, the splash pages suggests “up to 8X faster” than the Movidius:<br>
<a href="https://software.intel.com/en-us/neural-compute-stick" rel="nofollow">https://software.intel.com/en-us/neural-compute-stick</a></p>
<p>They are available, I just ordered one from Mouser for $99 + tax and shipping.  </p>
<p>No mention of Raspberry Pi support, for now.  It looks like the the 
OpenVINO toolkit will be required to use it.  They are supporting 
Windows 10 for this one.  Its a free download:<br>
<a href="https://software.intel.com/en-us/openvino-toolkit/choose-download/free-download-linux" rel="nofollow">https://software.intel.com/en-us/openvino-toolkit/choose-download/free-download-linux</a></p>
<p>The Pi is where this improved device could really help, but it looks 
like it needs USB3 and a specific driver which may explain the lack of 
Pi support.</p>
<p>I’m expecting a challenge to get the tool kit install.</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-5">
	    
	    	<a name="comment-487285"></a>
	      	
	      	<div id="li-comment-487285" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 15, 2018 at 11:56 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-487285" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-487285">
				
				<p>Intel sent me a NCS2 but I must admit that I never unboxed it 🙁 
I’ve been too busy releasing the 2nd edition of DL4CV. I’ll have to 
carve out some time and play with it as well 🙂 Thanks for the 
motivation, Wally.</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment odd alt depth-5">
	    
	    	<a name="comment-487929"></a>
	      	
	      	<div id="li-comment-487929" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/a54ec0834fe7830d63ad2ebefc320ece.jpg" srcset="https://secure.gravatar.com/avatar/a54ec0834fe7830d63ad2ebefc320ece?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">wally kulecz</span>           
	                <span class="date">November 19, 2018 at 8:30 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-487929" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-487929">
				
				<p>Perhaps a bit more motivation.  </p>
<p>I installed the openVINO SDK on that old i3  system that I mentioned 
in another reply (failed with library version errors on Ubuntu 18.04 , 
so I installed 16.04 to the free space on the drive and dual boot).</p>
<p>Running their C++ interactive_facedetection_demo sample code with a USB WebCam I get these results:</p>
<p>NCS    facedetection: ~16 fps   face analysis: ~3 fps<br>
NCS2                         ~42 fps                          ~10 fps<br>
CPU                           ~17 fps                          ~5.4 fps<br>
Note that the CPU needed an FP32 model where the NCS used fp16.   As 
with my MobleNet-SSD Python code, the CPU on the i3 is about the same as
 the Movidius NCS, but the NCS2 shows very worthwhile improvement.</p>
<p>The SDK auto-detects NCS vs NCS2 so it was just a matter of 
unplugging the NCS and plugging int the NCS2 to get these numbers from 
the live openCV overlay.</p>
<p>The SDK compiles openCV v4.0.0-pre.  It appears to support Python Virtual Environment, although I didn’t use one.</p>
<p>The GPU support seems not to work on this old i3-i915 motherboard.</p>
<p>There is a C++ example for YOLOv3 object detection in the installed sample code.   </p>
<p>But my first task will be to see if I can re-write my Python code to 
use the openVINO Python support as from my limited test it looks like 
one NCS2 might be able to exceed the fps I get with three NCS sticks.</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even depth-3 parent">
	    
	    	<a name="comment-487931"></a>
	      	
	      	<div id="li-comment-487931" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/2df0486d78dc6c803c2b5687d2fca313.jpg" srcset="https://secure.gravatar.com/avatar/2df0486d78dc6c803c2b5687d2fca313?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Devin</span>           
	                <span class="date">November 19, 2018 at 8:52 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-487931" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-487931">
				
				<p>Hi, Doctor Adrian,  very glad to read ur blog. i have a project 
that should recognize and detect object in the video based on Raspberry 
Pi 3B+ ,  my boss wanna i use deep learning method, such as resnet, ssd,
 yolov3, etc… but, in your blog, i know it’s difficult to achieve real 
time…what should i do? could u please give me some advice?<br>
thanks!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-487931" onclick='return addComment.moveForm( "comment-487931", "487931", "respond", "8981" )' aria-label="Reply to Devin">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-4">
	    
	    	<a name="comment-488054"></a>
	      	
	      	<div id="li-comment-488054" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 20, 2018 at 9:14 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-488054" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-488054">
				
				<p>Hey Devin — I cover how to train your own custom object detectors (Faster R-CNN, SSDs, RetinaNet, etc.) inside my book, <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python.</a>
 I also discuss and demonstrate how to obtain real-time performance and 
which model is suitable for various tasks. I would suggest you start 
there.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-488054" onclick='return addComment.moveForm( "comment-488054", "488054", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even depth-2">
	    
	    	<a name="comment-486806"></a>
	      	
	      	<div id="li-comment-486806" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/a54ec0834fe7830d63ad2ebefc320ece.jpg" srcset="https://secure.gravatar.com/avatar/a54ec0834fe7830d63ad2ebefc320ece?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">wally kulecz</span>           
	                <span class="date">November 12, 2018 at 5:49 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486806" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486806">
				
				<p>The downloaded tutorial code runs fine on my Pi3B+ with python3 
and openCV 3.4.2, but it takes 14 seconds to process an image.  Can’t 
imagine how this could be of any use beyond a demo.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486806" onclick='return addComment.moveForm( "comment-486806", "486806", "respond", "8981" )' aria-label="Reply to wally kulecz">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-486754"></a>
	      	
	      	<div id="li-comment-486754" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/045c6ba746ec62c3b2f061bf1aea1134.jpg" srcset="https://secure.gravatar.com/avatar/045c6ba746ec62c3b2f061bf1aea1134?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">sset</span>           
	                <span class="date">November 12, 2018 at 12:44 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486754" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486754">
				
				<p>Thanks for great article.</p>
<p>How do we custom train for customized dataset?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486754" onclick='return addComment.moveForm( "comment-486754", "486754", "respond", "8981" )' aria-label="Reply to sset">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-486987"></a>
	      	
	      	<div id="li-comment-486987" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 13, 2018 at 4:37 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486987" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486987">
				
				<p>I provide code and discuss how to train your own custom object detectors on your own datasets inside my book, <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python.</a></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486987" onclick='return addComment.moveForm( "comment-486987", "486987", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-486759"></a>
	      	
	      	<div id="li-comment-486759" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/e5385143fab72c1b89f42a5c4afc4305.jpg" srcset="https://secure.gravatar.com/avatar/e5385143fab72c1b89f42a5c4afc4305?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Alex</span>           
	                <span class="date">November 12, 2018 at 1:05 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486759" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486759">
				
				<p>Hello Adrian, which GPU  did you use to achieve this performance?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486759" onclick='return addComment.moveForm( "comment-486759", "486759", "respond", "8981" )' aria-label="Reply to Alex">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-486986"></a>
	      	
	      	<div id="li-comment-486986" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 13, 2018 at 4:37 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486986" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486986">
				
				<p>I did not use a GPU, it was CPU only. OpenCV’s “dnn” module does not yet support many GPUs.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486986" onclick='return addComment.moveForm( "comment-486986", "486986", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-486764"></a>
	      	
	      	<div id="li-comment-486764" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/dc5542c2ca46e2bc5f11d59b3f5d21ee.jpg" srcset="https://secure.gravatar.com/avatar/dc5542c2ca46e2bc5f11d59b3f5d21ee?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Cenk Camkoy</span>           
	                <span class="date">November 12, 2018 at 1:41 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486764" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486764">
				
				<p>This is really very cool. Thanks for sharing all these together 
with your valuable benchmarks. By the way, out of my curiosity, do you 
know what type of object detector is used in Google’s autonomous cars? 
SSD or other?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486764" onclick='return addComment.moveForm( "comment-486764", "486764", "respond", "8981" )' aria-label="Reply to Cenk Camkoy">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-486983"></a>
	      	
	      	<div id="li-comment-486983" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 13, 2018 at 4:36 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486983" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486983">
				
				<p>Hm, no, I don’t know what Google is using in their autonomous 
cars. SSDs are rooted in Google research though so that would likely be 
my guess.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486983" onclick='return addComment.moveForm( "comment-486983", "486983", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-486767"></a>
	      	
	      	<div id="li-comment-486767" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/1fcf966ce7226cb4d7b079652eb8d6ac.jpg" srcset="https://secure.gravatar.com/avatar/1fcf966ce7226cb4d7b079652eb8d6ac?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">JBeale</span>           
	                <span class="date">November 12, 2018 at 1:54 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486767" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486767">
				
				<p>YOLO may not win on real-world metrics, but it is clearly #1 in readability of the associated papers.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486767" onclick='return addComment.moveForm( "comment-486767", "486767", "respond", "8981" )' aria-label="Reply to JBeale">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-486981"></a>
	      	
	      	<div id="li-comment-486981" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 13, 2018 at 4:34 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486981" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486981">
				
				<p>Agreed 🙂</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486981" onclick='return addComment.moveForm( "comment-486981", "486981", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-486775"></a>
	      	
	      	<div id="li-comment-486775" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/10ea20c138580b3ad4bbd4a653b2b433.jpg" srcset="https://secure.gravatar.com/avatar/10ea20c138580b3ad4bbd4a653b2b433?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Max</span>           
	                <span class="date">November 12, 2018 at 2:31 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486775" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486775">
				
				<p>Hi,<br>
It is possible to make it up and running on a GPU?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486775" onclick='return addComment.moveForm( "comment-486775", "486775", "respond", "8981" )' aria-label="Reply to Max">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-486980"></a>
	      	
	      	<div id="li-comment-486980" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 13, 2018 at 4:34 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486980" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486980">
				
				<p>That depends. OpenCV’s “dnn” module currently does not support NVIDIA GPUs. It does work with some Intel GPUs though.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486980" onclick='return addComment.moveForm( "comment-486980", "486980", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-486780"></a>
	      	
	      	<div id="li-comment-486780" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/c36e96337fa02f5ac225fff959280267.jpg" srcset="https://secure.gravatar.com/avatar/c36e96337fa02f5ac225fff959280267?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Bob Estes</span>           
	                <span class="date">November 12, 2018 at 2:55 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486780" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486780">
				
				<p>To be clear, your performance numbers for YOLO and SSD are for a CPU version, not a GPU version, right?  Thanks.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486780" onclick='return addComment.moveForm( "comment-486780", "486780", "respond", "8981" )' aria-label="Reply to Bob Estes">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-486977"></a>
	      	
	      	<div id="li-comment-486977" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 13, 2018 at 4:32 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486977" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486977">
				
				<p>That is correct. YOLO can run 40+ FPS on a GPU. Tiny-YOLO can reportedly get past 100+ FPS.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486977" onclick='return addComment.moveForm( "comment-486977", "486977", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-486784"></a>
	      	
	      	<div id="li-comment-486784" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/e4af381f7bfbbd94f478fe187dcd2520.jpg" srcset="https://secure.gravatar.com/avatar/e4af381f7bfbbd94f478fe187dcd2520?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">julio</span>           
	                <span class="date">November 12, 2018 at 3:21 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486784" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486784">
				
				<p>If you work OpenCV with CUDA support, can you achieve 30FPS in real time? … I mean …<br>
1. YoloV3 + module dnn + CPU is very slow<br>
2. YoloV3 + module dnn + GPU that FPS speed could reach for real-time applications?</p>
<p>How could I use Yolo in real time on a laptop GPU like Asus’ GeForce 930MX?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486784" onclick='return addComment.moveForm( "comment-486784", "486784", "respond", "8981" )' aria-label="Reply to julio">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-486976"></a>
	      	
	      	<div id="li-comment-486976" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 13, 2018 at 4:32 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486976" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486976">
				
				<p>See my replies to the other comments in this post — OpenCV does 
not yet support NVIDIA GPUs for their “dnn” module (hopefully soon 
though). That said, YOLO by itself can achieve 40+ FPS when ran on a 
GPU.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486976" onclick='return addComment.moveForm( "comment-486976", "486976", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-486785"></a>
	      	
	      	<div id="li-comment-486785" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/5303cf85d0c46d951110842e6b8ea54e.jpg" srcset="https://secure.gravatar.com/avatar/5303cf85d0c46d951110842e6b8ea54e?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">kelemu</span>           
	                <span class="date">November 12, 2018 at 3:36 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486785" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486785">
				
				<p>Hi Adrian, I am waits like this tutorials but now I am lucky to 
get from you really tanks a lot.  How to train YOLO with our datasets?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486785" onclick='return addComment.moveForm( "comment-486785", "486785", "respond", "8981" )' aria-label="Reply to kelemu">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-486975"></a>
	      	
	      	<div id="li-comment-486975" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 13, 2018 at 4:31 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486975" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486975">
				
				<p>I don’t have any tutorials for training YOLO from scratch. 
Typically I recommend using SSDs or RetinaNet, both of which (and Faster
 R-CNNs), are covered inside <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python.</a></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486975" onclick='return addComment.moveForm( "comment-486975", "486975", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-486786"></a>
	      	
	      	<div id="li-comment-486786" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/dbfcca7dafc1d999d042968684b45912.jpg" srcset="https://secure.gravatar.com/avatar/dbfcca7dafc1d999d042968684b45912?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Sam</span>           
	                <span class="date">November 12, 2018 at 3:37 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486786" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486786">
				
				<p>Thanks Adrian.. great post. </p>
<p>Can I use it with Movidius NCS with custom dataset?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486786" onclick='return addComment.moveForm( "comment-486786", "486786", "respond", "8981" )' aria-label="Reply to Sam">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-486974"></a>
	      	
	      	<div id="li-comment-486974" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 13, 2018 at 4:30 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486974" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486974">
				
				<p>Take a look at <a target="blank" href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486804">Wally’s comment.</a></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486974" onclick='return addComment.moveForm( "comment-486974", "486974", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-486788"></a>
	      	
	      	<div id="li-comment-486788" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/51237cf1e9ea4ebfbec1471a72370a8f.jpg" srcset="https://secure.gravatar.com/avatar/51237cf1e9ea4ebfbec1471a72370a8f?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Robert</span>           
	                <span class="date">November 12, 2018 at 3:56 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486788" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486788">
				
				<p>Thanks for suggesting to read the Yolo v3 research paper, that’s 
easily the most entertaining and honest research paper I’ve ever read, 
all the way to the last line!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486788" onclick='return addComment.moveForm( "comment-486788", "486788", "respond", "8981" )' aria-label="Reply to Robert">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-486973"></a>
	      	
	      	<div id="li-comment-486973" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 13, 2018 at 4:30 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486973" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486973">
				
				<p>Awesome, I’m glad you enjoyed it Robert!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486973" onclick='return addComment.moveForm( "comment-486973", "486973", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-486793"></a>
	      	
	      	<div id="li-comment-486793" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/99c9a95217eaac982fa20074955334ba.jpg" srcset="https://secure.gravatar.com/avatar/99c9a95217eaac982fa20074955334ba?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Hemant</span>           
	                <span class="date">November 12, 2018 at 4:26 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486793" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486793">
				
				<p>Hey Adrian, nice article and very useful. I tried it on Pi 3 and 
as you stated, it is very slow. I am getting object detection rate of 1 
frame per 16 seconds. Processing of the airport.mp4 took little less 
than 4 hours. Looking forward to your second edition of the book.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486793" onclick='return addComment.moveForm( "comment-486793", "486793", "respond", "8981" )' aria-label="Reply to Hemant">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-486972"></a>
	      	
	      	<div id="li-comment-486972" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 13, 2018 at 4:29 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486972" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486972">
				
				<p>Thank you for checking YOLO performance on the Pi, Hemant!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486972" onclick='return addComment.moveForm( "comment-486972", "486972", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-486800"></a>
	      	
	      	<div id="li-comment-486800" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/a54ec0834fe7830d63ad2ebefc320ece.jpg" srcset="https://secure.gravatar.com/avatar/a54ec0834fe7830d63ad2ebefc320ece?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">wally kulecz</span>           
	                <span class="date">November 12, 2018 at 4:59 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486800" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486800">
				
				<p>Nice timing on this, I just finished installing Ubuntu-Mate 18.04
 on an i3 system.  The installation of the Movidius v.1 SDK pulled in 
openCV 3.4.3 (presumably from PyPi) so I grabbed this sample code and 
gave it a try. </p>
<p>The yolo is taking ~1.47 seconds.  </p>
<p>This is not a powerful machine (1.8 GHz if I remember right), but I’m
 getting about 10 fps with MobilenetSSD (from a previous tutorial)  and 
one NCS stick handling 4 cameras (round-robin sampling) and near linear 
speed up with multiple sticks — 19.5 fps with 2 sticks 29 fps with 3 
sticks.  This is heavily threaded Python code with one main thread and 
one thread for each NCS stick and one thread for each Onvif network 
camera.  A 4th NCS ( 9 threads) may be too much of a good thing as it 
drops to 24.6 fps.  Although I had to have two sticks on a powered hub 
when I added the 4th stick for lack of ports, this may be a bit of a 
bottleneck as re-running the 3 stick test with two of them on hub 
dropped about 2 fps.</p>
<p>I hope one of the AI gurus can compile this yolo model for the NCS, although I realize this may not be possible.</p>
<p>Does your Xeon system use GPU (CUDA) acceleration?  If so how many cuda cores?</p>
<p>My i7 Desktop has a GTX-950 with 2GB ram and 768 cuda cores, so I’m 
wondering if its worth the trouble to try and enable it.  I need to 
update its openCV from 3.3.0 to 3.4.3 before I can run this tutorial, so
 this could be a good time for me to try and activate cuda.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486800" onclick='return addComment.moveForm( "comment-486800", "486800", "respond", "8981" )' aria-label="Reply to wally kulecz">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2 parent">
	    
	    	<a name="comment-486969"></a>
	      	
	      	<div id="li-comment-486969" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 13, 2018 at 4:28 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486969" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486969">
				
				<p>I love your multi-Movidius NCS setup, Wally! I would love to learn more about it and how you are using it.</p>
<p>As for my Xeon system, no, there is no CUDA acceleration. Although my
 iMac does have a Vega GPU so I suppose I could look into trying out the
 Intel + OpenCV + dnn drivers.</p>
<p>In your case don’t bother with it. OpenCV doesn’t yet support NVIDIA GPUs with their “dnn” module (hopefully soon though!)</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486969" onclick='return addComment.moveForm( "comment-486969", "486969", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-3 parent">
	    
	    	<a name="comment-487055"></a>
	      	
	      	<div id="li-comment-487055" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/a54ec0834fe7830d63ad2ebefc320ece.jpg" srcset="https://secure.gravatar.com/avatar/a54ec0834fe7830d63ad2ebefc320ece?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">wally kulecz</span>           
	                <span class="date">November 13, 2018 at 11:37 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-487055" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-487055">
				
				<p>Thanks for the most useful info about openCV and CUDA, maybe for 
openCV 4.x.x  it’ll be worth revisiting.   I really appreciate shared 
experience that saves me from a dead end!</p>
<p>My multi-Movidius Python code uses NCSDK API v.1 and has been tested 
with Python 3.6 and 2.7 on Ubuntu-Mate 18.04,  Raspbian Stretch on a 
Pi3B+ with Python 2.7 and 3.5, and Ubuntu-Mate 16.04 with Python 3.5 
virtual environment (I never setup the virtual environment for python 
2.7).  If no Movidius are found, it drops down to using your Caffe 
version of Mobilenet-SSD on the CPU with one thread per camera.</p>
<p>On my i7 with four cameras and three NCS I’m getting ~30 fps (8 
threads) and with no NCS I’m getting about the same ~30 fps (9 threads).
  In each case there is evidence that the AI spends significant time 
waiting for images  </p>
<p>On an i3 (same four cameras) its getting ~29 fps with three NCS, but 
it falls apart with no NCS only getting ~8 fps and its clear the camera 
threads that are waiting for the AI threads. Just not enough cores for 
the CPU AI.</p>
<p>On a Pi3B+ with three cameras its getting ~6.7 fps with one NCS (5 
threads), ~11 fps with two NCS (6 threads), and ~13 fps with three NCS 
(7 threads).  Two NCS  seems to spend significant time waiting on the 
AI, while three NCS appears to spend significant time waiting on images,
 based on summary counts in the threads that the camera thread would 
block on queue.put() and the NCS thread would block on queue.get().</p>
<p>Right now its only supported input is Onvif netcameras via their 
“snapshot” URL.  The single stick version used your imutils  to 
optionally use USB cameras or the PiCamera module, but I ripped this 
support out of the multi-stick version as few USB cameras work with IR 
illumination and only one PiCamera module can be used on a Pi as far as I
 know.</p>
<p>I need four cameras minimum,  my use is for a video security system 
where a commercial “security DVR” provides 24/7 video recording while 
the AI provides near zero false positive rate high priority “push” 
notifications when it is armed in “not home mode”,  audio alerts (via 
espeak-ng)  if armed in “at home mode”, and nothing when in “idle mode”.
   </p>
<p>The Python code does the AI, node-red does the controlling and 
notifications, and MQTT glues it all together.  The basic system has 
been running since early July and it works extremely well.  It continues
 to evolve, mostly to improve the frame rate and reduce the detection 
latency — think “bad guys” marshaling on your property for a “home 
invasion”.  But we love it for when the mailman comes or a package is 
delivered 🙂</p>
<p>I’d be happy to send you the Python code if you are interested, in 
fact I’d like to see if it works on a Mac.  The CPU only part runs on 
Windows 10 and 7 (no NCS support without way more effort than I’m 
willing to apply) in limited testing with the single stick (AI thread) 
version (I’ve removed the Windows support from the multi-stick code).   
I’ve totally given up on Windows since I retired, but a couple of 
Windows only friends were interested early on (hence the Win7 and Win10 
tests), and I must say that this was by far the best cross-platform 
development experience I’ve ever had!  Python has really impressed me!</p>
<p>I plan to put it up on GitHub eventually, the Ubuntu 18.04 and PyPi 
openCV install was so easy I finally think I could write a README.md (in
 a reasonable amount of time) that someone could actually use from a 
fresh install of Raspbian or Ubuntu.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-487055" onclick='return addComment.moveForm( "comment-487055", "487055", "respond", "8981" )' aria-label="Reply to wally kulecz">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-4">
	    
	    	<a name="comment-487311"></a>
	      	
	      	<div id="li-comment-487311" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 15, 2018 at 12:11 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-487311" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-487311">
				
				<p>Thanks for the detailed writeup, Wally! Let me know when you publish it on GitHub and I’ll take a look 🙂</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-487311" onclick='return addComment.moveForm( "comment-487311", "487311", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt depth-3 parent">
	    
	    	<a name="comment-487951"></a>
	      	
	      	<div id="li-comment-487951" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/0d3d3f588831f1cb5951f0d4db8d34c8.jpg" srcset="https://secure.gravatar.com/avatar/0d3d3f588831f1cb5951f0d4db8d34c8?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">faurog</span>           
	                <span class="date">November 19, 2018 at 11:20 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-487951" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-487951">
				
				<p>Hi, Dr. Adrian. It would be nice if you tried using an Intel iGPU
 + OpenCV + dnn module. My laptop has a Nvidia GPU (not well supported 
yet) and an integrated Intel GPU, but I couldn’t make it work 
(net.setPreferableTarget(cv2.dnn.DNN_TARGET_OPENCL)). Anyway, if you try
 something, let us know. I would like to know if it indeed improves the 
performance. Thank you for another incredible post. Cheers.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-487951" onclick='return addComment.moveForm( "comment-487951", "487951", "respond", "8981" )' aria-label="Reply to faurog">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-4">
	    
	    	<a name="comment-488052"></a>
	      	
	      	<div id="li-comment-488052" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 20, 2018 at 9:12 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-488052" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-488052">
				
				<p>I unfortunately do not have an Intel GPU right now. I hope to try
 it in the future though. Perhaps another reader can share their 
experience.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-488052" onclick='return addComment.moveForm( "comment-488052", "488052", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-486817"></a>
	      	
	      	<div id="li-comment-486817" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/29e2d4b8ddc379881fc951d4f3d0fd43.jpg" srcset="https://secure.gravatar.com/avatar/29e2d4b8ddc379881fc951d4f3d0fd43?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href="http://-/" rel="external nofollow" class="url">blank</a></span>           
	                <span class="date">November 12, 2018 at 8:55 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486817" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486817">
				
				<p>always cool tutorial, keep it up, have a great day! 🙂</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486817" onclick='return addComment.moveForm( "comment-486817", "486817", "respond", "8981" )' aria-label="Reply to blank">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-486966"></a>
	      	
	      	<div id="li-comment-486966" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 13, 2018 at 4:25 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486966" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486966">
				
				<p>Thanks, you too 🙂</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486966" onclick='return addComment.moveForm( "comment-486966", "486966", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-486824"></a>
	      	
	      	<div id="li-comment-486824" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/9ee1f9c1a2cad2ecf35abc5032d2a6ed.png" srcset="https://secure.gravatar.com/avatar/9ee1f9c1a2cad2ecf35abc5032d2a6ed?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href="https://soltitudefeller.wordpress.com/" rel="external nofollow" class="url">Shivam Sahil</a></span>           
	                <span class="date">November 12, 2018 at 9:30 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486824" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486824">
				
				<p>I always had this question in mind, even though it should be the 
fastest detector, whenever I use it in real time video detection, it 
gets slowest even than normal cnn which works pretty fast in my laptop. 
Is it because I have amd graphics card instead of NVidea or something 
else? Was just confused… let me know if you have suggestions regarding 
the same. I saw it takes about 1.3 sec to detect all the individual 
objects in one frame. But how is it able to detect objects quickly in 
your predefined videos, I just changed those to make it real time and it
 again went super slow, please let me know what is the actual issue.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486824" onclick='return addComment.moveForm( "comment-486824", "486824", "respond", "8981" )' aria-label="Reply to Shivam Sahil">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2 parent">
	    
	    	<a name="comment-486965"></a>
	      	
	      	<div id="li-comment-486965" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 13, 2018 at 4:25 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486965" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486965">
				
				<p>Keep in mind that the YOLO model is not accessing your GPU here. 
The YOLO + OpenCV implementation is running on your CPU which is why 
it’s taking a long time for inference.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486965" onclick='return addComment.moveForm( "comment-486965", "486965", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-3 parent">
	    
	    	<a name="comment-487273"></a>
	      	
	      	<div id="li-comment-487273" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/685e835cc8743fa82748bc94c90004f8.jpg" srcset="https://secure.gravatar.com/avatar/685e835cc8743fa82748bc94c90004f8?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Jason</span>           
	                <span class="date">November 15, 2018 at 11:06 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-487273" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-487273">
				
				<p>Adrian, as always, you have a nice tutorial. Thanks a lot. </p>
<p>You can speed up the  YOLO model on CPU by using OpenMP. Open makefile, and set AVX=1 and OPENMP=1.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-487273" onclick='return addComment.moveForm( "comment-487273", "487273", "respond", "8981" )' aria-label="Reply to Jason">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-4 parent">
	    
	    	<a name="comment-487277"></a>
	      	
	      	<div id="li-comment-487277" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 15, 2018 at 11:49 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-487277" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-487277">
				
				<p>Thanks Jason. How much of a speed increase are you seeing with that change?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-487277" onclick='return addComment.moveForm( "comment-487277", "487277", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-5">
	    
	    	<a name="comment-487378"></a>
	      	
	      	<div id="li-comment-487378" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/685e835cc8743fa82748bc94c90004f8.jpg" srcset="https://secure.gravatar.com/avatar/685e835cc8743fa82748bc94c90004f8?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Jason</span>           
	                <span class="date">November 15, 2018 at 10:04 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-487378" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-487378">
				
				<p>I have not had the chance to download your codes yet. I am 
currently using my own data to train YOLOv3. It takes a lot time to 
prepare the images for training because you have to draw a bounding box 
for each objects in each images. Once I finish the training, I will let 
you know the speed difference between turning OpenMP on and off in 
prediction.</p>
<p>By the way, you can also set OpenCV on and off in YOLO.</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even depth-4">
	    
	    	<a name="comment-489690"></a>
	      	
	      	<div id="li-comment-489690" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/79594a13ac4d1dd0bf2ab0ac1f6bfa5c.jpg" srcset="https://secure.gravatar.com/avatar/79594a13ac4d1dd0bf2ab0ac1f6bfa5c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">git-scientist</span>           
	                <span class="date">November 28, 2018 at 10:10 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-489690" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-489690">
				
				<p>Hi Jason, could you give some detailed info about OpenMP? How one should make use of it? And, where does that makefile reside?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-489690" onclick='return addComment.moveForm( "comment-489690", "489690", "respond", "8981" )' aria-label="Reply to git-scientist">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-486832"></a>
	      	
	      	<div id="li-comment-486832" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/754a791b5be7a3fa4c4d9d69d2ddd724.jpg" srcset="https://secure.gravatar.com/avatar/754a791b5be7a3fa4c4d9d69d2ddd724?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Balaji</span>           
	                <span class="date">November 12, 2018 at 10:23 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486832" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486832">
				
				<p>Hi,</p>
<p>Nice tutorial for Yolo and valid comparsion with other object detection models.<br>
I want to detect small objects, so more interested in Faster-Rcnn resnet
 models, In this blog I can see you have mentioned they will outperform 
with ~5fps. I am using Faster-Rcnn resnet101 model in GPU 1080, but I am
 getting only 1.5 fps.<br>
Can you please suggest how to improve the speed.<br>
And as a user want to ask, When can we except a blog on Faster Rcnn Models and their advantages with custom training.</p>
<p>Thank You</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486832" onclick='return addComment.moveForm( "comment-486832", "486832", "respond", "8981" )' aria-label="Reply to Balaji">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-486962"></a>
	      	
	      	<div id="li-comment-486962" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 13, 2018 at 4:23 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486962" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486962">
				
				<p>Hey Balaji — I actually show you how to train your own custom Faster R-CNN models on your own datasets inside my book, <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python.</a>
 I also provide you with my tips, best practices, and suggestions on how
 to improve your model performance and speed. Be sure to take a look, I 
think it will really help you out.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486962" onclick='return addComment.moveForm( "comment-486962", "486962", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-486833"></a>
	      	
	      	<div id="li-comment-486833" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/be5f5c92ad17b87edc0558c89cfa806e.jpg" srcset="https://secure.gravatar.com/avatar/be5f5c92ad17b87edc0558c89cfa806e?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href="http://aegissystems.ai/" rel="external nofollow" class="url">Jacob</a></span>           
	                <span class="date">November 12, 2018 at 10:28 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486833" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486833">
				
				<p>What performance do you expect when run with a Tesla V100 GPU 
with 608×608 images?  With darknet, I can process images with yolo 
between 80-90 fps.  Yolo is typically much slower when implemented in 
python–does this opencv implementation also have a significant reduction
 in performance compared to darknet?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486833" onclick='return addComment.moveForm( "comment-486833", "486833", "respond", "8981" )' aria-label="Reply to Jacob">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-486961"></a>
	      	
	      	<div id="li-comment-486961" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 13, 2018 at 4:22 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486961" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486961">
				
				<p>OpenCV doesn’t yet support NVIDIA GPUs with their “dnn” module so
 we cannot yet obtain that benchmark. NVIDIA GPU support is coming soon 
but it’s not quite there yet.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486961" onclick='return addComment.moveForm( "comment-486961", "486961", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-486846"></a>
	      	
	      	<div id="li-comment-486846" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/6a98a0a79a20422b1a74340bfb854bbc.jpg" srcset="https://secure.gravatar.com/avatar/6a98a0a79a20422b1a74340bfb854bbc?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">adam_Viz</span>           
	                <span class="date">November 13, 2018 at 1:26 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486846" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486846">
				
				<p>Oh Adrain!!! Awesome,am  implemented successfully without any hasle..thankx for your contribution .</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486846" onclick='return addComment.moveForm( "comment-486846", "486846", "respond", "8981" )' aria-label="Reply to adam_Viz">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-486959"></a>
	      	
	      	<div id="li-comment-486959" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 13, 2018 at 4:21 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486959" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486959">
				
				<p>Thanks Adam — and thank you for being a PyImageSearch reader.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486959" onclick='return addComment.moveForm( "comment-486959", "486959", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-486849"></a>
	      	
	      	<div id="li-comment-486849" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/694c7b69cfdbe573fe0d61857a5ccfe4.jpg" srcset="https://secure.gravatar.com/avatar/694c7b69cfdbe573fe0d61857a5ccfe4?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href="http://tkachenko.expert/" rel="external nofollow" class="url">Alexander</a></span>           
	                <span class="date">November 13, 2018 at 2:34 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486849" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486849">
				
				<p>Hello, Adrian!</p>
<p>What could you think about problem with real-time video from 
web-cameras? In our project (on-line detecting cars and peoples) when we
 used OpenCV3 with real-time video, we got big delay between frames… We 
solved this problem, but now we don`t using real-time video-streams from
 OpenCV.</p>
<p>Could you have sample with real-time stream, not mp4 or avi-files?</p>
<p>Best wishes, Alexander,<br>
Russia, Novosibirsk.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486849" onclick='return addComment.moveForm( "comment-486849", "486849", "respond", "8981" )' aria-label="Reply to Alexander">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-486958"></a>
	      	
	      	<div id="li-comment-486958" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 13, 2018 at 4:21 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486958" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486958">
				
				<p>Keep in mind that deep learning models will run significantly 
faster on a GPU. You might want to refactor your code to use pure Keras,
 TensorFlow, Caffe, or whatever your model was trained with, enabling 
you to access your GPU. More GPU support with OpenCV is coming soon but 
it’s not quite there yet.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486958" onclick='return addComment.moveForm( "comment-486958", "486958", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-486852"></a>
	      	
	      	<div id="li-comment-486852" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/a1161a52d9a3be845be9ab8584e1f8f5.jpg" srcset="https://secure.gravatar.com/avatar/a1161a52d9a3be845be9ab8584e1f8f5?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">TAYFUN ARABACI</span>           
	                <span class="date">November 13, 2018 at 2:50 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486852" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486852">
				
				<p>very very nice Adrian :=)</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486852" onclick='return addComment.moveForm( "comment-486852", "486852", "respond", "8981" )' aria-label="Reply to TAYFUN ARABACI">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-486957"></a>
	      	
	      	<div id="li-comment-486957" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 13, 2018 at 4:20 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486957" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486957">
				
				<p>Thanks Tayfun!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486957" onclick='return addComment.moveForm( "comment-486957", "486957", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-486876"></a>
	      	
	      	<div id="li-comment-486876" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/8bddb6668b8fc64f23c17a184bd53dac.jpg" srcset="https://secure.gravatar.com/avatar/8bddb6668b8fc64f23c17a184bd53dac?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Riad</span>           
	                <span class="date">November 13, 2018 at 6:16 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486876" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486876">
				
				<p>Great tutorial ! But I notice that the code doesn’t work with 
grayscale images. Is there some parameters I can tweak to make it work?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486876" onclick='return addComment.moveForm( "comment-486876", "486876", "respond", "8981" )' aria-label="Reply to Riad">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-486952"></a>
	      	
	      	<div id="li-comment-486952" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 13, 2018 at 4:16 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486952" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486952">
				
				<p>YOLO expects three channel RGB input images. If you have an input
 grayscale image just stack it to create a “faux” RGB/grayscale image:</p>
<p><code>image = np.dstack([gray] * 3)</code></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486952" onclick='return addComment.moveForm( "comment-486952", "486952", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-486897"></a>
	      	
	      	<div id="li-comment-486897" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/3f3dea0775b37d4afcbf149058b5173d.jpg" srcset="https://secure.gravatar.com/avatar/3f3dea0775b37d4afcbf149058b5173d?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Anusha</span>           
	                <span class="date">November 13, 2018 at 8:55 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486897" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486897">
				
				<p>Hey Adrian, this is a great post and I really liked the way you 
put everything in sequential order. I have a question though. I was 
wondering how can I replace the YOLO model for this object detection 
with Faster RCNN to suit my purposes as I have fairly small objects in 
my videos which I need to detect. I mean is there a deploy model and 
prototxt available for Faster RCNN?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486897" onclick='return addComment.moveForm( "comment-486897", "486897", "respond", "8981" )' aria-label="Reply to Anusha">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-486949"></a>
	      	
	      	<div id="li-comment-486949" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 13, 2018 at 4:14 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486949" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486949">
				
				<p>Yes, you would:</p>
<p>1. Train your Faster R-CNN on whatever dataset you are using<br>
2. Then take the prototxt and Caffe model weights and swap them in</p>
<p>Keep in mind that loading Faster R-CNN models is not yet 100% 
supported by OpenCV yet. It’s partially supported but it can be a bit of
 a pain.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486949" onclick='return addComment.moveForm( "comment-486949", "486949", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-486907"></a>
	      	
	      	<div id="li-comment-486907" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/2d78e3d8a128ca7ae1ba1ef0e179a58a.jpg" srcset="https://secure.gravatar.com/avatar/2d78e3d8a128ca7ae1ba1ef0e179a58a?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Sophia</span>           
	                <span class="date">November 13, 2018 at 10:55 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486907" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486907">
				
				<p>yet another amazingly informative tutorial! how does the speed-accuracy tradeoff of SSD compare with that of RetinaNet? thanks,</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486907" onclick='return addComment.moveForm( "comment-486907", "486907", "respond", "8981" )' aria-label="Reply to Sophia">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2 parent">
	    
	    	<a name="comment-486948"></a>
	      	
	      	<div id="li-comment-486948" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 13, 2018 at 4:14 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486948" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486948">
				
				<p>In my experience RetinaNet tends to be slightly slower but also (1) slightly more accurate and (2) a bit easier to train.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486948" onclick='return addComment.moveForm( "comment-486948", "486948", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-3">
	    
	    	<a name="comment-487018"></a>
	      	
	      	<div id="li-comment-487018" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/2d78e3d8a128ca7ae1ba1ef0e179a58a.jpg" srcset="https://secure.gravatar.com/avatar/2d78e3d8a128ca7ae1ba1ef0e179a58a?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">sophia</span>           
	                <span class="date">November 13, 2018 at 5:05 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-487018" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-487018">
				
				<p>thank you for replying, Adrian. that’s helpful information.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-487018" onclick='return addComment.moveForm( "comment-487018", "487018", "respond", "8981" )' aria-label="Reply to sophia">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-486937"></a>
	      	
	      	<div id="li-comment-486937" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/67a9ec7bf685f0bbde6e5a4cb72340fb.jpg" srcset="https://secure.gravatar.com/avatar/67a9ec7bf685f0bbde6e5a4cb72340fb?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">joeSIX</span>           
	                <span class="date">November 13, 2018 at 2:58 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486937" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486937">
				
				<p>This is a great tutorial, can’t thank you enough.<br>
unfortunately, I was unable to test it on my own (macbook pro, anaconda environment, opencv 3.4.2):<br>
error: (-215:Assertion failed) ifile.is_open() in function ‘ReadDarknetFromWeightsFile’</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486937" onclick='return addComment.moveForm( "comment-486937", "486937", "respond", "8981" )' aria-label="Reply to joeSIX">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-486941"></a>
	      	
	      	<div id="li-comment-486941" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 13, 2018 at 4:08 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-486941" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486941">
				
				<p>Double-check your path to the input weights and configuration file. It sounds like your paths may be incorrect.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486941" onclick='return addComment.moveForm( "comment-486941", "486941", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-487042"></a>
	      	
	      	<div id="li-comment-487042" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/33ac942db80fe3dbd1cd9175603b9f86.jpg" srcset="https://secure.gravatar.com/avatar/33ac942db80fe3dbd1cd9175603b9f86?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Yurii</span>           
	                <span class="date">November 13, 2018 at 9:23 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-487042" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-487042">
				
				<p>Hi Adrian,<br>
Is there a way to specify particular object to detect? For instance only
 cars and stop signs. It should speed up process I suppose as resources 
are not wasted on recognition of other objects.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-487042" onclick='return addComment.moveForm( "comment-487042", "487042", "respond", "8981" )' aria-label="Reply to Yurii">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-487314"></a>
	      	
	      	<div id="li-comment-487314" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 15, 2018 at 12:14 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-487314" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-487314">
				
				<p>You can fine-tune the model to remove classes you’re not wanted 
in but keep in mind the number of classes isn’t going to dramatically 
slow down or speedup the network — all the computation is happening 
earlier in the network.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-487314" onclick='return addComment.moveForm( "comment-487314", "487314", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-487090"></a>
	      	
	      	<div id="li-comment-487090" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/44b917e16916cf5e780383b0105d1b48.jpg" srcset="https://secure.gravatar.com/avatar/44b917e16916cf5e780383b0105d1b48?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Ramkumar</span>           
	                <span class="date">November 14, 2018 at 4:53 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-487090" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-487090">
				
				<p>Hi Adrian,<br>
The article you explained very interestingly for a beginner. Can we 
implement a smoke detection from image using yolo? Or only for hard 
objects?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-487090" onclick='return addComment.moveForm( "comment-487090", "487090", "respond", "8981" )' aria-label="Reply to Ramkumar">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-487305"></a>
	      	
	      	<div id="li-comment-487305" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 15, 2018 at 12:07 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-487305" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-487305">
				
				<p>Object detectors work best for objects that have some sort of 
“form”. Smoke, like water, doesn’t have a true rigid form hence YOLO and
 other object detectors would not work well for smoke detection.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-487305" onclick='return addComment.moveForm( "comment-487305", "487305", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-487102"></a>
	      	
	      	<div id="li-comment-487102" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/a96a247fee5a616eba58f3d0fef82335.jpg" srcset="https://secure.gravatar.com/avatar/a96a247fee5a616eba58f3d0fef82335?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Marcelo Mota</span>           
	                <span class="date">November 14, 2018 at 5:45 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-487102" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-487102">
				
				<p>Thanks for another great tutorial, Adrian!</p>
<p>Could you please explain in more details lines 41 to 43? Why do you 
get layer names, and unconnected layers? And why that ” – 1″? code 
below:</p>
<p>   # determine only the *output* layer names that we need from YOLO<br>
   ln = net.getLayerNames()<br>
   ln = [ln[i[0] – 1] for i in net.getUnconnectedOutLayers()]</p>
<p>And also line 52, why do you need to do a forward pass in just the “ln” layers? code below:</p>
<p>   layerOutputs = net.forward(ln)</p>
<p>thank you!</p>
<p>Marcelo</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-487102" onclick='return addComment.moveForm( "comment-487102", "487102", "respond", "8981" )' aria-label="Reply to Marcelo Mota">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-487299"></a>
	      	
	      	<div id="li-comment-487299" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 15, 2018 at 12:05 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-487299" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-487299">
				
				<p>The YOLO model is trained via the Darknet framework. We need to 
explicitly supply the output layer names into the call to “.forward()”. 
It’s a requirement when using Darknet models with OpenCV.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-487299" onclick='return addComment.moveForm( "comment-487299", "487299", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-487124"></a>
	      	
	      	<div id="li-comment-487124" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/c45edbd8d9c67277fd677581532d1dac.jpg" srcset="https://secure.gravatar.com/avatar/c45edbd8d9c67277fd677581532d1dac?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Taha</span>           
	                <span class="date">November 14, 2018 at 9:24 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-487124" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-487124">
				
				<p>I’m getting 0.5 fps on a 1.7Ghz processor which intel core i3 4th gen. Is that okay speed for this model and system.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-487124" onclick='return addComment.moveForm( "comment-487124", "487124", "respond", "8981" )' aria-label="Reply to Taha">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-487296"></a>
	      	
	      	<div id="li-comment-487296" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 15, 2018 at 12:02 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-487296" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-487296">
				
				<p>Given that the model is running on the CPU, yes, those results seem accurate.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-487296" onclick='return addComment.moveForm( "comment-487296", "487296", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-487146"></a>
	      	
	      	<div id="li-comment-487146" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/bd2955692cde48b961c59307e4cd4c9d.jpg" srcset="https://secure.gravatar.com/avatar/bd2955692cde48b961c59307e4cd4c9d?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Andrew</span>           
	                <span class="date">November 14, 2018 at 12:41 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-487146" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-487146">
				
				<p>Hello  Adrian,</p>
<p>Nice tutorial…have you tried running YOLOv3 in C, given that it was originally written in C?<br>
I think there are some python wrappers out there for the datatypes</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-487146" onclick='return addComment.moveForm( "comment-487146", "487146", "respond", "8981" )' aria-label="Reply to Andrew">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-487289"></a>
	      	
	      	<div id="li-comment-487289" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 15, 2018 at 11:58 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-487289" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-487289">
				
				<p>I haven’t tried in C but I know there is the <a target="blank" href="https://pypi.org/project/darknetpy/" rel="nofollow">darknetpy</a> wrapper which can be used to run YOLO on a GPU.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-487289" onclick='return addComment.moveForm( "comment-487289", "487289", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-487154"></a>
	      	
	      	<div id="li-comment-487154" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/411c579f17fef3bf20ede3bd09082b55.jpg" srcset="https://secure.gravatar.com/avatar/411c579f17fef3bf20ede3bd09082b55?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Thanks a lot!</span>           
	                <span class="date">November 14, 2018 at 2:39 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-487154" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-487154">
				
				<p>Hi, Can you please tell me if I can run this code on Windows or 
not? I am stuck in Windows and cannot find a comprehensive tutorial of 
Yolo in Windows. Please help.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-487154" onclick='return addComment.moveForm( "comment-487154", "487154", "respond", "8981" )' aria-label="Reply to Thanks a lot!">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-487288"></a>
	      	
	      	<div id="li-comment-487288" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 15, 2018 at 11:58 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-487288" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-487288">
				
				<p>This tutorial will work on Windows provided you:</p>
<p>1. Use the “Downloads” section of the tutorial to download the code + trained YOLO model<br>
2. Have OpenCV 3.4.2 or higher installed</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-487288" onclick='return addComment.moveForm( "comment-487288", "487288", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-487634"></a>
	      	
	      	<div id="li-comment-487634" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/6f11d1c130ec01900d788553e8fb74fb.jpg" srcset="https://secure.gravatar.com/avatar/6f11d1c130ec01900d788553e8fb74fb?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Sunny</span>           
	                <span class="date">November 17, 2018 at 11:33 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-487634" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-487634">
				
				<p>Hi Adrian, </p>
<p>If I want to only detect the red car inside the car chasing video by 
using YOLO, any suggestions on fulfilling the goal? Thank you</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-487634" onclick='return addComment.moveForm( "comment-487634", "487634", "respond", "8981" )' aria-label="Reply to Sunny">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-487840"></a>
	      	
	      	<div id="li-comment-487840" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 19, 2018 at 12:38 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-487840" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-487840">
				
				<p>You would:</p>
<p>1. Filter on the “car” class, ignoring all other non-car detections<br>
2. <a target="blank" href="https://www.pyimagesearch.com/2016/02/15/determining-object-color-with-opencv/">Determine the object color</a></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-487840" onclick='return addComment.moveForm( "comment-487840", "487840", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-487764"></a>
	      	
	      	<div id="li-comment-487764" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/6d5ea399e533042714079c849db71c6e.jpg" srcset="https://secure.gravatar.com/avatar/6d5ea399e533042714079c849db71c6e?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">moxran</span>           
	                <span class="date">November 19, 2018 at 3:16 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-487764" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-487764">
				
				<p>Hi, </p>
<p>Since this is a yolo detector with OpenCV, it is not using the gpu, 
right? I’m getting 1 fps on a Intel core i7 2.2 Ghz processor, which is 
really slow.  any reason you can see? Thanks!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-487764" onclick='return addComment.moveForm( "comment-487764", "487764", "respond", "8981" )' aria-label="Reply to moxran">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-487823"></a>
	      	
	      	<div id="li-comment-487823" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 19, 2018 at 12:25 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-487823" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-487823">
				
				<p>Correct, the YOLO detector is running on the CPU, not the GPU. 
Please see the other comments on this page where I’ve addressed OpenCV’s
 GPU capabilities.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-487823" onclick='return addComment.moveForm( "comment-487823", "487823", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-487992"></a>
	      	
	      	<div id="li-comment-487992" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/6210e2ae5981f25686cfecb34fb9fdf0.jpg" srcset="https://secure.gravatar.com/avatar/6210e2ae5981f25686cfecb34fb9fdf0?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Dheeraj</span>           
	                <span class="date">November 20, 2018 at 4:34 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-487992" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-487992">
				
				<p>Can we count people using YOLO based Approach? If so, then what 
changes should be made in the code or need to use my own data set to 
train the model?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-487992" onclick='return addComment.moveForm( "comment-487992", "487992", "respond", "8981" )' aria-label="Reply to Dheeraj">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-488043"></a>
	      	
	      	<div id="li-comment-488043" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 20, 2018 at 9:03 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-488043" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-488043">
				
				<p>I actually describe how to build an <a target="blank" href="https://www.pyimagesearch.com/2018/08/13/opencv-people-counter/">people counter in this tutorial.</a></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-488043" onclick='return addComment.moveForm( "comment-488043", "488043", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-488080"></a>
	      	
	      	<div id="li-comment-488080" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/c49f0ee76e51901ee3701809ccf14e04.jpg" srcset="https://secure.gravatar.com/avatar/c49f0ee76e51901ee3701809ccf14e04?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Jelo</span>           
	                <span class="date">November 20, 2018 at 11:51 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-488080" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-488080">
				
				<p>Hi Adrian,</p>
<p>First at all let me thank you for your all posts, really it is very useful for all.<br>
I would like to ask you can we use the deep learning to estimate the detect object position ? can you share some links ?<br>
Thank you again</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-488080" onclick='return addComment.moveForm( "comment-488080", "488080", "respond", "8981" )' aria-label="Reply to Jelo">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-488279"></a>
	      	
	      	<div id="li-comment-488279" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 21, 2018 at 9:37 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-488279" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-488279">
				
				<p>Could you elaborate on what you mean by “object position”? What specifically are you trying to measure?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-488279" onclick='return addComment.moveForm( "comment-488279", "488279", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-488170"></a>
	      	
	      	<div id="li-comment-488170" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/deb278767eb12ba6462587a1562e83e1.jpg" srcset="https://secure.gravatar.com/avatar/deb278767eb12ba6462587a1562e83e1?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Oscar Mejia</span>           
	                <span class="date">November 20, 2018 at 11:01 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-488170" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-488170">
				
				<p>Hi Adrian, first of all, Thanks for your help and time to do this kind of tutorials. I really appreciate your help.</p>
<p>Adrian, I would like to know if you recommend these algorithms to 
apply in a project to identifying, tracking and counting people in real 
time, if not what technique would you recommend me?</p>
<p>Thanks in advance.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-488170" onclick='return addComment.moveForm( "comment-488170", "488170", "respond", "8981" )' aria-label="Reply to Oscar Mejia">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-2 parent">
	    
	    	<a name="comment-488171"></a>
	      	
	      	<div id="li-comment-488171" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/deb278767eb12ba6462587a1562e83e1.jpg" srcset="https://secure.gravatar.com/avatar/deb278767eb12ba6462587a1562e83e1?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Oscar Mejia</span>           
	                <span class="date">November 20, 2018 at 11:03 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-488171" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-488171">
				
				<p>I forgot mentioning that the project is for doing it on a raspberry pi 3 b+.</p>
<p>Thanks.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-488171" onclick='return addComment.moveForm( "comment-488171", "488171", "respond", "8981" )' aria-label="Reply to Oscar Mejia">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-3">
	    
	    	<a name="comment-488269"></a>
	      	
	      	<div id="li-comment-488269" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 21, 2018 at 9:26 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-488269" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-488269">
				
				<p>Take a look at my tutorial on <a target="blank" href="https://www.pyimagesearch.com/2018/08/13/opencv-people-counter/">building an OpenCV people counter.</a> I include suggestions on how to adapt it to the Raspberry Pi.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-488269" onclick='return addComment.moveForm( "comment-488269", "488269", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-488177"></a>
	      	
	      	<div id="li-comment-488177" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/abf2d1c2b22741865b48c1d97cd35384.jpg" srcset="https://secure.gravatar.com/avatar/abf2d1c2b22741865b48c1d97cd35384?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Steve</span>           
	                <span class="date">November 20, 2018 at 11:48 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-488177" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-488177">
				
				<p>Hi,<br>
   After running the yolo_video.py, it does’t display the video window, Why?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-488177" onclick='return addComment.moveForm( "comment-488177", "488177", "respond", "8981" )' aria-label="Reply to Steve">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-488267"></a>
	      	
	      	<div id="li-comment-488267" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 21, 2018 at 9:25 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-488267" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-488267">
				
				<p>The YOLO video file does not display the frame on your screen, it
 just writes it to disk. To display the frame to your screen you can use
 <code>cv2.imshow</code></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-488267" onclick='return addComment.moveForm( "comment-488267", "488267", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-488443"></a>
	      	
	      	<div id="li-comment-488443" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/51ae2e3c86677f02d0add3ee153fc00a.jpg" srcset="https://secure.gravatar.com/avatar/51ae2e3c86677f02d0add3ee153fc00a?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Aiwenj</span>           
	                <span class="date">November 22, 2018 at 2:18 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-488443" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-488443">
				
				<p>Hello ,Adrian.Thank you for your post!and i have a question that i
 want to know the number of people in an image.how to do it  using YOLO?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-488443" onclick='return addComment.moveForm( "comment-488443", "488443", "respond", "8981" )' aria-label="Reply to Aiwenj">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-489030"></a>
	      	
	      	<div id="li-comment-489030" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 25, 2018 at 9:33 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-489030" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-489030">
				
				<p>You would loop over the number of detected objects, use an “if” 
statement to check if it’s a person, and then increment a counter.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-489030" onclick='return addComment.moveForm( "comment-489030", "489030", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-488486"></a>
	      	
	      	<div id="li-comment-488486" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/5b2ab73dd8e72c97461ce0240030aa2f.jpg" srcset="https://secure.gravatar.com/avatar/5b2ab73dd8e72c97461ce0240030aa2f?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Abhijeet</span>           
	                <span class="date">November 22, 2018 at 7:03 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-488486" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-488486">
				
				<p>hi am getting this error while running your code No such file or directory: ‘yolo-coco\\coco.names please reply me</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-488486" onclick='return addComment.moveForm( "comment-488486", "488486", "respond", "8981" )' aria-label="Reply to Abhijeet">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2 parent">
	    
	    	<a name="comment-489024"></a>
	      	
	      	<div id="li-comment-489024" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 25, 2018 at 9:27 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-489024" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-489024">
				
				<p>Make sure you are using the “Downloads” section of this blog post
 to download the source code and example models. It sounds like you 
don’t have them downloaded on your system yet.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-489024" onclick='return addComment.moveForm( "comment-489024", "489024", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-3">
	    
	    	<a name="comment-489969"></a>
	      	
	      	<div id="li-comment-489969" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/5b2ab73dd8e72c97461ce0240030aa2f.jpg" srcset="https://secure.gravatar.com/avatar/5b2ab73dd8e72c97461ce0240030aa2f?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Abhijeet</span>           
	                <span class="date">November 30, 2018 at 7:47 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-489969" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-489969">
				
				<p>Thanks man code is really understandable.. please tell my purpose of unconnectedoutput layer (ln) in code</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-489969" onclick='return addComment.moveForm( "comment-489969", "489969", "respond", "8981" )' aria-label="Reply to Abhijeet">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-488584"></a>
	      	
	      	<div id="li-comment-488584" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/c838715e80aa674c5e99b879cef6d256.jpg" srcset="https://secure.gravatar.com/avatar/c838715e80aa674c5e99b879cef6d256?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Abhishek</span>           
	                <span class="date">November 22, 2018 at 4:12 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-488584" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-488584">
				
				<p>Does this work with GIFs? Also I’m getting  “error: 
(-215:Assertion failed) !ssize.empty() in function ‘cv::resize’. Any 
fixes? maybe the input image seems to be empty but I’m not sure about it</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-488584" onclick='return addComment.moveForm( "comment-488584", "488584", "respond", "8981" )' aria-label="Reply to Abhishek">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-489015"></a>
	      	
	      	<div id="li-comment-489015" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 25, 2018 at 9:19 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-489015" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-489015">
				
				<p>No, OpenCV does not support loading GIFs. You’ll want to convert 
the GIF to a series of JPEG or PNG frames, then feed them through the 
YOLO object detector.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-489015" onclick='return addComment.moveForm( "comment-489015", "489015", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1">
	    
	    	<a name="comment-488698"></a>
	      	
	      	<div id="li-comment-488698" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/97fdec2536cade6d071eff05ffc69772.jpg" srcset="https://secure.gravatar.com/avatar/97fdec2536cade6d071eff05ffc69772?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">frank</span>           
	                <span class="date">November 23, 2018 at 9:14 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-488698" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-488698">
				
				<p>Hi Adrian, thanks for your great tutorials. I have a question 
about the line 70 of source code in yolo.py. the length of detection is 
85. detection[0:4] represent coordinates ,width and height. detection[5:
 ] represent the probability of 80 objects. I find the detection[4] is 
not used. so I want to know what detection[4] stands for.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-488698" onclick='return addComment.moveForm( "comment-488698", "488698", "respond", "8981" )' aria-label="Reply to frank">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-489048"></a>
	      	
	      	<div id="li-comment-489048" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/3d0cb427c269049e823fe9e2dbfe0af0.jpg" srcset="https://secure.gravatar.com/avatar/3d0cb427c269049e823fe9e2dbfe0af0?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Daniele Bagni</span>           
	                <span class="date">November 25, 2018 at 9:59 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-489048" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-489048">
				
				<p>EXCELLENT TUTORIAL, Adrian as usual from you. Thank you very much for sharing your knowledge!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-489048" onclick='return addComment.moveForm( "comment-489048", "489048", "respond", "8981" )' aria-label="Reply to Daniele Bagni">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-489254"></a>
	      	
	      	<div id="li-comment-489254" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 26, 2018 at 2:33 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-489254" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-489254">
				
				<p>Thanks so much Daniele!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-489254" onclick='return addComment.moveForm( "comment-489254", "489254", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-489594"></a>
	      	
	      	<div id="li-comment-489594" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/2f9cb09867ee9fb833ece9f1bdd58c71.jpg" srcset="https://secure.gravatar.com/avatar/2f9cb09867ee9fb833ece9f1bdd58c71?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href="https://www.guillelopez.com/" rel="external nofollow" class="url">Guille Lopez</a></span>           
	                <span class="date">November 28, 2018 at 7:45 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-489594" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-489594">
				
				<p>Hi Adrian. Great tutorial! Extending your code I’ve been able to 
add the SORT algorithm to create a first approach to a traffic counter. I
 was thinking on open sourcing the code on Github (link removed by spam 
filter). Is it ok for you if I do that? I will cite your tutorial, 
pointing back to this page.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-489594" onclick='return addComment.moveForm( "comment-489594", "489594", "respond", "8981" )' aria-label="Reply to Guille Lopez">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-490014"></a>
	      	
	      	<div id="li-comment-490014" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 30, 2018 at 9:12 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-490014" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-490014">
				
				<p>Hi Guille — congratulations on building a traffic counter, 
awesome job! Yes, feel free to open source the project, please just link
 back to the PyImageSearch blog from the GitHub readme page. Thank you!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-490014" onclick='return addComment.moveForm( "comment-490014", "490014", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-490569"></a>
	      	
	      	<div id="li-comment-490569" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/dd1a1e68d67fd3e5b3f3aa80af0f3bf1.jpg" srcset="https://secure.gravatar.com/avatar/dd1a1e68d67fd3e5b3f3aa80af0f3bf1?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Dnyaneshwar</span>           
	                <span class="date">December 3, 2018 at 10:50 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-490569" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-490569">
				
				<p>hi Adrian ,</p>
<p>i am new to deep learning computer vision , i have downloaded the source code from your site.</p>
<p>please let me know what set up is required and steps to run  the program on windows</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-490569" onclick='return addComment.moveForm( "comment-490569", "490569", "respond", "8981" )' aria-label="Reply to Dnyaneshwar">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-490662"></a>
	      	
	      	<div id="li-comment-490662" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">December 4, 2018 at 9:43 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-490662" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-490662">
				
				<p>Please note that I only support Linux and macOS on this blog. I 
do not officially support Windows nor do I provide Windows install 
tutorials. I would suggest you follow my <a target="blank" href="https://www.pyimagesearch.com/opencv-tutorials-resources-guides/">OpenCV install guides</a> on either Linux or macOS to get up and running.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-490662" onclick='return addComment.moveForm( "comment-490662", "490662", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-490588"></a>
	      	
	      	<div id="li-comment-490588" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/f08f3edbb16907986b0f65561cb67948.jpg" srcset="https://secure.gravatar.com/avatar/f08f3edbb16907986b0f65561cb67948?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Dnyaneshwar</span>           
	                <span class="date">December 4, 2018 at 2:27 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-490588" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-490588">
				
				<p>HI  Adrian ,</p>
<p>i am new to deep learning computer vision. can you help me how to  
get started building application for object detection using intel 
openvino  toolkit.please provide the steps to create application and run
 it</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-490588" onclick='return addComment.moveForm( "comment-490588", "490588", "respond", "8981" )' aria-label="Reply to Dnyaneshwar">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-490658"></a>
	      	
	      	<div id="li-comment-490658" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">December 4, 2018 at 9:39 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-490658" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-490658">
				
				<p>At this time I do not have any tutorials on Intel’s OpenVINO 
toolkit. I will consider it for the future but I cannot guarantee 
if/when I may write about it.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-490658" onclick='return addComment.moveForm( "comment-490658", "490658", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-490711"></a>
	      	
	      	<div id="li-comment-490711" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/4f774634e3eee825592f0fdffb87a709.jpg" srcset="https://secure.gravatar.com/avatar/4f774634e3eee825592f0fdffb87a709?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href="http://nahaelmele.lprolab.com/" rel="external nofollow" class="url">Nahael</a></span>           
	                <span class="date">December 4, 2018 at 11:47 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-490711" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-490711">
				
				<p>Hi Adrian, thank you for the tutorial,I;ve been following your 
post for a while now,I would like to know if its possible to traiin my 
own dataset to detect violent scenes in videos,it will be very kind if 
you could help us with that,thank you again.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-490711" onclick='return addComment.moveForm( "comment-490711", "490711", "respond", "8981" )' aria-label="Reply to Nahael">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-491027"></a>
	      	
	      	<div id="li-comment-491027" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">December 6, 2018 at 9:55 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-491027" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-491027">
				
				<p>What you are referring to is called “activity recognition”. I 
don’t have any tutorials regarding activity recognition (yet) but I do 
have a chapter inside <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python</a>
 which does show you how to detect and recognize weapons in images and 
video. That may be a good starting point for your project.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-491027" onclick='return addComment.moveForm( "comment-491027", "491027", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-490834"></a>
	      	
	      	<div id="li-comment-490834" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/55ca32f461d2452c6ac402646035845f.jpg" srcset="https://secure.gravatar.com/avatar/55ca32f461d2452c6ac402646035845f?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Chris</span>           
	                <span class="date">December 5, 2018 at 7:20 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-490834" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-490834">
				
				<p>Cheers for this Adrian, it’s been exactly what I needed.</p>
<p>I’ve now adapted the code to work with my home CCTV!</p>
<p>Before my CCTV would FTP a short video when motion was detected to my
 server, and then I would use python to split the video into frames and 
email a picture of frames from 1sec, 3sec and 5sec to my email address, 
so where ever I am in the world I get an image of what triggered the 
motion sensor.</p>
<p>Problem is, that I kept getting images of cats, birds, heavy rain etc.</p>
<p>What I’ve done now is edit your code, so now when I get images from 
1, 3 and 5secs. I run them through the code, check if the label is 
“person”, “car”, “truck” etc. and if so then attach the images to the 
email and send it.</p>
<p>No more false alerts!!</p>
<p>Thanks again and I love the Guru course too, having some real fun with that</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-490834" onclick='return addComment.moveForm( "comment-490834", "490834", "respond", "8981" )' aria-label="Reply to Chris">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-491008"></a>
	      	
	      	<div id="li-comment-491008" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">December 6, 2018 at 9:40 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-491008" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-491008">
				
				<p>Awesome, congratulations on adapting the code to your own project Chris!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-491008" onclick='return addComment.moveForm( "comment-491008", "491008", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-491268"></a>
	      	
	      	<div id="li-comment-491268" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/e1fc041b0cea9b80d84a24cf2fc7374c.jpg" srcset="https://secure.gravatar.com/avatar/e1fc041b0cea9b80d84a24cf2fc7374c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Jammula</span>           
	                <span class="date">December 8, 2018 at 5:00 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-491268" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-491268">
				
				<p>hello,<br>
Adrian Rosebrock,</p>
<p>Thank you for great tutorial ,I am facing problem while executing the
 yolo.py for object detection in images through terminal in Jupiter 
notebook.</p>
<p>Issue:<br>
I am getting “cannot connect to X SERVER ” error </p>
<p>My server details:<br>
i am using Nvidia GeForce  GTX 1080 Ti with 11173 MiB memory</p>
<p>Thank You in advance.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-491268" onclick='return addComment.moveForm( "comment-491268", "491268", "respond", "8981" )' aria-label="Reply to Jammula">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-491726"></a>
	      	
	      	<div id="li-comment-491726" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">December 11, 2018 at 12:58 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-491726" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-491726">
				
				<p>What line of code is throwing that error?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-491726" onclick='return addComment.moveForm( "comment-491726", "491726", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-491308"></a>
	      	
	      	<div id="li-comment-491308" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/18386c8a4bf13eac139de2f20d83e467.jpg" srcset="https://secure.gravatar.com/avatar/18386c8a4bf13eac139de2f20d83e467?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Kunal Gupta</span>           
	                <span class="date">December 8, 2018 at 2:02 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-491308" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-491308">
				
				<p>Thanks for the post Adrian!<br>
I’d like to know that it’s said that YOLO is faster than SSD’s so 
technically, on real time video feed, it should outperform them?<br>
But, when I ran it, I got 15fps in MobileNet SSD’s and around, 3fps in YOLO.<br>
What can be the issue?<br>
Thanks!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-491308" onclick='return addComment.moveForm( "comment-491308", "491308", "respond", "8981" )' aria-label="Reply to Kunal Gupta">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2 parent">
	    
	    	<a name="comment-491723"></a>
	      	
	      	<div id="li-comment-491723" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">December 11, 2018 at 12:57 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-491723" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-491723">
				
				<p>You are correct that YOLO should be faster than SSD but as you 
found out and as I noted in the “Limitations and drawbacks of the YOLO 
object detector” section of the guide YOLO appears to be slower. I’m not
 sure why that is.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-491723" onclick='return addComment.moveForm( "comment-491723", "491723", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-3 parent">
	    
	    	<a name="comment-492409"></a>
	      	
	      	<div id="li-comment-492409" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/6b2c8e6826397b4cb59aa1123a04c8f9.jpg" srcset="https://secure.gravatar.com/avatar/6b2c8e6826397b4cb59aa1123a04c8f9?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Ramar</span>           
	                <span class="date">December 15, 2018 at 11:42 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-492409" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-492409">
				
				<p>adrian<br>
 how to downloads the yolomodule file.and how is it open for the windows os system</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-492409" onclick='return addComment.moveForm( "comment-492409", "492409", "respond", "8981" )' aria-label="Reply to Ramar">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-4">
	    
	    	<a name="comment-492830"></a>
	      	
	      	<div id="li-comment-492830" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">December 18, 2018 at 9:14 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-492830" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-492830">
				
				<p>You can use the “Downloads” section of the blog post to download the YOLO model. The code will work on Windows.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-492830" onclick='return addComment.moveForm( "comment-492830", "492830", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-491911"></a>
	      	
	      	<div id="li-comment-491911" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/ee1fcbb5cee9cfc7eb3957a0cd7d22fa.jpg" srcset="https://secure.gravatar.com/avatar/ee1fcbb5cee9cfc7eb3957a0cd7d22fa?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Sanjay Swami</span>           
	                <span class="date">December 12, 2018 at 1:25 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-491911" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-491911">
				
				<p>Hello Mr. Adrian Rosebrock </p>
<p>I am very glad that I found your blog and I have started tutorials given by you.<br>
I am using this tutorial in my project. My project is to find the ball 
and track it. So will this program work on “Raspberry Pi” ?</p>
<p>Thank you in advance.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-491911" onclick='return addComment.moveForm( "comment-491911", "491911", "respond", "8981" )' aria-label="Reply to Sanjay Swami">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2 parent">
	    
	    	<a name="comment-492058"></a>
	      	
	      	<div id="li-comment-492058" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">December 13, 2018 at 9:01 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-492058" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-492058">
				
				<p>No, the object detector will run far, far too slow on the Raspberry Pi. Is your ball a colored one? If so, follow <a target="blank" href="https://www.pyimagesearch.com/2015/09/14/ball-tracking-with-opencv/">this tutorial</a> on simple color thresholding and you’ll be able to complete your project.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-492058" onclick='return addComment.moveForm( "comment-492058", "492058", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-3">
	    
	    	<a name="comment-492192"></a>
	      	
	      	<div id="li-comment-492192" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/ee1fcbb5cee9cfc7eb3957a0cd7d22fa.jpg" srcset="https://secure.gravatar.com/avatar/ee1fcbb5cee9cfc7eb3957a0cd7d22fa?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Sanjay Swami`</span>           
	                <span class="date">December 14, 2018 at 5:05 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-492192" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-492192">
				
				<p>Thank you for your information.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-492192" onclick='return addComment.moveForm( "comment-492192", "492192", "respond", "8981" )' aria-label="Reply to Sanjay Swami`">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-492715"></a>
	      	
	      	<div id="li-comment-492715" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/58a7536a7b3ecaea0b3b9812a27d8714.jpg" srcset="https://secure.gravatar.com/avatar/58a7536a7b3ecaea0b3b9812a27d8714?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href="http://theguardbox.com/" rel="external nofollow" class="url">Mike</a></span>           
	                <span class="date">December 17, 2018 at 2:23 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-492715" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-492715">
				
				<p>Hi Adriian,</p>
<p>You have mentioned that the Raspberry Pi is too slow for object 
detection…does the newer Pi hardware perform any better? I’ve thought 
about using your tutorial to build a weapon detector using a Pi B+ with 
your pre trained dataset.</p>
<p>Would this be too under powered?</p>
<p>Thank you,</p>
<p>Mike</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-492715" onclick='return addComment.moveForm( "comment-492715", "492715", "respond", "8981" )' aria-label="Reply to Mike">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-492806"></a>
	      	
	      	<div id="li-comment-492806" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">December 18, 2018 at 8:57 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-492806" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-492806">
				
				<p>No, the new hardware is still too underpowered. You should look into using the Movidius NCS.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-492806" onclick='return addComment.moveForm( "comment-492806", "492806", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-492955"></a>
	      	
	      	<div id="li-comment-492955" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/f8f9425c8ab70e4b983811d89090b4f8.jpg" srcset="https://secure.gravatar.com/avatar/f8f9425c8ab70e4b983811d89090b4f8?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Mansoor alam</span>           
	                <span class="date">December 19, 2018 at 11:39 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-492955" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-492955">
				
				<p>Hello sir, hope you will be fine.</p>
<p>sir, when I run this code I always get this error as below.</p>
<p>yolo.py: error: the following arguments are required: -i/–image, -y/–yolo</p>
<p>Sir, could you please tell me that what I am doing wrong and what is the solution to this error?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-492955" onclick='return addComment.moveForm( "comment-492955", "492955", "respond", "8981" )' aria-label="Reply to Mansoor alam">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2 parent">
	    
	    	<a name="comment-492965"></a>
	      	
	      	<div id="li-comment-492965" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">December 19, 2018 at 1:44 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-492965" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-492965">
				
				<p>If you are new to command line arguments, no worries, <a target="blank" href="https://www.pyimagesearch.com/2018/03/12/python-argparse-command-line-arguments/">just make sure you read this tutorial first.</a></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-492965" onclick='return addComment.moveForm( "comment-492965", "492965", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-3">
	    
	    	<a name="comment-493184"></a>
	      	
	      	<div id="li-comment-493184" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/f8f9425c8ab70e4b983811d89090b4f8.jpg" srcset="https://secure.gravatar.com/avatar/f8f9425c8ab70e4b983811d89090b4f8?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Mansoor alam</span>           
	                <span class="date">December 21, 2018 at 12:58 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-493184" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-493184">
				
				<p>thank you sir. it worked 🙂</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-493184" onclick='return addComment.moveForm( "comment-493184", "493184", "respond", "8981" )' aria-label="Reply to Mansoor alam">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-493188"></a>
	      	
	      	<div id="li-comment-493188" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/f8f9425c8ab70e4b983811d89090b4f8.jpg" srcset="https://secure.gravatar.com/avatar/f8f9425c8ab70e4b983811d89090b4f8?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Mansoor alam</span>           
	                <span class="date">December 21, 2018 at 1:11 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-493188" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-493188">
				
				<p>hello, sir hope you will be fine.<br>
sir, I used ur code which is ok and working for images but when I run 
the code for video it works ok and all results displayed like total time
 and frame time etc but at the end, the video does not display in which 
detection occur.<br>
so, what should I do???</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-493188" onclick='return addComment.moveForm( "comment-493188", "493188", "respond", "8981" )' aria-label="Reply to Mansoor alam">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-493869"></a>
	      	
	      	<div id="li-comment-493869" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">December 27, 2018 at 11:00 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-493869" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-493869">
				
				<p>The output of the video is not displayed to your screen, it’s 
instead written to disk as an output video file. Check your output video
 file.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-493869" onclick='return addComment.moveForm( "comment-493869", "493869", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-493512"></a>
	      	
	      	<div id="li-comment-493512" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/c1fb2ba9f3a4f05bf2dc73cd4d77a981.jpg" srcset="https://secure.gravatar.com/avatar/c1fb2ba9f3a4f05bf2dc73cd4d77a981?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">smalldroid</span>           
	                <span class="date">December 25, 2018 at 2:32 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-493512" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-493512">
				
				<p>Hi Mr Adrian, thanks for your great tutorial about YOLO? Are you 
going to make addtional tutorial about how to train YOLOv3 model with 
Cocodataset (using Keras, Pytorch)?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-493512" onclick='return addComment.moveForm( "comment-493512", "493512", "respond", "8981" )' aria-label="Reply to smalldroid">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-493830"></a>
	      	
	      	<div id="li-comment-493830" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">December 27, 2018 at 10:30 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-493830" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-493830">
				
				<p>I actually show you how to train your own custom object detectors inside <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python.</a></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-493830" onclick='return addComment.moveForm( "comment-493830", "493830", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1">
	    
	    	<a name="comment-493529"></a>
	      	
	      	<div id="li-comment-493529" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/60c32b863f249c585b2fd7421b1cc87f.jpg" srcset="https://secure.gravatar.com/avatar/60c32b863f249c585b2fd7421b1cc87f?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Aqsa</span>           
	                <span class="date">December 25, 2018 at 4:28 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-493529" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-493529">
				
				<p>Hi Adrian,</p>
<p>Firstly, amazing tutorial. Great help (y)</p>
<p>I want to run yolo on imagenet dataset. I downloaded weights and 
configuration files for imagenet YOLO from darknet project website. Then
 I plugged them in the code (weightspath, cofigpath, lines 30, 31 
respectively). I also edited line 21 as required.<br>
But it did not work for me. Is there anything additional that I should be doing?</p>
<p>Thank you in advance.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-493529" onclick='return addComment.moveForm( "comment-493529", "493529", "respond", "8981" )' aria-label="Reply to Aqsa">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-493586"></a>
	      	
	      	<div id="li-comment-493586" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/1b98d1d62c2b983f3c481d12fd003251.jpg" srcset="https://secure.gravatar.com/avatar/1b98d1d62c2b983f3c481d12fd003251?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Daniel Spencer</span>           
	                <span class="date">December 25, 2018 at 2:13 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-493586" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-493586">
				
				<p>Hey Adrian! ,<br>
Great work , I just want to ask something real quick. It appears that 
you’ve trained yolo to detect a wide variety of objects which is 
amazing, but it takes somewhat of a long time on my computer to run!. 
The problem is , I’m only interested in detecting cats and dogs in my 
project ( using the coco dataset as well ) , so what would the procedure
 be in order to train a YOLO model similar to the one you did for these 
two specific classes.<br>
Thanks!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-493586" onclick='return addComment.moveForm( "comment-493586", "493586", "respond", "8981" )' aria-label="Reply to Daniel Spencer">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-493820"></a>
	      	
	      	<div id="li-comment-493820" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">December 27, 2018 at 10:23 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-493820" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-493820">
				
				<p>Instead of training your network from scratch I would instead 
recommend performing fine-tuning. I cover how to train your own custom 
object detectors, including fine-tuning them, inside my book, <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python.</a></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-493820" onclick='return addComment.moveForm( "comment-493820", "493820", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-493916"></a>
	      	
	      	<div id="li-comment-493916" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/40a5c8649270d787333616570f47bb4d.jpg" srcset="https://secure.gravatar.com/avatar/40a5c8649270d787333616570f47bb4d?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Shivam</span>           
	                <span class="date">December 27, 2018 at 2:48 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-493916" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-493916">
				
				<p>Hello Sir,<br>
This is a great tutorial. Can you please elaborate more on Real time Object Detection using my own laptop’s webcam?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-493916" onclick='return addComment.moveForm( "comment-493916", "493916", "respond", "8981" )' aria-label="Reply to Shivam">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-494524"></a>
	      	
	      	<div id="li-comment-494524" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 2, 2019 at 9:49 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-494524" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-494524">
				
				<p>Sure, see <a target="blank" href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/">this tutorial.</a></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-494524" onclick='return addComment.moveForm( "comment-494524", "494524", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-495471"></a>
	      	
	      	<div id="li-comment-495471" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/0a38eccebcb4fd11c4014501d7b01a5f.jpg" srcset="https://secure.gravatar.com/avatar/0a38eccebcb4fd11c4014501d7b01a5f?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Sannan</span>           
	                <span class="date">January 10, 2019 at 4:46 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-495471" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-495471">
				
				<p>Hy Adrian it’s good tutorial. I want to detect objects from my webcam(Live Video). So how can i implement this code?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-495471" onclick='return addComment.moveForm( "comment-495471", "495471", "respond", "8981" )' aria-label="Reply to Sannan">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-495922"></a>
	      	
	      	<div id="li-comment-495922" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 11, 2019 at 9:38 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-495922" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-495922">
				
				<p>This method will be too slow to detect methods in real-time on a 
GPU. For real-time object detection on a CPU I would recommend you <a target="blank" href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/">follow this tutorial.</a></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-495922" onclick='return addComment.moveForm( "comment-495922", "495922", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-495820"></a>
	      	
	      	<div id="li-comment-495820" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/806d2a4816420f2a8e415819a08b3fbf.jpg" srcset="https://secure.gravatar.com/avatar/806d2a4816420f2a8e415819a08b3fbf?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">RJ</span>           
	                <span class="date">January 11, 2019 at 2:42 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-495820" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-495820">
				
				<p>Why does this code not display the output video..but only prints 
the result for video????…Can you help me with how can I get the output 
video on screen with bounding boxes..</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-495820" onclick='return addComment.moveForm( "comment-495820", "495820", "respond", "8981" )' aria-label="Reply to RJ">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-495908"></a>
	      	
	      	<div id="li-comment-495908" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 11, 2019 at 9:27 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-495908" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-495908">
				
				<p>This code takes the output detections and writes them to a video file. You can use <code>cv2.imshow</code> to display the results to your screen.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-495908" onclick='return addComment.moveForm( "comment-495908", "495908", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-496008"></a>
	      	
	      	<div id="li-comment-496008" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/e9c6001cf1fe0c0d9a3b1cd248d8f1dd.jpg" srcset="https://secure.gravatar.com/avatar/e9c6001cf1fe0c0d9a3b1cd248d8f1dd?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">OzgurG</span>           
	                <span class="date">January 11, 2019 at 10:44 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-496008" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-496008">
				
				<p>Hi Adrian,<br>
Do you think is there a way to calculate the speed of the vehicles from a
 fixed camera using YOLO or other modern CNN algorithms while doing 
vehicle tracking?<br>
It is like to replace the traditional traffic speed cameras with CNN…</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-496008" onclick='return addComment.moveForm( "comment-496008", "496008", "respond", "8981" )' aria-label="Reply to OzgurG">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-496686"></a>
	      	
	      	<div id="li-comment-496686" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 16, 2019 at 10:18 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-496686" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-496686">
				
				<p>Yes, I will be covering speed calculation in my computing Computer Vision with Raspberry Pi book. Stay tuned!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-496686" onclick='return addComment.moveForm( "comment-496686", "496686", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-497133"></a>
	      	
	      	<div id="li-comment-497133" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/7ed2a83f03c70fb7c3017c2549ae10e2.jpg" srcset="https://secure.gravatar.com/avatar/7ed2a83f03c70fb7c3017c2549ae10e2?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Bruce Dai</span>           
	                <span class="date">January 20, 2019 at 2:31 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-497133" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-497133">
				
				<p>Great post, I never know CV2 has a dnn.py module that is so 
useful. I tried this script on some test images, but it seems that YOLO 
is doing poorly recognizing cars. It mislabeled some of the cars as 
cell-phones in my images. 🙁</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-497133" onclick='return addComment.moveForm( "comment-497133", "497133", "respond", "8981" )' aria-label="Reply to Bruce Dai">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-497441"></a>
	      	
	      	<div id="li-comment-497441" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 22, 2019 at 9:32 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-497441" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-497441">
				
				<p>Hey Bruce — you may want to try a more accurate object detector 
such Single Shot Detectors or Faster R-CNNs. In practice I’ve found that
 both SSDs and Faster R-CNN perform better “in the wild”.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-497441" onclick='return addComment.moveForm( "comment-497441", "497441", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1">
	    
	    	<a name="comment-497711"></a>
	      	
	      	<div id="li-comment-497711" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/ecf582d1f70f449c3932834cac599c5f.jpg" srcset="https://secure.gravatar.com/avatar/ecf582d1f70f449c3932834cac599c5f?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Maning</span>           
	                <span class="date">January 24, 2019 at 9:28 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-497711" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-497711">
				
				<p>Hello! Thanks for the tutorial! I followed it but used a model 
that I trained on yolov3-tiny-obj.cfg instead. However, the results are 
different compared to the results I get when I run the detector using 
the command line. Any idea what could be the cause of it?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-497711" onclick='return addComment.moveForm( "comment-497711", "497711", "respond", "8981" )' aria-label="Reply to Maning">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-498134"></a>
	      	
	      	<div id="li-comment-498134" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/aeb974006014c051221491138fbefc26.jpg" srcset="https://secure.gravatar.com/avatar/aeb974006014c051221491138fbefc26?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">adel</span>           
	                <span class="date">January 27, 2019 at 6:00 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-498134" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-498134">
				
				<p>i use pycharm , anaconda , visual studio and google colab . i need all of them .<br>
in vs and pycharm : where should i address the parametes ?<br>
–image baggage_claim.jpg –yolo yolo-coco</p>
<p>i just can tun the cod in pycharm and i have error in othe enviroment<br>
tnx for your great contents</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-498134" onclick='return addComment.moveForm( "comment-498134", "498134", "respond", "8981" )' aria-label="Reply to adel">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-498357"></a>
	      	
	      	<div id="li-comment-498357" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 29, 2019 at 6:45 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-498357" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-498357">
				
				<p>You’ll need to set the command line arguments via PyCharm. Make sure you read <a target="blank" href="https://www.pyimagesearch.com/2018/03/12/python-argparse-command-line-arguments/">this tutorial</a> which includes an example.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-498357" onclick='return addComment.moveForm( "comment-498357", "498357", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1">
	    
	    	<a name="comment-498543"></a>
	      	
	      	<div id="li-comment-498543" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/348bc40e13f46f1f4e06f7b2de98bfb7.jpg" srcset="https://secure.gravatar.com/avatar/348bc40e13f46f1f4e06f7b2de98bfb7?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Eduardo</span>           
	                <span class="date">January 30, 2019 at 11:07 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-498543" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-498543">
				
				<p>Hi! this was a great tutorial! I was wondering if there could be 
some way to use the same code but with the YOLO9000 .cfg and .names 
file. I have already tryed on my own but the program crashes.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-498543" onclick='return addComment.moveForm( "comment-498543", "498543", "respond", "8981" )' aria-label="Reply to Eduardo">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1">
	    
	    	<a name="comment-498574"></a>
	      	
	      	<div id="li-comment-498574" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/cf714b63de0fa324877c060a1eb158b1.jpg" srcset="https://secure.gravatar.com/avatar/cf714b63de0fa324877c060a1eb158b1?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Shaon</span>           
	                <span class="date">January 30, 2019 at 2:12 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-498574" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-498574">
				
				<p>Is YOLO object detection available with OpenCV.js ?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-498574" onclick='return addComment.moveForm( "comment-498574", "498574", "respond", "8981" )' aria-label="Reply to Shaon">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-498798"></a>
	      	
	      	<div id="li-comment-498798" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/7945ad82610acc9db95ddf8d748f5ae2.jpg" srcset="https://secure.gravatar.com/avatar/7945ad82610acc9db95ddf8d748f5ae2?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Mohammd</span>           
	                <span class="date">January 31, 2019 at 4:33 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-498798" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-498798">
				
				<p>Hi Adrian,<br>
I run that your python script and ./darknet detect …. from original 
website YOLO, but the result of them not same , why ? the result of 
original command website YOLO is very correct.<br>
why ?????</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-498798" onclick='return addComment.moveForm( "comment-498798", "498798", "respond", "8981" )' aria-label="Reply to Mohammd">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2 parent">
	    
	    	<a name="comment-498920"></a>
	      	
	      	<div id="li-comment-498920" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">February 1, 2019 at 6:42 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-498920" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-498920">
				
				<p>Are you sure you’re using the same YOLO model versions? If so, it
 could be a difference in the NMS parameters. I’m not sure what the 
default DarkNet NMS parameters are, you may need to refer to the 
documentation/source code.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-498920" onclick='return addComment.moveForm( "comment-498920", "498920", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-3">
	    
	    	<a name="comment-498993"></a>
	      	
	      	<div id="li-comment-498993" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/0c796ceeda8c85dba081d8190e73af16.jpg" srcset="https://secure.gravatar.com/avatar/0c796ceeda8c85dba081d8190e73af16?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Jean-Michel</span>           
	                <span class="date">February 1, 2019 at 11:45 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-498993" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-498993">
				
				<p>Hello,</p>
<p>I’m comparing the results obtained with (1) yolov3 built from <a href="https://github.com/jaskarannagi19/yolov3" rel="nofollow">https://github.com/jaskarannagi19/yolov3</a> with (2) the results obtained with your code.</p>
<p>I’ve noted that the results are not the same at all (and not only the
 probability). For example, in some cases, the 1st yolov3 detects a car 
while the «&nbsp;dnn&nbsp;» yolov3 detects nothing.</p>
<p>For the 1st case, the command is&nbsp;:<br>
 ./darknet detect cfg/yolov3.cfg yolov3.weights data/test.jpg -i 0 -thresh 0.25</p>
<p>For the 2nd case, the command is&nbsp;:<br>
python yolo.py –image images/test.jpg –yolo yolo-coco –confidence 0.25</p>
<p>It should be noted that the config files (yolov3.cfg) are strictly the same. The weights files (yolov3.weights) too.</p>
<p>Best Regards.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-498993" onclick='return addComment.moveForm( "comment-498993", "498993", "respond", "8981" )' aria-label="Reply to Jean-Michel">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-498868"></a>
	      	
	      	<div id="li-comment-498868" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/fe6db80a6dbde8302ec83f011ca9da2d.jpg" srcset="https://secure.gravatar.com/avatar/fe6db80a6dbde8302ec83f011ca9da2d?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">sidrah</span>           
	                <span class="date">February 1, 2019 at 1:36 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-498868" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-498868">
				
				<p>nonetype attribute error</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-498868" onclick='return addComment.moveForm( "comment-498868", "498868", "respond", "8981" )' aria-label="Reply to sidrah">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-498913"></a>
	      	
	      	<div id="li-comment-498913" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">February 1, 2019 at 6:37 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-498913" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-498913">
				
				<p>Your path to the input image is incorrect and “cv2.imread” is 
returning “None”. Double-check your input image path. You can read more 
about NoneType errors, including how to resolve them, <a target="blank" href="https://www.pyimagesearch.com/2016/12/26/opencv-resolving-nonetype-errors/">here.</a></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-498913" onclick='return addComment.moveForm( "comment-498913", "498913", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-499698"></a>
	      	
	      	<div id="li-comment-499698" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/017a6d6e2d807cd0170d27490b64b6e6.jpg" srcset="https://secure.gravatar.com/avatar/017a6d6e2d807cd0170d27490b64b6e6?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">karan</span>           
	                <span class="date">February 5, 2019 at 7:45 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-499698" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-499698">
				
				<p>Hi Adrian. Detection[0:4] return centerX, centerY, width, height.
 Detection[5:] returns the probability score for each classes. What does
 Detection[4] mean?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-499698" onclick='return addComment.moveForm( "comment-499698", "499698", "respond", "8981" )' aria-label="Reply to karan">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-499715"></a>
	      	
	      	<div id="li-comment-499715" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">February 5, 2019 at 9:12 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-499715" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-499715">
				
				<p>The “detection[4]” would be the height of the bounding box.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-499715" onclick='return addComment.moveForm( "comment-499715", "499715", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1">
	    
	    	<a name="comment-500911"></a>
	      	
	      	<div id="li-comment-500911" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/e8c77b01dd6c711c6c1cac8e46e6dfaf.jpg" srcset="https://secure.gravatar.com/avatar/e8c77b01dd6c711c6c1cac8e46e6dfaf?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">yoming</span>           
	                <span class="date">February 12, 2019 at 2:16 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-500911" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-500911">
				
				<p>how can i use  centroidtracker in yolo-detection，the coordinates are always wrong,i use “simple object tracking” to modify.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-500911" onclick='return addComment.moveForm( "comment-500911", "500911", "respond", "8981" )' aria-label="Reply to yoming">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-501080"></a>
	      	
	      	<div id="li-comment-501080" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/71911c197cc533674cb714b986febc03.jpg" srcset="https://secure.gravatar.com/avatar/71911c197cc533674cb714b986febc03?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Edouard</span>           
	                <span class="date">February 13, 2019 at 8:33 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-501080" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-501080">
				
				<p>Hi Adrian and all,<br>
I am training a Densenet model on X-Ray pictures. I would like to 
localize some indications on these X-Ray pictures. Do you have hints to 
adapt Yolo or any advice ?<br>
Thanks</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-501080" onclick='return addComment.moveForm( "comment-501080", "501080", "respond", "8981" )' aria-label="Reply to Edouard">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-501300"></a>
	      	
	      	<div id="li-comment-501300" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">February 14, 2019 at 12:56 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-501300" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-501300">
				
				<p>That’s much more of a complicated problem but absolutely doable. I would recommend referring to <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python</a> where I suggest how to train your own custom deep learning object detectors and instance segmentation networks.</p>
<p>I would also be very curious to know which dataset you are using. I like medical image datasets 🙂</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-501300" onclick='return addComment.moveForm( "comment-501300", "501300", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-502020"></a>
	      	
	      	<div id="li-comment-502020" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/07a5226c688380af74c03003e71fdec5.jpg" srcset="https://secure.gravatar.com/avatar/07a5226c688380af74c03003e71fdec5?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Manohar Sonwan</span>           
	                <span class="date">February 18, 2019 at 6:10 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-502020" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-502020">
				
				<p>Hi Adrian,<br>
    This tutorial was very helpful.<br>
     I have been working on object collision problem where  I want to 
detect the collision between tennis racket and ball. I have used 
“YOLO.h5” model to detect those two object and I have achieved that 
detection part in my code, but I want to detect the collision and pause 
the video whenever a collision happens.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-502020" onclick='return addComment.moveForm( "comment-502020", "502020", "respond", "8981" )' aria-label="Reply to Manohar Sonwan">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-502518"></a>
	      	
	      	<div id="li-comment-502518" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">February 20, 2019 at 12:31 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-502518" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-502518">
				
				<p>I would recommend you instead perform <a target="blank" href="https://www.pyimagesearch.com/2018/11/19/mask-r-cnn-with-opencv/">instance segmentation with Mask R-CNN.</a>
 You can then check and see if the two masks overlap (use bitwise 
operations for that). If you’re new to image processing make sure you 
read through <a target="blank" href="https://www.pyimagesearch.com/practical-python-opencv/">Practical Python and OpenCV</a> so you can learn the basics first, including bitwise operations.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-502518" onclick='return addComment.moveForm( "comment-502518", "502518", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-503272"></a>
	      	
	      	<div id="li-comment-503272" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/d5130ba100f08e39adacfe48750ed269.jpg" srcset="https://secure.gravatar.com/avatar/d5130ba100f08e39adacfe48750ed269?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Elena</span>           
	                <span class="date">February 25, 2019 at 12:00 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-503272" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-503272">
				
				<p>Hello Adrian,<br>
Thank you for the post.  I have tested this method on my video, but as 
you mentioned this method does not use GPU and it is not real time.<br>
My project is about detecting objects through live and stream camera. I 
should use YOLO V3 for that. I think OpenCV would be useless for my 
project since it does not support GPU.<br>
what frameworks should I use to get this project done?<br>
 Could you please guide me? I am quite desperate.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-503272" onclick='return addComment.moveForm( "comment-503272", "503272", "respond", "8981" )' aria-label="Reply to Elena">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2 parent">
	    
	    	<a name="comment-503733"></a>
	      	
	      	<div id="li-comment-503733" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">February 27, 2019 at 6:00 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-503733" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-503733">
				
				<p>Take a look at “darknet”, the author’s implementation of YOLO. It is capable of running on a GPU.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-503733" onclick='return addComment.moveForm( "comment-503733", "503733", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-3 parent">
	    
	    	<a name="comment-503782"></a>
	      	
	      	<div id="li-comment-503782" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/d5130ba100f08e39adacfe48750ed269.jpg" srcset="https://secure.gravatar.com/avatar/d5130ba100f08e39adacfe48750ed269?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Elena</span>           
	                <span class="date">February 27, 2019 at 8:35 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-503782" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-503782">
				
				<p>Thanks for the reply. I think I did not clearly ask my question.<br>
My question is:<br>
Does “dnn” module of OpenCV support GPU now? How we can run OpenCV on GPU?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-503782" onclick='return addComment.moveForm( "comment-503782", "503782", "respond", "8981" )' aria-label="Reply to Elena">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-4">
	    
	    	<a name="comment-504031"></a>
	      	
	      	<div id="li-comment-504031" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">February 28, 2019 at 1:52 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-504031" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-504031">
				
				<p>It really depends on what type of GPU you are using. The most 
popular types of GPUs are NVIDIA GPUs which OpenCV’s “dnn” module does 
not yet support (hopefully soon though!)</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-504031" onclick='return addComment.moveForm( "comment-504031", "504031", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt depth-3 parent">
	    
	    	<a name="comment-505414"></a>
	      	
	      	<div id="li-comment-505414" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/d5130ba100f08e39adacfe48750ed269.jpg" srcset="https://secure.gravatar.com/avatar/d5130ba100f08e39adacfe48750ed269?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Elena</span>           
	                <span class="date">March 7, 2019 at 9:44 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-505414" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-505414">
				
				<p>I am a bit confused. I run your method, and I am giving 30sec 
video as an input and the output (processed video) is also 30 sec. I 
expected to get a longer video in the output since the code is running 
in CPU. How this is possible that the motions in the video are not 
sluggish and the video is smooth.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-505414" onclick='return addComment.moveForm( "comment-505414", "505414", "respond", "8981" )' aria-label="Reply to Elena">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-4">
	    
	    	<a name="comment-505447"></a>
	      	
	      	<div id="li-comment-505447" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">March 7, 2019 at 4:15 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-505447" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-505447">
				
				<p>The output video doesn’t care how long it takes for a new frame 
to be added to it. We just specify the output video FPS and that is the 
FPS rate that the video plays back at.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-505447" onclick='return addComment.moveForm( "comment-505447", "505447", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1">
	    
	    	<a name="comment-503367"></a>
	      	
	      	<div id="li-comment-503367" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/f53ccdc667f44e691c86ae1b72ab86ff.jpg" srcset="https://secure.gravatar.com/avatar/f53ccdc667f44e691c86ae1b72ab86ff?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Rishabh Kachhwaha</span>           
	                <span class="date">February 25, 2019 at 2:41 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-503367" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-503367">
				
				<p>Hey Adrian,</p>
<p>My yolo_video.py file is running without any error but there is a bug
 the output file is of few a milliseconds, instead of being of full 
lenght as of the original video.</p>
<p>Help needed..</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-503367" onclick='return addComment.moveForm( "comment-503367", "503367", "respond", "8981" )' aria-label="Reply to Rishabh Kachhwaha">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-503642"></a>
	      	
	      	<div id="li-comment-503642" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/ae1288eb05c74189dd8c8f9236ddb6a3.jpg" srcset="https://secure.gravatar.com/avatar/ae1288eb05c74189dd8c8f9236ddb6a3?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Akbar</span>           
	                <span class="date">February 26, 2019 at 11:32 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-503642" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-503642">
				
				<p>how to implement the video stream using flask, so the video stream will play on web? not just using the command line only</p>
<p>thanks</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-503642" onclick='return addComment.moveForm( "comment-503642", "503642", "respond", "8981" )' aria-label="Reply to Akbar">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-503698"></a>
	      	
	      	<div id="li-comment-503698" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">February 27, 2019 at 5:31 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-503698" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-503698">
				
				<p>I’ll be showing how to stream the output of the YOLO object 
detector to the web using Flask in my upcoming Computer Vision + 
Raspberry Pi book, stay tuned!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-503698" onclick='return addComment.moveForm( "comment-503698", "503698", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-503849"></a>
	      	
	      	<div id="li-comment-503849" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/f269faf92e3829974f6ed3874dffc7eb.jpg" srcset="https://secure.gravatar.com/avatar/f269faf92e3829974f6ed3874dffc7eb?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">mhadi</span>           
	                <span class="date">February 27, 2019 at 4:19 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-503849" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-503849">
				
				<p>Hi<br>
could you please explain or reference the YoLo architecture ?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-503849" onclick='return addComment.moveForm( "comment-503849", "503849", "respond", "8981" )' aria-label="Reply to mhadi">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-504024"></a>
	      	
	      	<div id="li-comment-504024" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">February 28, 2019 at 1:44 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-504024" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-504024">
				
				<p>I provide links to the YOLO papers in the guide, you can refer to them for details on the YOLO architecture.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-504024" onclick='return addComment.moveForm( "comment-504024", "504024", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-504091"></a>
	      	
	      	<div id="li-comment-504091" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/6f0af6b1126e6173a9b26816fceeaf5e.jpg" srcset="https://secure.gravatar.com/avatar/6f0af6b1126e6173a9b26816fceeaf5e?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Vasilis</span>           
	                <span class="date">March 1, 2019 at 3:52 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-504091" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-504091">
				
				<p>Hello,</p>
<p>Thank you for this tutorial but unfortunately when I run it in terminal I get this error:</p>
<p> writer.release()<br>
AttributeError: ‘NoneType’ object has no attribute ‘release’</p>
<p>I saw some other people had similar problem on this forum so I went 
to the ‘Nonetype’ tutorial you suggested, but the causes described there
 do not match my issue. </p>
<p>I downloaded the source code so the input file path should not have a problem.<br>
The webcam is accessible via OpenCV because I tried it in other scripts.<br>
‘Not having the proper video codecs installed’? Not sure what this is 
but I successfully ran your face detection tutorial so maybe that is not
 the case either. Any ideas please?</p>
<p>Kind regards</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-504091" onclick='return addComment.moveForm( "comment-504091", "504091", "respond", "8981" )' aria-label="Reply to Vasilis">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-2">
	    
	    	<a name="comment-505780"></a>
	      	
	      	<div id="li-comment-505780" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/d73446feebb880ef50f5b9e3b438abb0.jpg" srcset="https://secure.gravatar.com/avatar/d73446feebb880ef50f5b9e3b438abb0?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Amir</span>           
	                <span class="date">March 9, 2019 at 9:12 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-505780" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-505780">
				
				<p>Hi<br>
this issue appear when the packages of openCV did not install correctly.<br>
therefore, you have to install openCV and all its corresponding packages again and with more accurate.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-505780" onclick='return addComment.moveForm( "comment-505780", "505780", "respond", "8981" )' aria-label="Reply to Amir">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-505011"></a>
	      	
	      	<div id="li-comment-505011" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/9979424d0c00a25f56536ef854f9e529.jpg" srcset="https://secure.gravatar.com/avatar/9979424d0c00a25f56536ef854f9e529?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Khushboo Katariya</span>           
	                <span class="date">March 5, 2019 at 9:45 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-505011" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-505011">
				
				<p>can we applied that code on Live videoes capture at that time by camera.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-505011" onclick='return addComment.moveForm( "comment-505011", "505011", "respond", "8981" )' aria-label="Reply to Khushboo Katariya">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2 parent">
	    
	    	<a name="comment-505014"></a>
	      	
	      	<div id="li-comment-505014" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">March 5, 2019 at 9:51 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-505014" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-505014">
				
				<p>Technically yes, but the FPS is going to be pretty low (in the 
order of 1-5 FPS on a CPU). OpenCV’s “dnn” module doesn’t yet support 
NVIDIA GPUs for the “dnn” module.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-505014" onclick='return addComment.moveForm( "comment-505014", "505014", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-3 parent">
	    
	    	<a name="comment-505781"></a>
	      	
	      	<div id="li-comment-505781" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/d73446feebb880ef50f5b9e3b438abb0.jpg" srcset="https://secure.gravatar.com/avatar/d73446feebb880ef50f5b9e3b438abb0?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Amir</span>           
	                <span class="date">March 9, 2019 at 9:16 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-505781" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-505781">
				
				<p>Hi<br>
can you introduce some tutorials and codes on Live video capture?<br>
also a tutorial for run that code on NVIDIA GPUs?<br>
tnx</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-505781" onclick='return addComment.moveForm( "comment-505781", "505781", "respond", "8981" )' aria-label="Reply to Amir">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-4">
	    
	    	<a name="comment-506572"></a>
	      	
	      	<div id="li-comment-506572" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">March 13, 2019 at 3:55 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-506572" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-506572">
				
				<p>I cover how to perform object detection in real-time, including using NVIDIA GPUs, inside my book, <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python.</a> I would suggest starting there.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-506572" onclick='return addComment.moveForm( "comment-506572", "506572", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-505416"></a>
	      	
	      	<div id="li-comment-505416" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/d5130ba100f08e39adacfe48750ed269.jpg" srcset="https://secure.gravatar.com/avatar/d5130ba100f08e39adacfe48750ed269?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Elena</span>           
	                <span class="date">March 7, 2019 at 9:54 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-505416" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-505416">
				
				<p>Hello Adrian,<br>
I was wondering if you could tell me why the original YOLO3 (from the 
original website) is capable of detection more object than the 
implementation of YOLO3 in Keras and OpenCV with the same weights?</p>
<p>and could you please explain why there is no training in this method that you posted here?</p>
<p>Thanks in advance.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-505416" onclick='return addComment.moveForm( "comment-505416", "505416", "respond", "8981" )' aria-label="Reply to Elena">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-505446"></a>
	      	
	      	<div id="li-comment-505446" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">March 7, 2019 at 4:14 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-505446" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-505446">
				
				<p>1. Do you mean capable of detecting more object classes?</p>
<p>2. The model we are using here is pre-trained. Since it’s pre-trained on the COCO dataset we do not have to train it ourselves.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-505446" onclick='return addComment.moveForm( "comment-505446", "505446", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-505782"></a>
	      	
	      	<div id="li-comment-505782" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/44ef334ca63d92cb168787ebb9936f5c.jpg" srcset="https://secure.gravatar.com/avatar/44ef334ca63d92cb168787ebb9936f5c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">pavan</span>           
	                <span class="date">March 9, 2019 at 9:31 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-505782" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-505782">
				
				<p>This project is very helpful for me<br>
Thanks a lot<br>
Can i have the documentation for this project?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-505782" onclick='return addComment.moveForm( "comment-505782", "505782", "respond", "8981" )' aria-label="Reply to pavan">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-506571"></a>
	      	
	      	<div id="li-comment-506571" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">March 13, 2019 at 3:54 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-506571" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-506571">
				
				<p>I’m not sure what you mean by “documentation”. The entire post and code is documented.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-506571" onclick='return addComment.moveForm( "comment-506571", "506571", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-507464"></a>
	      	
	      	<div id="li-comment-507464" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/2f04c6c10b948bbef1f52d85ea49e1f1.jpg" srcset="https://secure.gravatar.com/avatar/2f04c6c10b948bbef1f52d85ea49e1f1?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">student1</span>           
	                <span class="date">March 18, 2019 at 6:59 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-507464" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-507464">
				
				<p>hi,</p>
<p>nice work , i successfully run it on some different videos.<br>
it’s detetcs very accurate.<br>
one question : it’s possible to yolo_video.py to also counting the vehicules and the pedestrians?</p>
<p>best regards.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-507464" onclick='return addComment.moveForm( "comment-507464", "507464", "respond", "8981" )' aria-label="Reply to student1">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-507821"></a>
	      	
	      	<div id="li-comment-507821" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">March 19, 2019 at 10:00 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#comment-507821" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-507821">
				
				<p>Absolutely. See <a target="blank" href="https://www.pyimagesearch.com/2018/08/13/opencv-people-counter/">this tutorial.</a></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-507821" onclick='return addComment.moveForm( "comment-507821", "507821", "respond", "8981" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
			</ol>
		 	</div>

	<div id="respond" class="comment-respond">
		<h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/#respond" style="display:none;">Click here to cancel reply.</a></small></h3>			<form action="https://www.pyimagesearch.com/wp-comments-post.php" method="post" id="commentform" class="comment-form">
				<p class="comment-form-comment"><label class="hide" for="comment">Comment</label> <textarea tabindex="4" id="comment" name="comment" cols="50" rows="10" maxlength="65525" aria-required="true" required="required"></textarea></p><p class="comment-form-author"><input id="author" name="author" type="text" class="txt" tabindex="1" size="30" aria-required="true"><label for="author">Name <span class="required">(required)</span></label> </p>
<p class="comment-form-email"><input id="email" name="email" type="text" class="txt" tabindex="2" size="30" aria-required="true"><label for="email">Email (will not be published) <span class="required">(required)</span></label> </p>
<p class="comment-form-url"><input id="url" name="url" type="text" class="txt" tabindex="3" size="30"><label for="url">Website</label></p>
<p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Submit Comment"> <input type="hidden" name="comment_post_ID" value="8981" id="comment_post_ID">
<input type="hidden" name="comment_parent" id="comment_parent" value="0">
</p><p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="1d57469636"></p><p style="display: none;"></p>			<input type="hidden" id="ak_js" name="ak_js" value="1553197239576"></form>
			</div><!-- #respond -->
	     
            </section><!-- /#main -->
                
            <aside id="sidebar">
<div id="woo_search-2" class="widget widget_woo_search"><div class="search_main">
    <form method="get" class="searchform" action="https://www.pyimagesearch.com/">
        <input type="text" class="field s" name="s" value="Search..." onfocus="if (this.value == 'Search...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search...';}">
                <button type="submit" class="icon-search submit" name="submit" value="Search"></button>
    </form>    
    <div class="fix"></div>
</div>
</div><div id="text-7" class="widget widget_text"><h3>Resource Guide (it’s totally free).</h3>			<div class="textwidget"><a target="_blank" href="https://app.monstercampaigns.com/c/mdoijtrmex7bpm0rp2hn/" class="manual-optin-trigger" data-optin-slug="mdoijtrmex7bpm0rp2hn"><img title="Get your FREE 17-page Computer Vision and Deep Learning Resource Guide PDF" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/computer_vision_deep_learning_resource_guide_cover.png" style="padding-right: 10px; width: 105px; float: left;"></a>
<p>
Get your <strong>FREE 17 page Computer Vision, OpenCV, and Deep Learning Resource Guide PDF.</strong> Inside you'll find my hand-picked tutorials, books, courses, and libraries to help you master CV and DL.
</p>
<div style="clear: left;"></div>
<center><a target="_blank" href="https://app.monstercampaigns.com/c/mdoijtrmex7bpm0rp2hn/" style="color: rgb(255, 255, 255); text-decoration: none; font-family: Helvetica, Arial, sans-serif; font-weight: bold; font-size: 16px; line-height: 20px; padding: 10px; display: inline-block; max-width: 300px; border-radius: 5px; text-shadow: rgba(0, 0, 0, 0.247059) 0px -1px 1px; box-shadow: rgba(255, 255, 255, 0.498039) 0px 1px 3px inset, rgba(0, 0, 0, 0.498039) 0px 1px 3px; background: #DF4B4B;">Download for Free!</a></center></div>
		</div><div id="text-9" class="widget widget_text"><h3>Deep Learning for Computer Vision with Python Book — OUT NOW!</h3>			<div class="textwidget"><a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/"><img title="Deep Learning with Computer Vision and Python Kickstarter" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/dl_for_cv_cover.png" style="padding-bottom: 5px; width: 250px;" onclick="document.location='https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/'; return false;"></a>
<p>You're interested in deep learning and computer vision, <em>but you don't know how to get started.</em> Let me help. <strong><a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">My new book will teach you all you need to know about deep learning.</a></strong></p>
<p><input type="submit" value="Click here to master deep learning" style="background-color: #DF4B4B;" onclick="document.location='https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/'; return false;"></p></div>
		</div><div id="text-5" class="widget widget_text"><h3>You can detect faces in images &amp; video.</h3>			<div class="textwidget"><a href="https://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-face-detection" title="Practical Python and OpenCV"><img title="Learn how to detect faces in images and video" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/adrian_face_detection_sidebar.png" style="padding-bottom: 5px; width: 300px;" onclick="document.location='https://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-face-detection'; return false;"></a>
<p>
Are you interested in <strong>detecting faces in images &amp; video?</strong> But <strong>tired of Googling for tutorials</strong> that <em>never work?</em> Then let me help! I guarantee that my new book will turn you into a <strong>face detection ninja</strong> by the end of this weekend.
<a href="https://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-face-detection" title="Practical Python and OpenCV" onclick="document.location='https://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-face-detection'; return false;">Click here to give it a shot yourself.</a>
</p>
<p><input type="submit" value="Click here to master face detection" style="background-color: #DF4B4B;" onclick="document.location='https://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-face-detection'; return false;"></p></div>
		</div><div id="text-8" class="widget widget_text"><h3>PyImageSearch Gurus: NOW ENROLLING!</h3>			<div class="textwidget"><div id="pyimg_gurus_carousel_container" style="width: 300px; height: 310px; cursor: pointer;" onclick="document.location='https://www.pyimagesearch.com/pyimagesearch-gurus/?src=sidebar'; return false;">
	<div id="pyimg_gurus_carousel" style="width: 300px; height: 300px; background: rgba(0, 0, 0, 0) url(&quot;https://www.pyimagesearch.com/static/templates/pyimagesearch-gurus/images/gurus_carousel.jpg&quot;) no-repeat scroll 0px -300px; display: block;"></div>
</div>
<p style="margin-bottom: 8px;"><strong>The PyImageSearch Gurus course is <em>now enrolling!</em></strong> Inside the course you'll learn how to perform:</p>
<ul style="margin-bottom: 8px;">
	<li>Automatic License Plate Recognition (ANPR)</li>
	<li>Deep Learning</li>
	<li>Face Recognition</li>
	<li><em>and much more!</em></li>
</ul>
<p><strong>Click the button below to learn more about the course, take a tour, and get 10 (FREE) sample lessons</strong>.</p>
<p><input type="submit" value="Take a tour &amp; get 10 (free) lessons" style="background-color: #DF4B4B;" onclick="document.location='https://www.pyimagesearch.com/pyimagesearch-gurus/?src=sidebar'; return false;"></p></div>
		</div><div id="woo_blogauthorinfo-2" class="widget widget_woo_blogauthorinfo"><h3>Hello! I’m Adrian Rosebrock.</h3><span class="left"><img alt="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=180&amp;d=mm&amp;r=g 2x" class="avatar avatar-90 photo" width="90" height="90"></span>
<p>I'm an entrepreneur and Ph.D who has launched two successful image search engines, <a target="blank" href="http://www.idmypill.com/">ID My Pill</a> and <a target="blank" href="http://www.chicengine.com/">Chic Engine</a>. I'm here to share my tips, tricks, and hacks I've learned along the way.</p>
<div class="fix"></div>
</div><div id="text-4" class="widget widget_text"><h3>Learn computer vision in a single weekend.</h3>			<div class="textwidget"><a href="https://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-single-weekend" title="Practical Python and OpenCV"><img title="Become an OpenCV guru" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/practical_python_and_opencv_2nd_cover.png" style="margin-left: 35px; padding-bottom: 15px; width: 215px;"></a>
<p>Want to learn computer vision &amp; OpenCV? I can teach you in a <strong>single weekend</strong>. I know. It sounds crazy, but it’s no joke. My new book is your <strong>guaranteed, quick-start guide</strong> to becoming an OpenCV Ninja. So why not give it a try? <a href="https://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-single-weekend" title="Practical Python and OpenCV">Click here to become a computer vision ninja.</a></p>
<p><input type="submit" value="Click here to become an OpenCV ninja" style="background-color: #DF4B4B;" onclick="document.location='https://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-single-weekend'; return false;"></p></div>
		</div><div id="text-3" class="widget widget_text"><h3>Subscribe via RSS</h3>			<div class="textwidget"><a target="blank" href="http://feeds.feedburner.com/Pyimagesearch"><img title="PyImageSearch RSS Feed" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/rss-icon.png" style="padding-right: 10px; float: left;"></a>
<p><strong>Never miss a post!</strong> Subscribe to the PyImageSearch RSS Feed and keep up to date with my image search engine tutorials, tips, and tricks</p></div>
		</div>
		<div id="woo_tabs-2" class="widget widget_woo_tabs"> 		<div id="tabs">

            <ul class="wooTabs">
                                <li class="popular"><a href="#tab-pop" class="selected">Popular</a></li>                                                            </ul>

            <div class="clear"></div>

            <div class="boxes box inside">

	            
                                <ul id="tab-pop" class="list" style="display: block;">
                    	<li>
				<a title="Raspbian Stretch: Install OpenCV 3 + Python on your Raspberry Pi" href="https://www.pyimagesearch.com/2017/09/04/raspbian-stretch-install-opencv-3-python-on-your-raspberry-pi/">Raspbian Stretch: Install OpenCV 3 + Python on your Raspberry Pi</a>
		<span class="meta">September 4, 2017</span>
		<div class="fix"></div>
	</li>
		<li>
				<a title="Install guide: Raspberry Pi 3 + Raspbian Jessie + OpenCV 3" href="https://www.pyimagesearch.com/2016/04/18/install-guide-raspberry-pi-3-raspbian-jessie-opencv-3/">Install guide: Raspberry Pi 3 + Raspbian Jessie + OpenCV 3</a>
		<span class="meta">April 18, 2016</span>
		<div class="fix"></div>
	</li>
		<li>
				<a title="Home surveillance and motion detection with the Raspberry Pi, Python, OpenCV, and Dropbox" href="https://www.pyimagesearch.com/2015/06/01/home-surveillance-and-motion-detection-with-the-raspberry-pi-python-and-opencv/">Home surveillance and motion detection with the Raspberry Pi, Python, OpenCV, and Dropbox</a>
		<span class="meta">June 1, 2015</span>
		<div class="fix"></div>
	</li>
		<li>
				<a title="Install OpenCV and Python on your Raspberry Pi 2 and B+" href="https://www.pyimagesearch.com/2015/02/23/install-opencv-and-python-on-your-raspberry-pi-2-and-b/">Install OpenCV and Python on your Raspberry Pi 2 and B+</a>
		<span class="meta">February 23, 2015</span>
		<div class="fix"></div>
	</li>
		<li>
				<a title="Ubuntu 16.04: How to install OpenCV" href="https://www.pyimagesearch.com/2016/10/24/ubuntu-16-04-how-to-install-opencv/">Ubuntu 16.04: How to install OpenCV</a>
		<span class="meta">October 24, 2016</span>
		<div class="fix"></div>
	</li>
		<li>
				<a title="Basic motion detection and tracking with Python and OpenCV" href="https://www.pyimagesearch.com/2015/05/25/basic-motion-detection-and-tracking-with-python-and-opencv/">Basic motion detection and tracking with Python and OpenCV</a>
		<span class="meta">May 25, 2015</span>
		<div class="fix"></div>
	</li>
		<li style="border-bottom: 0px none;">
				<a title="Real-time object detection with deep learning and OpenCV" href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/">Real-time object detection with deep learning and OpenCV</a>
		<span class="meta">September 18, 2017</span>
		<div class="fix"></div>
	</li>
	                </ul>
                                                                
            </div><!-- /.boxes -->

        </div><!-- /wooTabs -->

        </div>         </aside><!-- /#sidebar -->

		</div><!-- /#main-sidebar-container -->         

		
    </div><!-- /#content -->
	
    <!--#footer-widgets-container-->
    <div id="footer-widgets-container">
	</div><!--/#footer_widgets_container_end-->
    <!--#footer_container_start-->
    <div id="footer-container">
	<footer id="footer" class="col-full">

		
		<div id="copyright" class="col-left">
			Find me on <a target="blank" href="https://twitter.com/pyimagesearch" style="font-weight: bold; color: #FFFFFF;">Twitter</a>, <a target="blank" href="https://www.facebook.com/pyimagesearch" style="font-weight: bold; color: #FFFFFF;">Facebook</a>, and <a target="blank" href="http://www.linkedin.com/pub/adrian-rosebrock/2a/873/59b" style="font-weight: bold; color: #FFFFFF;">LinkedIn</a>.<br>
			<p>© 2019 PyImageSearch. All Rights Reserved. </p>		</div>

		<div id="credit" class="col-right">
		</div>

	</footer>

	    </div><!--/#footer_container_end-->

	</div><!-- /#inner-wrapper -->

</div><!-- /#wrapper -->

<div class="fix"></div><!--/.fix-->

<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-46641058-1', 'auto', {'allowLinker': true});
  ga('require', 'linker');
  ga('linker:autoLink', ['dpdcart.com']);
  ga('send', 'pageview');

</script>

<!-- -- Clicky ---->
<script src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/js" type="text/javascript"></script>
<script type="text/javascript">try{ clicky.init(101083980); }catch(e){}</script>

<!-- Drip -->
<script type="text/javascript">
  var _dcq = _dcq || [];
  var _dcs = _dcs || {}; 
  _dcs.account = '4768429';
  
  (function() {
    var dc = document.createElement('script');
    dc.type = 'text/javascript'; dc.async = true; 
    dc.src = '//tag.getdrip.com/4768429.js';
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(dc, s);
  })();
</script>

<script type="text/javascript">
  (function() {
    window._pa = window._pa || {};
    // _pa.orderId = "myOrderId"; // OPTIONAL: attach unique conversion identifier to conversions
    // _pa.revenue = "19.99"; // OPTIONAL: attach dynamic purchase values to conversions
    // _pa.productId = "myProductId"; // OPTIONAL: Include product ID for use with dynamic ads
    var pa = document.createElement('script'); pa.type = 'text/javascript'; pa.async = true;
    pa.src = ('https:' == document.location.protocol ? 'https:' : 'http:') + "//tag.perfectaudience.com/serve/54220efd7ab7f03f7e000043.js";
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(pa, s);

// visited blog tracking
window._pq = window._pq || [];
_pq.push(['track', 'visited blog']);
  })();
</script>

<!-- facebook -->
<script>
  !function(f,b,e,v,n,t,s)
  {if(f.fbq)return;n=f.fbq=function(){n.callMethod?
  n.callMethod.apply(n,arguments):n.queue.push(arguments)};
  if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
  n.queue=[];t=b.createElement(e);t.async=!0;
  t.src=v;s=b.getElementsByTagName(e)[0];
  s.parentNode.insertBefore(t,s)}(window, document,'script',
  'https://connect.facebook.net/en_US/fbevents.js');
  fbq('init', '1465896023527386');
  fbq('track', 'PageView');
</script>
<noscript><img height="1" width="1" style="display:none"
  src="https://www.facebook.com/tr?id=1465896023527386&ev=PageView&noscript=1"
/></noscript>
<!-- facebook -->

<!-- -- scroll to code ---->
<script type="text/javascript">
jQuery(document).ready(function(){
	jQuery("#scroll_to_code").click(function(event){
		event.preventDefault();
		jQuery('html, body').animate({scrollTop: jQuery('#post_downloads').offset().top}, 1000);
	});
});
</script>

<!-- gurus sidebar carousel -->
<script type="text/javascript">
	jQuery(document).ready(function(){
		GURUS_CAROUSEL_IDX = 1;

		window.setInterval(function(){
			jQuery("#pyimg_gurus_carousel").fadeOut(function(){
				GURUS_CAROUSEL_TOP = GURUS_CAROUSEL_IDX * -300;
				jQuery("#pyimg_gurus_carousel").css("background-position", "0px " + GURUS_CAROUSEL_TOP + "px");
				GURUS_CAROUSEL_IDX += 1;

				if (GURUS_CAROUSEL_IDX == 4){
					GURUS_CAROUSEL_IDX = 0;
				}
			}).delay(250).fadeIn();
		}, 5000);
	});
</script>
<!-- Woo Tabs Widget -->
<script type="text/javascript">
jQuery(document).ready(function(){
	// UL = .wooTabs
	// Tab contents = .inside

	var tag_cloud_class = '#tagcloud';

	//Fix for tag clouds - unexpected height before .hide()
	var tag_cloud_height = jQuery( '#tagcloud').height();

	jQuery( '.inside ul li:last-child').css( 'border-bottom','0px' ); // remove last border-bottom from list in tab content
	jQuery( '.wooTabs').each(function(){
		jQuery(this).children( 'li').children( 'a:first').addClass( 'selected' ); // Add .selected class to first tab on load
	});
	jQuery( '.inside > *').hide();
	jQuery( '.inside > *:first-child').show();

	jQuery( '.wooTabs li a').click(function(evt){ // Init Click funtion on Tabs

		var clicked_tab_ref = jQuery(this).attr( 'href' ); // Strore Href value

		jQuery(this).parent().parent().children( 'li').children( 'a').removeClass( 'selected' ); //Remove selected from all tabs
		jQuery(this).addClass( 'selected' );
		jQuery(this).parent().parent().parent().children( '.inside').children( '*').hide();

		jQuery( '.inside ' + clicked_tab_ref).fadeIn(500);

		 evt.preventDefault();

	})
})
</script>
<!-- This site is converting visitors into subscribers and customers with OptinMonster - https://optinmonster.com :: Campaign Title: Post-comment Opt-in --><script type="text/javascript" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/api.js" data-campaign="amffglsaxwjqih0cxwby" data-user="18464" data-env="production"></script><!-- / OptinMonster --><!-- This site is converting visitors into subscribers and customers with OptinMonster - https://optinmonster.com :: Campaign Title: CS: YOLO Object Detection --><script type="text/javascript" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/api.js" data-campaign="ubdhbuoif9qpbqkebe2t" data-user="18464" data-env="production"></script><!-- / OptinMonster --><!-- This site is converting visitors into subscribers and customers with OptinMonster - https://optinmonster.com :: Campaign Title: CS: Template --><script type="text/javascript" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/api.js" data-campaign="tortsem7qkvyuxc4cyfi" data-user="18464" data-env="production"></script><!-- / OptinMonster --><!-- This site is converting visitors into subscribers and customers with OptinMonster - https://optinmonster.com :: Campaign Title: CVDL Resource Guide --><script type="text/javascript" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/api.js" data-campaign="mdoijtrmex7bpm0rp2hn" data-user="18464" data-env="production"></script><!-- / OptinMonster --><div style="position:absolute;overflow:hidden;clip:rect(0 0 0 0);height:1px;width:1px;margin:-1px;padding:0;border:0"><div class="omapi-shortcode-helper">[email]</div><div class="omapi-shortcode-parsed">[email]</div></div>		<script type="text/javascript">var amffglsaxwjqih0cxwby_shortcode = true;var ubdhbuoif9qpbqkebe2t_shortcode = true;var tortsem7qkvyuxc4cyfi_shortcode = true;var mdoijtrmex7bpm0rp2hn_shortcode = true;</script>
		<script type="text/javascript" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/69faf.js"></script>

<script type="text/javascript">
/* <![CDATA[ */
var wpcf7 = {"apiSettings":{"root":"https:\/\/www.pyimagesearch.com\/wp-json\/contact-form-7\/v1","namespace":"contact-form-7\/v1"},"recaptcha":{"messages":{"empty":"Please verify that you are not a robot."}},"cached":"1"};
/* ]]> */
</script>
<script type="text/javascript" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/0fef6.js"></script><script type="text/javascript" async="" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/in.php"></script><div class="drip-tab-container">
  <div id="drip-129969" class="drip-tab bottom right no-image classic">
    <div id="drip-header-129969" class="drip-header drip-hidden">
      <a href="#" id="drip-toggle-129969" class="drip-toggle">
        <h2 id="drip-teaser-129969">Free 17-day crash course on Computer Vision, OpenCV, and Deep Learning</h2>
        <span id="drip-tab-up-129969" class="drip-arrow up">
          <svg width="12px" height="8px" viewBox="1362 659 12 8" version="1.1" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink">
            <polygon id="right_angle" stroke="none" fill="#FFFFFF" fill-rule="evenodd" transform="translate(1368.000000, 662.703125) rotate(-90.000000) translate(-1368.000000, -662.703125) " points="1364.29688 667.296875 1368.89062 662.703125 1364.29688 658.109375 1365.70312 656.703125 1371.70312 662.703125 1365.70312 668.703125"></polygon>
          </svg>
        </span>
        <span id="drip-tab-down-129969" class="drip-arrow down" style="display: none"></span>
      </a>
    </div>

    <div id="drip-content-129969" class="drip-content drip-clearfix" style="height: auto; bottom: 0px;">
      <div id="drip-form-panel-129969" class="drip-panel" style="display: block;">
        <a id="drip-close-129969" class="drip-close">×</a>
        <h3 id="drip-content-header-129969">Free 17-day crash course on Computer Vision, OpenCV, and Deep Learning</h3>
        <div id="drip-scroll-129969" class="drip-scroll">
          <div class="drip-clearfix">
            
            <div class="drip-description"><strong>Interested in computer vision, OpenCV, and deep learning, but don't know where to start?</strong>&nbsp;Let me help. I've created a&nbsp;<em>free</em>,
 17-day crash course that is hand-tailored to give you the best possible
 introduction to computer vision and deep learning. Sound good? Enter 
your email below to get started.</div>
          </div>
          <form id="drip-form-129969">
            <div style="display: none">
              <input type="hidden" name="form_id" value="129969">
            </div>
            <dl class="no-labels">
              
                
                  <dt>Email Address</dt>
                  <dd class="drip-clearfix">
                    
                      <input type="email" name="fields[email]" placeholder="Email Address" class="drip-text-field">
                      <div id="drip-errors-for-email-129969" class="drip-errors"></div>
                    
                  </dd>
                
              
              
              <div style="display: none;" aria-hidden="true">
                <dt for="website">Website</dt>
                <dd>
                  <input type="text" id="website" name="website" placeholder="Website" class="drip-text-field" tabindex="-1" autocomplete="false">
                </dd>
              </div>
            </dl>
            <div class="form-controls">
              <input type="submit" name="submit" value="START MY EMAIL COURSE" id="drip-submit-129969" class="drip-submit-button">
            </div>
          </form>
        </div>
      </div>

      <div id="drip-success-panel-129969" class="drip-success drip-panel drip-clearfix" style="display: none">
        <a id="drip-hide-129969" class="drip-close">×</a>
        <h3>Almost there...</h3>
        <p class="drip-description">To start your free 17-day computer 
vision and deep learning crash course, confirm your email address by 
clicking the link in the email I just sent you.</p>
      </div>

      
    </div>
  </div>
</div>

<script type="text/javascript">
/* <![CDATA[ */
var pyISjsAfterComment = {"function":"window._dcq = window._dcq || [];\r\nwindow._dcq.push([\"track\", \"Submitted a comment\"]);"};
/* ]]> */
</script>
<script type="text/javascript" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/15657.js"></script>

<script type="text/javascript">
/* <![CDATA[ */
var pyISOptinMonster = {"post_title":"YOLO object detection with OpenCV","campaign_id":"tortsem7qkvyuxc4cyfi","form_image":"https:\/\/s3-us-west-2.amazonaws.com\/static.pyimagesearch.com\/optins\/cs_yolo.png","drip_form_submission_url":"https:\/\/www.getdrip.com\/forms\/334349446\/submissions","drip_id":"334349446"};
/* ]]> */
</script>


<script type="text/javascript" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/fbab0.js"></script>

		<script type="text/javascript">var omapi_localized = { ajax: 'https://www.pyimagesearch.com/wp-admin/admin-ajax.php?optin-monster-ajax-route=1', nonce: 'c6720d8f8a', slugs: {"amffglsaxwjqih0cxwby":{"slug":"amffglsaxwjqih0cxwby","mailpoet":false},"ubdhbuoif9qpbqkebe2t":{"slug":"ubdhbuoif9qpbqkebe2t","mailpoet":false},"tortsem7qkvyuxc4cyfi":{"slug":"tortsem7qkvyuxc4cyfi","mailpoet":false},"mdoijtrmex7bpm0rp2hn":{"slug":"mdoijtrmex7bpm0rp2hn","mailpoet":false}} };</script>
		


<div id="om-ubdhbuoif9qpbqkebe2t-holder"></div><div id="om-mdoijtrmex7bpm0rp2hn-holder"></div><div id="om-amffglsaxwjqih0cxwby-holder"></div><div id="om-tortsem7qkvyuxc4cyfi-holder"><style data-styled-components="hkFNZr">
/* sc-component-id: sc-bxivhb */
.sc-bxivhb {} .hkFNZr{position:absolute !important;cursor:pointer;z-index:999;border:none;background-color:rgba(221,221,221,0);padding-top:0px;padding-right:0px;padding-bottom:0px;padding-left:0px;margin-top:24px;margin-right:24px;margin-bottom:24px;margin-left:24px;fill:rgba(255,255,255,0.7);border-radius:100%;box-shadow:0px 0px 0px 0px #33333;} .hkFNZr:hover{border:none;background-color:rgba(255,255,255,0);fill:#ffffff;}</style></div><div id="om-tortsem7qkvyuxc4cyfi" class="Campaign CampaignType--popup" style="position: fixed; z-index: 888888888; top: 0px; right: 0px; bottom: 0px; left: 0px; width: 100%; height: 100%; margin: 0px; padding: 0px; overflow: auto; background: rgba(0, 0, 0, 0.7) none repeat scroll 0% 0%; border: 0px none; border-radius: 0px; float: none; letter-spacing: normal; outline: currentcolor none medium; text-decoration: none; text-indent: 0px; text-shadow: none; text-transform: none; visibility: visible; line-height: 1; font-family: helvetica, arial, san-serif; box-shadow: none; -moz-appearance: none; display: none; opacity: 0;"><div id="om-tortsem7qkvyuxc4cyfi-optin" class="portland Campaign__canvas" style="width: 100%; max-width: 600px; position: absolute; top: 267.5px; display: block; left: 530px; margin-bottom: 0px; transition: top 0.2s ease 0s, left 0.2s ease 0s, margin-bottom 0.2s ease 0s;" role="dialog" aria-live="polite"><div class="Campaign__innerWrapper" style="outline:none;position:relative" tabindex="0"><button class="portland-CloseButton portland-close portland-ClosePosition--top-right sc-bxivhb hkFNZr" title="Close" style="top:-15px;right:-15px;bottom:auto;left:auto" aria-live="polite" tabindex="1"><svg viewBox="0 0 384 512" style="display:block;height:18px;width:18px"><path d="M231.6 256l130.1-130.1c4.7-4.7 4.7-12.3 0-17l-22.6-22.6c-4.7-4.7-12.3-4.7-17 0L192 216.4 61.9 86.3c-4.7-4.7-12.3-4.7-17 0l-22.6 22.6c-4.7 4.7-4.7 12.3 0 17L152.4 256 22.3 386.1c-4.7 4.7-4.7 12.3 0 17l22.6 22.6c4.7 4.7 12.3 4.7 17 0L192 295.6l130.1 130.1c4.7 4.7 12.3 4.7 17 0l22.6-22.6c4.7-4.7 4.7-12.3 0-17L231.6 256z"></path></svg></button><div class="Campaign__alphaLayer" style="background:#f3f3f3;border-top-width:0px;border-right-width:0px;border-bottom-width:0px;border-left-width:0px;border-color:#b1bacb;border-style:none;border-top-left-radius:0px;border-top-right-radius:0px;border-bottom-right-radius:0px;border-bottom-left-radius:0px;box-shadow:0px 0px 0px 0px #ffffff;position:relative"><div class="Campaign__bravoLayer"><div class="Campaign__content" style="width:100%;max-width:600px;position:relative;padding-top:0px;padding-right:0px;padding-left:0px;padding-bottom:0px;background:none"><style type="text/css">html div#om-tortsem7qkvyuxc4cyfi .portland applet,html div#om-tortsem7qkvyuxc4cyfi .portland object,html div#om-tortsem7qkvyuxc4cyfi .portland div,html div#om-tortsem7qkvyuxc4cyfi .portland span,html div#om-tortsem7qkvyuxc4cyfi .portland iframe,html div#om-tortsem7qkvyuxc4cyfi .portland h1,html div#om-tortsem7qkvyuxc4cyfi .portland h2,html div#om-tortsem7qkvyuxc4cyfi .portland h3,html div#om-tortsem7qkvyuxc4cyfi .portland h4,html div#om-tortsem7qkvyuxc4cyfi .portland h5,html div#om-tortsem7qkvyuxc4cyfi .portland h6,html div#om-tortsem7qkvyuxc4cyfi .portland p,html div#om-tortsem7qkvyuxc4cyfi .portland blockquote,html div#om-tortsem7qkvyuxc4cyfi .portland pre,html div#om-tortsem7qkvyuxc4cyfi .portland a,html div#om-tortsem7qkvyuxc4cyfi .portland abbr,html div#om-tortsem7qkvyuxc4cyfi .portland acronym,html div#om-tortsem7qkvyuxc4cyfi .portland address,html div#om-tortsem7qkvyuxc4cyfi .portland big,html div#om-tortsem7qkvyuxc4cyfi .portland cite,html div#om-tortsem7qkvyuxc4cyfi .portland code,html div#om-tortsem7qkvyuxc4cyfi .portland del,html div#om-tortsem7qkvyuxc4cyfi .portland dfn,html div#om-tortsem7qkvyuxc4cyfi .portland em,html div#om-tortsem7qkvyuxc4cyfi .portland img,html div#om-tortsem7qkvyuxc4cyfi .portland ins,html div#om-tortsem7qkvyuxc4cyfi .portland kbd,html div#om-tortsem7qkvyuxc4cyfi .portland q,html div#om-tortsem7qkvyuxc4cyfi .portland s,html div#om-tortsem7qkvyuxc4cyfi .portland samp,html div#om-tortsem7qkvyuxc4cyfi .portland small,html div#om-tortsem7qkvyuxc4cyfi .portland strike,html div#om-tortsem7qkvyuxc4cyfi .portland strong,html div#om-tortsem7qkvyuxc4cyfi .portland sub,html div#om-tortsem7qkvyuxc4cyfi .portland sup,html div#om-tortsem7qkvyuxc4cyfi .portland tt,html div#om-tortsem7qkvyuxc4cyfi .portland var,html div#om-tortsem7qkvyuxc4cyfi .portland b,html div#om-tortsem7qkvyuxc4cyfi .portland u,html div#om-tortsem7qkvyuxc4cyfi .portland center,html div#om-tortsem7qkvyuxc4cyfi .portland dl,html div#om-tortsem7qkvyuxc4cyfi .portland dt,html div#om-tortsem7qkvyuxc4cyfi .portland dd,html div#om-tortsem7qkvyuxc4cyfi .portland ol,html div#om-tortsem7qkvyuxc4cyfi .portland ul,html div#om-tortsem7qkvyuxc4cyfi .portland li,html div#om-tortsem7qkvyuxc4cyfi .portland fieldset,html div#om-tortsem7qkvyuxc4cyfi .portland form,html div#om-tortsem7qkvyuxc4cyfi .portland label,html div#om-tortsem7qkvyuxc4cyfi .portland legend,html div#om-tortsem7qkvyuxc4cyfi .portland table,html div#om-tortsem7qkvyuxc4cyfi .portland caption,html div#om-tortsem7qkvyuxc4cyfi .portland tbody,html div#om-tortsem7qkvyuxc4cyfi .portland tfoot,html div#om-tortsem7qkvyuxc4cyfi .portland thead,html div#om-tortsem7qkvyuxc4cyfi .portland tr,html div#om-tortsem7qkvyuxc4cyfi .portland th,html div#om-tortsem7qkvyuxc4cyfi .portland td,html div#om-tortsem7qkvyuxc4cyfi .portland article,html div#om-tortsem7qkvyuxc4cyfi .portland aside,html div#om-tortsem7qkvyuxc4cyfi .portland canvas,html div#om-tortsem7qkvyuxc4cyfi .portland details,html div#om-tortsem7qkvyuxc4cyfi .portland embed,html div#om-tortsem7qkvyuxc4cyfi .portland figure,html div#om-tortsem7qkvyuxc4cyfi .portland figcaption,html div#om-tortsem7qkvyuxc4cyfi .portland footer,html div#om-tortsem7qkvyuxc4cyfi .portland header,html div#om-tortsem7qkvyuxc4cyfi .portland hgroup,html div#om-tortsem7qkvyuxc4cyfi .portland menu,html div#om-tortsem7qkvyuxc4cyfi .portland nav,html div#om-tortsem7qkvyuxc4cyfi .portland output,html div#om-tortsem7qkvyuxc4cyfi .portland ruby,html div#om-tortsem7qkvyuxc4cyfi .portland section,html div#om-tortsem7qkvyuxc4cyfi .portland summary,html div#om-tortsem7qkvyuxc4cyfi .portland time,html div#om-tortsem7qkvyuxc4cyfi .portland mark,html div#om-tortsem7qkvyuxc4cyfi .portland audio,html div#om-tortsem7qkvyuxc4cyfi .portland video,html div#om-tortsem7qkvyuxc4cyfi .portland i:not(.fa){margin: 0;padding: 0;border: 0;font-size: 100%;font: inherit;vertical-align: baseline;}</style><style type="text/css">
		html div#om-tortsem7qkvyuxc4cyfi .portland *{box-sizing:border-box}
		html div#om-tortsem7qkvyuxc4cyfi .portland .Element__content {min-height: 30px}
		html div#om-tortsem7qkvyuxc4cyfi .portland button {width: auto;}
	
	html div#om-tortsem7qkvyuxc4cyfi .portland-FieldsElement--wrapper input:not([type="submit"]),
	html div#om-tortsem7qkvyuxc4cyfi .portland-FieldsElement--wrapper select,
	html div#om-tortsem7qkvyuxc4cyfi .portland-FieldsElement--wrapper textarea {
		background-color: #fff;
		width: 100%;
		height: auto;
		border: 1px solid;
		padding: 10px 6px;
		overflow: hidden;
		margin: 0;
		vertical-align: middle;
		font-style: normal;
		width: 100%;
		line-height: 1.5
	}

	html div#om-tortsem7qkvyuxc4cyfi .portland-FieldsElement--wrapper textarea {
		height: 60px;
	}

	html div#om-tortsem7qkvyuxc4cyfi .portland-FieldsElement--wrapper textarea,
	html div#om-tortsem7qkvyuxc4cyfi .portland-FieldsElement--wrapper input {
		overflow: hidden;
		-webkit-appearance: none;
	}

	html div#om-tortsem7qkvyuxc4cyfi .portland-FieldsElement--wrapper input[type=submit],
	html div#om-tortsem7qkvyuxc4cyfi .portland-FieldsElement--wrapper button {
		cursor: pointer;
	}



	html div#om-tortsem7qkvyuxc4cyfi .portland-FieldsElement--wrapper input[type=checkbox],
	html div#om-tortsem7qkvyuxc4cyfi .portland-FieldsElement--wrapper input[type=radio] {
		width: auto !important;
		outline: invert none medium;
		padding: 0;
		margin: 0;
		height: auto !important;
		box-shadow: none;
		-webkit-box-shadow: none;
		-moz-box-shadow: none;
		display: inline;
	}

	html div#om-tortsem7qkvyuxc4cyfi .portland-FieldsElement--wrapper input[type=checkbox] {
		-webkit-appearance: checkbox;
	}

	html div#om-tortsem7qkvyuxc4cyfi .portland-FieldsElement--wrapper input[type=radio] {
		-webkit-appearance: radio;
	}
	html div#om-tortsem7qkvyuxc4cyfi .portland-FieldsElement--wrapper.FieldsElement--vertical input {

	}
	html div#om-tortsem7qkvyuxc4cyfi .portland-FieldsElement--wrapper.FieldsElement--horizontal input,
	html div#om-tortsem7qkvyuxc4cyfi .portland-FieldsElement--wrapper.FieldsElement--horizontal button {

	}
	html div#om-tortsem7qkvyuxc4cyfi .portland-FieldsElement--wrapper.FieldsElement--horizontal .FieldsElement--privacyText {

	}
	html div#om-tortsem7qkvyuxc4cyfi .portland-FieldsElement--wrapper strong {
		font-weight: bolder;
	}
	html div#om-tortsem7qkvyuxc4cyfi .portland-FieldsElement--wrapper em {
		font-style: italic;
	}
	html div#om-tortsem7qkvyuxc4cyfi .portland-FieldsElement--wrapper ul {
		list-style-type: disc;
		margin: 1em 0 1em 1.5em;
	}
	html div#om-tortsem7qkvyuxc4cyfi .portland-FieldsElement--wrapper ol {
		list-style: decimal;
		margin: 1em 0 1em 1.5em;
	}

	html div#om-tortsem7qkvyuxc4cyfi .portland-FieldsElement--wrapper sup {
	top: -0.5em;
	}

	html div#om-tortsem7qkvyuxc4cyfi .portland-FieldsElement--wrapper sub {
	bottom: -0.5em;
	}

	html div#om-tortsem7qkvyuxc4cyfi .portland-FieldsElement--wrapper sub,
	html div#om-tortsem7qkvyuxc4cyfi .portland-FieldsElement--wrapper sup {
		font-size: 75%;
		line-height: 0;
		position: relative;
		vertical-align: baseline;
	}

	html div#om-tortsem7qkvyuxc4cyfi .portland-FieldsElement--wrapper p {
		margin: 0 0 5px;
		font-weight: inherit !important;
		line-height: inherit !important;
		letter-spacing: inherit !important;
		text-transform: inherit !important;
	}
	html div#om-tortsem7qkvyuxc4cyfi .portland-FieldsElement--wrapper p:first-of-type {
		margin-top: 0;
	}
	html div#om-tortsem7qkvyuxc4cyfi .portland-FieldsElement--wrapper p:last-of-type {
		margin-bottom: 0;
	}
	
	html div#om-tortsem7qkvyuxc4cyfi .portland-TextElement--content strong {
		font-weight: bolder;
	}
	html div#om-tortsem7qkvyuxc4cyfi .portland-TextElement--content em {
		font-style: italic;
	}
	html div#om-tortsem7qkvyuxc4cyfi .portland-TextElement--content ul {
		list-style-type: disc;
		margin: 1em 0 1em 1.5em;
	}
	html div#om-tortsem7qkvyuxc4cyfi .portland-TextElement--content ol {
		list-style: decimal;
		margin: 1em 0 1em 1.5em;
	}

	html div#om-tortsem7qkvyuxc4cyfi .portland-TextElement--content sup {
		top: -0.5em;
	}

	html div#om-tortsem7qkvyuxc4cyfi .portland-TextElement--content sub {
		bottom: -0.5em;
	}

	html div#om-tortsem7qkvyuxc4cyfi .portland-TextElement--content sub,
	html div#om-tortsem7qkvyuxc4cyfi .portland-TextElement--content sup {
		font-size: 75%;
		line-height: 0;
		position: relative;
		vertical-align: baseline;
	}

	html div#om-tortsem7qkvyuxc4cyfi .portland-TextElement--content p {
		margin: 0 0 5px;
		font-weight: inherit !important;
		line-height: inherit !important;
		letter-spacing: inherit !important;
		text-transform: inherit !important;
	}
	html div#om-tortsem7qkvyuxc4cyfi .portland-TextElement--content p:first-of-type {
		margin-top: 0;
	}
	html div#om-tortsem7qkvyuxc4cyfi .portland-TextElement--content p:last-of-type {
		margin-bottom: 0;
	}

	

	html div#om-tortsem7qkvyuxc4cyfi.MagicMediaQuery-tablet .Row .Row__content {
		flex-direction: column;
	}
	html div#om-tortsem7qkvyuxc4cyfi.MagicMediaQuery-tablet .Row .Row__content .Column {
		width: 100% !important;
	}

	@media screen and (min-width: 1px) and (max-width: 720px) {

		html div#om-tortsem7qkvyuxc4cyfi .portland-ClosePosition--top-right { right: 0 !important }
		html div#om-tortsem7qkvyuxc4cyfi .portland-ClosePosition--top-left { left: 0 !important }
		html div#om-tortsem7qkvyuxc4cyfi .portland-ClosePosition--bottom-right { right: 0 !important }
		html div#om-tortsem7qkvyuxc4cyfi .portland-ClosePosition--bottom-left { left: 0 !important }

		html div#om-tortsem7qkvyuxc4cyfi .Row .Row__content { flex-direction: column; }
		html div#om-tortsem7qkvyuxc4cyfi .Row .Row__content .Column { width: 100% !important; }

		html div#om-tortsem7qkvyuxc4cyfi .FieldsElement--horizontal input,
		html div#om-tortsem7qkvyuxc4cyfi .FieldsElement--horizontal button {
			width: 100% !important;
		}
	}

	@media screen and (min-width: 1px) and (max-width: 400px) {

		html div#om-tortsem7qkvyuxc4cyfi .CampaignType--slide {
			right: auto !important;
			max-width: 100% !important;
		}
	}
	</style><style type="text/css">html div#om-tortsem7qkvyuxc4cyfi input {
        text-rendering: auto;
        color: initial;
        letter-spacing: normal;
        word-spacing: normal;
        text-transform: none;
        text-indent: 0px;
        text-shadow: none;
        display: inline-block;
        text-align: start;
        margin: 0em;
        font: 400 11px system-ui;
}
html div#om-tortsem7qkvyuxc4cyfi input[type="email"] {
        background-color: #fff;
        width: 100%;
        border: 1px solid;
        padding: 10px 6px;
        overflow: hidden;
        margin: 0;
        vertical-align: middle;
        font-style: normal;
        width: 100%;
        line-height: 1.5;
        color: #85858;
        font-size: 16px;
        font-weight: 400;
        font-family: Helvetica;
        background: rgb(255, 255, 255);
        border-style: solid;
        border-color: rgb(221, 221, 221);
        border-width: 1px;
        border-radius: 0px;
        display: block;
        margin: 0px 0px 10px;
        padding: 12px;
        max-width: 100%;
        width: 100%;
}
html div#om-tortsem7qkvyuxc4cyfi input[type="submit"] {
    align-items: flex-start;
    text-align: center;
    cursor: default;
    color: buttontext;
    background-color: buttonface;
    box-sizing: border-box;
    padding: 2px 6px 3px;
    border-width: 2px;
    border-style: outset;
    border-color: buttonface;
    border-image: initial;
    background: none;
    border: 0;
    color: inherit;
    font: inherit;
    line-height: normal;
    overflow: visible;
    padding: 0;
    -webkit-appearance: button;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    outline: none;
    border-bottom-left-radius: 0px;
    border-bottom-right-radius: 0px;
    border-bottom-width: 0px;
    border-left-width: 0px;
    border-right-width: 0px;
    border-top-left-radius: 0px;
    border-top-right-radius: 0px;
    border-top-width: 0px;
    box-shadow: rgb(255, 255, 255) 0px 0px 0px 0px;
    color: rgb(255, 255, 255);
    font-family: Helvetica;
    font-size: 16px;
    font-weight: 600;
    letter-spacing: 0px;
    line-height: 1;
    margin-bottom: 8px;
    margin-left: 0px;
    margin-right: 0px;
    margin-top: 0px;
    max-width: 100%;
    padding-bottom: 14px;
    padding-left: 12px;
    padding-right: 12px;
    padding-top: 14px;
    text-transform: none;
    width: 100%;
    cursor: pointer;
    display: block;
    background: rgb(131, 193, 31);
    border-color: rgba(0, 0, 0, 0.35);
    border-style: none;
    text-decoration: none;
}
html div#om-tortsem7qkvyuxc4cyfi input[type="submit"]:hover {
    border-bottom-left-radius: 0px;
    border-bottom-right-radius: 0px;
    border-bottom-width: 0px;
    border-left-width: 0px;
    border-right-width: 0px;
    border-top-left-radius: 0px;
    border-top-right-radius: 0px;
    border-top-width: 0px;
    box-shadow: rgb(255, 255, 255) 0px 0px 0px 0px;
    color: rgb(255, 255, 255);
    font-family: Helvetica;
    font-size: 16px;
    font-weight: 600;
    letter-spacing: 0px;
    line-height: 1;
    max-width: 100%;
    margin-bottom: 8px;
    margin-left: 0px;
    margin-right: 0px;
    margin-top: 0px;
    padding-bottom: 14px;
    padding-left: 12px;
    padding-right: 12px;
    padding-top: 14px;
    text-transform: none;
    cursor: pointer;
    display: block;
    background: rgb(12, 118, 203);
    border-color: rgba(0, 0, 0, 0.35);
    border-style: none;
    text-decoration: none;
}</style><div class="Row"><div class="Row__content"><div style="display:flex;width:100%;flex-direction:inherit;background:#009ee8;border-style:solid;border-width:0px;border-color:#000000;border-top-left-radius:0%;border-top-right-radius:0%;border-bottom-right-radius:0%;border-bottom-left-radius:0%;border-top-width:0;border-right-width:0;border-bottom-width:0;border-left-width:0;padding-top:20px;padding-right:20px;padding-bottom:20px;padding-left:20px;margin-top:0;margin-right:0;margin-bottom:0;margin-left:0;box-shadow:0px 0px 0px 0px #ffffff;max-width:100%"><div class="Column" style="display:inline-block;width:100%"><div class="Column__content" style="height:100%"><div style="background:transparent;border-style:solid;border-width:0px;border-color:#000000;border-top-left-radius:0%;border-top-right-radius:0%;border-bottom-right-radius:0%;border-bottom-left-radius:0%;border-top-width:0;border-right-width:0;border-bottom-width:0;border-left-width:0;padding-top:0;padding-right:0;padding-bottom:0;padding-left:0;margin-top:0;margin-right:0;margin-bottom:0;margin-left:0;box-shadow:0px 0px 0px 0px #ffffff;max-width:100%;height:100%"><div class="Element"><div class="Element__content"><div class="portland-TextElement--wrapper d3dMl0PmPt7IWpEEPoNv" style="background-color:transparent;border-style:solid;border-width:0px;border-color:#000000;border-top-left-radius:0%;border-top-right-radius:0%;border-bottom-right-radius:0%;border-bottom-left-radius:0%;padding-top:5px;padding-right:5px;padding-bottom:5px;padding-left:5px;margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;box-shadow:0px 0px 0px 0px #ffffff;width:auto;max-width:100%"><div class="portland-TextElement--content" style="text-align:left;font-family:Montserrat;color:#000000;font-size:16px;font-weight:500;line-height:1;letter-spacing:0;text-transform:none;text-decoration:none"><p style="text-align:center;"><span style="color: rgb(255,255,255);font-size: 26px;font-family: Helvetica;">Download the code to <em>YOLO object detection with OpenCV</em></span></p>
</div></div></div></div></div></div></div></div></div></div><div class="Row"><div class="Row__content"><div style="display:flex;width:100%;flex-direction:inherit;background:transparent;border-style:solid;border-width:0px;border-color:#000000;border-top-left-radius:0%;border-top-right-radius:0%;border-bottom-right-radius:0%;border-bottom-left-radius:0%;border-top-width:0;border-right-width:0;border-bottom-width:0;border-left-width:0;padding-top:20px;padding-right:20px;padding-bottom:0px;padding-left:20px;margin-top:0;margin-right:0;margin-bottom:0;margin-left:0;box-shadow:0px 0px 0px 0px #ffffff;max-width:100%"><div class="Column" style="display:inline-block;width:33.333%"><div class="Column__content" style="height:100%"><div style="background:transparent;border-style:solid;border-width:0px;border-color:#000000;border-top-left-radius:0%;border-top-right-radius:0%;border-bottom-right-radius:0%;border-bottom-left-radius:0%;border-top-width:0;border-right-width:0;border-bottom-width:0;border-left-width:0;padding-top:0;padding-right:0;padding-bottom:0;padding-left:0;margin-top:0;margin-right:0;margin-bottom:0;margin-left:0;box-shadow:0px 0px 0px 0px #ffffff;max-width:100%;height:100%"><div class="Element"><div class="Element__content"><div class="portland-ImageElement--wrapper yitYdSTvJ5kvvi3NB1he" style="background:transparent;border-style:solid;border-width:0px;border-color:#000000;border-top-left-radius:0%;border-top-right-radius:0%;border-bottom-right-radius:0%;border-bottom-left-radius:0%;border-top-width:0;border-right-width:0;border-bottom-width:0;border-left-width:0;padding-top:0px;padding-right:0px;padding-bottom:0px;padding-left:0px;margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;box-shadow:0px 0px 0px 0px #ffffff;width:auto;max-width:100%;position:relative;overflow:visible;text-align:center;font-size:0"><div class="portland-ImageElement--content"><img style="max-width:100%;display:inline;border-style:solid;border-color:#ffffff;border-top-left-radius:0px;border-top-right-radius:0px;border-bottom-right-radius:0px;border-bottom-left-radius:0px;border-top-width:0px;border-right-width:0px;border-bottom-width:0px;border-left-width:0px;box-shadow:0px 0px 0px 0px #ffffff;opacity:1;width:75%" src="YOLO%20object%20detection%20with%20OpenCV%20-%20PyImageSearch_fichiers/cs_yolo.png" alt=""></div></div></div></div></div></div></div><div class="Column" style="display:inline-block;width:66.666%"><div class="Column__content" style="height:100%"><div style="background:transparent;border-style:solid;border-width:0px;border-color:#000000;border-top-left-radius:0%;border-top-right-radius:0%;border-bottom-right-radius:0%;border-bottom-left-radius:0%;border-top-width:0;border-right-width:0;border-bottom-width:0;border-left-width:0;padding-top:0;padding-right:0;padding-bottom:0;padding-left:0;margin-top:0;margin-right:0;margin-bottom:0;margin-left:0;box-shadow:0px 0px 0px 0px #ffffff;max-width:100%;height:100%"><div class="Element"><div class="Element__content"><div class="portland-TextElement--wrapper JjWP6zagiRzjdZlzFBnE" style="background-color:transparent;border-style:solid;border-width:0px;border-color:#000000;border-top-left-radius:0%;border-top-right-radius:0%;border-bottom-right-radius:0%;border-bottom-left-radius:0%;padding-top:20px;padding-right:10px;padding-bottom:0px;padding-left:15px;margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;box-shadow:0px 0px 0px 0px #ffffff;width:auto;max-width:100%"><div class="portland-TextElement--content" style="text-align:left;font-family:Montserrat;color:#000000;font-size:16px;font-weight:500;line-height:1.3;letter-spacing:0;text-transform:none;text-decoration:none"><p><span style="color: #555555;font-size: 18px;font-family: Helvetica;">To download the source code to this post, just enter your email address in the form below. <strong>I'll then immediately send you an email with a link to download the code.</strong></span><span style="color: #555555;"> </span></p>
</div></div></div></div></div></div></div></div></div></div><div class="Row"><div class="Row__content"><div style="display:flex;width:100%;flex-direction:inherit;align-items:flex-start;background:transparent;border-style:solid;border-width:0px;border-color:#000000;border-top-left-radius:0%;border-top-right-radius:0%;border-bottom-right-radius:0%;border-bottom-left-radius:0%;border-top-width:0;border-right-width:0;border-bottom-width:0;border-left-width:0;padding-top:0;padding-right:0;padding-bottom:0;padding-left:0;margin-top:0;margin-right:0;margin-bottom:0;margin-left:0;box-shadow:0px 0px 0px 0px #ffffff;max-width:100%"><div class="Column" style="display:inline-block;width:100%"><div class="Column__content" style="height:100%"><div style="align-items:flex-start;background:transparent;border-style:solid;border-width:0px;border-color:#000000;border-top-left-radius:0%;border-top-right-radius:0%;border-bottom-right-radius:0%;border-bottom-left-radius:0%;border-top-width:0;border-right-width:0;border-bottom-width:0;border-left-width:0;padding-top:0;padding-right:0;padding-bottom:0;padding-left:0;margin-top:0;margin-right:0;margin-bottom:0;margin-left:0;box-shadow:0px 0px 0px 0px #ffffff;max-width:100%;height:100%"><div class="Element"><div class="Element__content"><div class="portland-HtmlElement--wrapper jn961ds0" style="background:transparent;border-style:solid;border-width:0px;border-color:#000000;border-top-left-radius:0%;border-top-right-radius:0%;border-bottom-right-radius:0%;border-bottom-left-radius:0%;border-top-width:0;border-right-width:0;border-bottom-width:0;border-left-width:0;padding-top:5px;padding-right:5px;padding-bottom:5px;padding-left:5px;margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;box-shadow:0px 0px 0px 0px #ffffff;width:auto;max-width:100%;position:relative"><div class="portland-HtmlElement--content"><div class="html"><form id="cs_drip_form" target="_blank" action="https://www.getdrip.com/forms/334349446/submissions" method="post" data-drip-embedded-form="334349446" style="padding: 20px;">
    <div>
        <input type="email" id="drip-email" name="fields[email]" placeholder="Enter your email address here..." aria-live="polite" tabindex="2">
    </div>
  <div>
    <input type="submit" value="DOWNLOAD THE CODE" data-drip-attribute="sign-up-button" aria-live="polite" tabindex="3">
  </div>
</form></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></body></html>
<!--
Performance optimized by W3 Total Cache. Learn more: https://www.w3-edge.com/products/

Object Caching 28073/4756 objects using disk
Page Caching using disk: enhanced 
Minified using disk
Database Caching 19/46 queries in 0.145 seconds using disk

Served from: www.pyimagesearch.com @ 2019-03-21 15:28:19 by W3 Total Cache
-->