<!DOCTYPE html>
<html prefix="og: http://ogp.me/ns#" style="" class="js csstransforms3d csstransitions whatinput-types-initial wf-lato-n8-active wf-lato-n5-active wf-lato-n4-active wf-lato-n7-active wf-active wf-opensans-n4-active wf-opensans-n7-active wf-opensans-n5-active wf-breeserif-n4-active whatinput-types-mouse" data-whatinput="mouse" data-whatintent="mouse" lang="en-US"><head><link rel="stylesheet" type="text/css" href="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/f10f9.css" media="all">

<meta charset="UTF-8">

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!-- <link rel="stylesheet" type="text/css" href="https://www.pyimagesearch.com/static/css/header_fix.css" media="all"/> -->
<link rel="pingback" href="https://www.pyimagesearch.com/xmlrpc.php">
<link rel="shortcut icon" href="https://www.pyimagesearch.com/wp-content/themes/canvas/favicon.ico">

<!-- Always force latest IE rendering engine (even in intranet) & Chrome Frame -->
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

<!--  Mobile viewport scale -->
<meta content="initial-scale=1.0, maximum-scale=1.0, user-scalable=yes" name="viewport">

<!-- This site is optimized with the Yoast SEO plugin v7.0.3 - https://yoast.com/wordpress/plugins/seo/ -->
<title>Real-time object detection with deep learning and OpenCV - PyImageSearch</title>
<meta name="description" content="In this tutorial I demonstrate how to apply object detection with deep learning and OpenCV + Python to real-time video streams and video files.">
<link rel="canonical" href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/">
<meta property="og:locale" content="en_US">
<meta property="og:type" content="article">
<meta property="og:title" content="Real-time object detection with deep learning and OpenCV - PyImageSearch">
<meta property="og:description" content="In this tutorial I demonstrate how to apply object detection with deep learning and OpenCV + Python to real-time video streams and video files.">
<meta property="og:url" content="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/">
<meta property="og:site_name" content="PyImageSearch">
<meta property="article:tag" content="cnn">
<meta property="article:tag" content="coco">
<meta property="article:tag" content="convolutional neural network">
<meta property="article:tag" content="deep learning">
<meta property="article:tag" content="machine learning">
<meta property="article:tag" content="opencv 3">
<meta property="article:tag" content="pascal voc">
<meta property="article:tag" content="real-time">
<meta property="article:tag" content="video">
<meta property="article:tag" content="video stream">
<meta property="article:section" content="Deep Learning">
<meta property="article:published_time" content="2017-09-18T10:00:46-04:00">
<meta property="article:modified_time" content="2019-02-05T12:21:51-04:00">
<meta property="og:updated_time" content="2019-02-05T12:21:51-04:00">
<meta property="og:image" content="https://www.pyimagesearch.com/wp-content/uploads/2017/09/real_time_object_detection_animation.gif">
<meta property="og:image:secure_url" content="https://www.pyimagesearch.com/wp-content/uploads/2017/09/real_time_object_detection_animation.gif">
<!-- / Yoast SEO plugin. -->

<link rel="dns-prefetch" href="https://a.optmnstr.com/">
<link rel="dns-prefetch" href="https://s.w.org/">
<link rel="alternate" type="application/rss+xml" title="PyImageSearch » Feed" href="http://feeds.feedburner.com/Pyimagesearch">
<link rel="alternate" type="application/rss+xml" title="PyImageSearch » Comments Feed" href="https://www.pyimagesearch.com/comments/feed/">
<link rel="alternate" type="application/rss+xml" title="PyImageSearch » Real-time object detection with deep learning and OpenCV Comments Feed" href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/feed/">
		<div class="fit-vids-style">­<style>               .fluid-width-video-wrapper {                 width: 100%;                              position: relative;                       padding: 0;                            }                                                                                   .fluid-width-video-wrapper iframe,        .fluid-width-video-wrapper object,        .fluid-width-video-wrapper embed {           position: absolute;                       top: 0;                                   left: 0;                                  width: 100%;                              height: 100%;                          }                                       </style></div><script src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/916800548463326.js" async=""></script><script src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/1465896023527386.js" async=""></script><script async="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/fbevents.js"></script><script type="text/javascript" async="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/54220efd7ab7f03f7e000043.js"></script><script type="text/javascript" async="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/4768429.js"></script><script async="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/analytics.js"></script><script type="text/javascript" async="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/mixpanel-2-latest.js"></script><script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.4\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.4\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/www.pyimagesearch.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.9.4"}};
			!function(a,b,c){function d(a,b){var c=String.fromCharCode;l.clearRect(0,0,k.width,k.height),l.fillText(c.apply(this,a),0,0);var d=k.toDataURL();l.clearRect(0,0,k.width,k.height),l.fillText(c.apply(this,b),0,0);var e=k.toDataURL();return d===e}function e(a){var b;if(!l||!l.fillText)return!1;switch(l.textBaseline="top",l.font="600 32px Arial",a){case"flag":return!(b=d([55356,56826,55356,56819],[55356,56826,8203,55356,56819]))&&(b=d([55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447],[55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447]),!b);case"emoji":return b=d([55357,56692,8205,9792,65039],[55357,56692,8203,9792,65039]),!b}return!1}function f(a){var c=b.createElement("script");c.src=a,c.defer=c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var g,h,i,j,k=b.createElement("canvas"),l=k.getContext&&k.getContext("2d");for(j=Array("flag","emoji"),c.supports={everything:!0,everythingExceptFlag:!0},i=0;i<j.length;i++)c.supports[j[i]]=e(j[i]),c.supports.everything=c.supports.everything&&c.supports[j[i]],"flag"!==j[i]&&(c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&c.supports[j[i]]);c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&!c.supports.flag,c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.everything||(h=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",h,!1),a.addEventListener("load",h,!1)):(a.attachEvent("onload",h),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),g=c.source||{},g.concatemoji?f(g.concatemoji):g.wpemoji&&g.twemoji&&(f(g.twemoji),f(g.wpemoji)))}(window,document,window._wpemojiSettings);
		</script><script src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/wp-emoji-release.js" type="text/javascript" defer="defer"></script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>









<!--[if lt IE 9]>
<link href="https://www.pyimagesearch.com/wp-content/themes/canvas/css/non-responsive.css" rel="stylesheet" type="text/css" />
<style type="text/css">.col-full, #wrapper { width: 960px; max-width: 960px; } #inner-wrapper { padding: 0; } body.full-width #header, #nav-container, body.full-width #content, body.full-width #footer-widgets, body.full-width #footer { padding-left: 0; padding-right: 0; } body.fixed-mobile #top, body.fixed-mobile #header-container, body.fixed-mobile #footer-container, body.fixed-mobile #nav-container, body.fixed-mobile #footer-widgets-container { min-width: 960px; padding: 0 1em; } body.full-width #content { width: auto; padding: 0 1em;}</style>
<![endif]-->
<script type="text/javascript" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/df983.js"></script>


<script type="text/javascript">
/* <![CDATA[ */
var CrayonSyntaxSettings = {"version":"_2.7.2_beta","is_admin":"0","ajaxurl":"https:\/\/www.pyimagesearch.com\/wp-admin\/admin-ajax.php","prefix":"crayon-","setting":"crayon-setting","selected":"crayon-setting-selected","changed":"crayon-setting-changed","special":"crayon-setting-special","orig_value":"data-orig-value","debug":""};
var CrayonSyntaxStrings = {"copy":"Press %s to Copy, %s to Paste","minimize":"Click To Expand Code"};
/* ]]> */
</script>
<script type="text/javascript" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/49ed6.js"></script>

<script type="text/javascript" data-cfasync="false" id="omapi-script" async="async" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/api.js"></script>
<script type="text/javascript" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/83e7b.js"></script>



<link rel="https://api.w.org/" href="https://www.pyimagesearch.com/wp-json/">
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://www.pyimagesearch.com/xmlrpc.php?rsd">
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://www.pyimagesearch.com/wp-includes/wlwmanifest.xml"> 
<meta name="generator" content="WordPress 4.9.4">
<link rel="shortlink" href="https://www.pyimagesearch.com/?p=6092">
<link rel="alternate" type="application/json+oembed" href="https://www.pyimagesearch.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.pyimagesearch.com%2F2017%2F09%2F18%2Freal-time-object-detection-with-deep-learning-and-opencv%2F">
<link rel="alternate" type="text/xml+oembed" href="https://www.pyimagesearch.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.pyimagesearch.com%2F2017%2F09%2F18%2Freal-time-object-detection-with-deep-learning-and-opencv%2F&amp;format=xml">

<!-- Theme version -->
<meta name="generator" content="Canvas 5.5.7">
<meta name="generator" content="WooFramework 5.5.5">

<!-- Custom CSS Styling -->
<style type="text/css">
#logo .site-title, #logo .site-description { display:none; }
body {background-repeat:no-repeat;background-position:top left;background-attachment:scroll;border-top:0px solid #000000;}
#header {background-color:#ffffff;background-repeat:no-repeat;background-position:left top;margin-top:0px;margin-bottom:0px;padding-top:15px;padding-bottom:20px;border:0px solid ;}
#logo .site-title a {font:bold 32px/1em "Helvetica Neue", Helvetica, sans-serif;color:#222222;}
#logo .site-description {font:300 13px/1em "Helvetica Neue", Helvetica, sans-serif;color:#999999;}
#header-container{background-color:#ffffff;}#nav-container{background:#169fe6;}#nav-container{border-top:0px solid #dbdbdb;border-bottom:0px solid #dbdbdb;border-left:none;border-right:none;}#nav-container #navigation ul#main-nav > li:first-child{border-left: 0px solid #dbdbdb;}#footer-widgets-container{background-color:#f0f0f0}#footer-widgets{border:none;}#footer-container{background-color:#169fe6}#footer-container{border-top:0px solid #dbdbdb;}#footer {border-width: 0 !important;}
body, p { font:300 14px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#555555; }
h1 { font:bold 28px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }h2 { font:bold 24px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }h3 { font:bold 20px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }h4 { font:bold 16px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }h5 { font:bold 14px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }h6 { font:bold 12px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }
.page-title, .post .title, .page .title {font:bold 2.2em/1.1em Arial, sans-serif;color:#3E3E3E;}
.post .title a:link, .post .title a:visited, .page .title a:link, .page .title a:visited {color:#3E3E3E}
.post-meta { font:300 1em/1.5em Arial, sans-serif;color:#3E3E3E; }
.entry, .entry p{ font:300 15px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#555555; }
.post-more {font:300 13px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:;border-top:0px solid #e6e6e6;border-bottom:0px solid #e6e6e6;}
#post-author, #connect {border-top:1px solid #e6e6e6;border-bottom:1px solid #e6e6e6;border-left:1px solid #e6e6e6;border-right:1px solid #e6e6e6;border-radius:5px;-moz-border-radius:5px;-webkit-border-radius:5px;background-color:#fafafa}
.nav-entries a, .woo-pagination { font:300 13px/1em "Helvetica Neue", Helvetica, sans-serif;color:#888; }
.woo-pagination a, .woo-pagination a:hover {color:#888!important}
.widget h3 {font:bold 14px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#555555;border-bottom:1px solid #e6e6e6;}
.widget_recent_comments li, #twitter li { border-color: #e6e6e6;}
.widget p, .widget .textwidget { font:300 13px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#555555; }
.widget {font:300 13px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#555555;border-radius:0px;-moz-border-radius:0px;-webkit-border-radius:0px;}
#tabs .inside li a, .widget_woodojo_tabs .tabbable .tab-pane li a { font:bold 12px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#555555; }
#tabs .inside li span.meta, .widget_woodojo_tabs .tabbable .tab-pane li span.meta { font:300 11px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#999999; }
#tabs ul.wooTabs li a, .widget_woodojo_tabs .tabbable .nav-tabs li a { font:300 11px/2em "Helvetica Neue", Helvetica, sans-serif;color:#999999; }
@media only screen and (min-width:768px) {
ul.nav li a, #navigation ul.rss a, #navigation .cart-contents, #navigation ul.rss, #navigation ul.cart .cart_list a{ font:300 13px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#ffffff; } #navigation ul.rss li a:before { color:#ffffff;}
#navigation ul.nav > li a:hover, #navigation ul.nav > li:hover a, #navigation ul.nav li ul li a, #navigation ul.cart > li:hover > a, #navigation ul.cart > li > ul > div, #navigation ul.cart > li > ul > div p, #navigation ul.cart > li > ul span, #navigation ul.cart .cart_list a, #navigation ul.nav li.current_page_item a, #navigation ul.nav li.current_page_parent a, #navigation ul.nav li.current-menu-ancestor a, #navigation ul.nav li.current-cat a, #navigation ul.nav li.current-menu-item a { color:#169fe6!important; }
#navigation ul.nav > li a:hover, #navigation ul.nav > li:hover, #navigation ul.nav li ul, #navigation ul.cart > li:hover, #navigation ul.cart > li > ul > div, #navigation ul.nav li.current_page_item a, #navigation ul.nav li.current_page_parent a, #navigation ul.nav li.current-menu-ancestor a, #navigation ul.nav li.current-cat a, #navigation ul.nav li.current-menu-item a{background-color:#ffffff!important}
#navigation ul.nav li ul, #navigation ul.cart > li > ul > div  { border: 0px solid #dbdbdb; }
#navigation ul.nav > li > ul  { left: 0; }
#navigation ul.nav > li  { border-right: 0px solid #dbdbdb; }#navigation ul.nav > li > ul  { left: 0; }
#navigation  { box-shadow: none; -moz-box-shadow: none; -webkit-box-shadow: none; }#navigation ul li:first-child, #navigation ul li:first-child a { border-radius:0px 0 0 0px; -moz-border-radius:0px 0 0 0px; -webkit-border-radius:0px 0 0 0px; }
#navigation {background:#169fe6;border-top:0px solid #dbdbdb;border-bottom:0px solid #dbdbdb;border-left:0px solid #dbdbdb;border-right:0px solid #dbdbdb;border-radius:0px; -moz-border-radius:0px; -webkit-border-radius:0px;}
#top ul.nav li a { font:300 12px/1.6em "Helvetica Neue", Helvetica, sans-serif;color:#ddd; }
}
#footer, #footer p { font:300 13px/1.4em "Helvetica Neue", Helvetica, sans-serif;color:#ffffff; }
#footer {background-color:#169fe6;border-top:0px solid #dbdbdb;border-bottom:0px solid ;border-left:0px solid ;border-right:0px solid ;border-radius:0px; -moz-border-radius:0px; -webkit-border-radius:0px;}
.magazine #loopedSlider .content h2.title a { font:bold 24px/1em Arial, sans-serif;color:#ffffff; }
.magazine #loopedSlider .content .excerpt p { font:300 13px/1.5em Arial, sans-serif;color:#cccccc; }
.magazine .block .post .title, .magazine .block .post .title a { font:bold 18px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }
#loopedSlider.business-slider .content h2 { font:bold 24px/1em Arial, sans-serif;color:#ffffff; }
#loopedSlider.business-slider .content h2.title a { font:bold 24px/1em Arial, sans-serif;color:#ffffff; }
#wrapper #loopedSlider.business-slider .content p { font:300 13px/1.5em Arial, sans-serif;color:#cccccc; }
.archive_header { font:bold 18px/1em Arial, sans-serif;color:#222222; }
.archive_header {border-bottom:1px solid #e6e6e6;}
</style>
<!-- Options Panel Custom CSS -->
<style type="text/css">
/* Subscribe & Connect button style */
#mc-embedded-subscribe{background-color: #DF4B4B;}

/* MailChimp for WP Plugin styles */
.mc4wp-form input[type=submit]{background-color: #DF4B4B;}

/* Hide the header/footer on almost finished pages */
.page-id-365 #header, .page-id-365 #nav-container, .page-id-365 #footer-container{display: none;}
.page-id-4031 #header, .page-id-4031 #nav-container, .page-id-4031 #footer-container{display: none;}
.page-id-365 #content{padding-top: 30px;}
.page-id-4031 #content{padding-top: 30px;}
.page-id-5289 #header, .page-id-5289 #nav-container, .page-id-5289 #footer-container{display: none;}
.page-id-5289 #content{padding-top: 30px;}

/* Hide the header/footer on confirmation pages */
.page-id-1397 #header, .page-id-1397 #nav-container, .page-id-1397 #footer-container{display: none;}
.page-id-1382 #header, .page-id-1382 #nav-container, .page-id-1382 #footer-container{display: none;}
.page-id-1481 #header, .page-id-1481 #nav-container, .page-id-1481 #footer-container{display: none;}
.page-id-3200 #header, .page-id-3200 #nav-container, .page-id-3200 #footer-container{display: none;}
.page-id-4038 #header, .page-id-4038 #nav-container, .page-id-4038 #footer-container{display: none;}
.page-id-5278 #header, .page-id-5278 #nav-container, .page-id-5278 #footer-container{display: none;}
.page-id-8101 #header, .page-id-8101 #nav-container, .page-id-8101 #footer-container{display: none;}
.page-id-1397 #content, .page-id-1382 #content, .page-id-1481 #content, .page-id-4038 #content, .page-id-5278 #content, .page-id-8101 #content{padding-top: 30px;}

/* Manipulate content on 'Let me show you...' page */
.page-id-3200 #content{padding-top: 15px;}
.page-id-3200 #content h1.title{display: none;}
.page-id-3200 #content .entry h1{font-size: 32px;}

/* Add margin to bottom of LaTeX equations, but only when they are not in paragraphs */
section.entry .latex{margin-bottom: 15px;}
section.entry p .latex{margin-bottom: 0px;}

/* Fix list specific issues on the "Start Here" page */
.page-id-4374 #start_here_benefits li{margin-bottom: 15px;}

/* Fix search icon */
button.icon-search.submit{margin-top: -7px;}
</style>


<!-- Woo Shortcodes CSS -->


<!-- Custom Stylesheet -->

<style type="text/css">
/* <![CDATA[ */
img.latex { vertical-align: middle; border: none; }
/* ]]> */
</style>

<!-- start Mixpanel -->
<script type="text/javascript">(function(f,b){if(!b.__SV){var a,e,i,g;window.mixpanel=b;b._i=[];b.init=function(a,e,d){function f(b,h){var a=h.split(".");2==a.length&&(b=b[a[0]],h=a[1]);b[h]=function(){b.push([h].concat(Array.prototype.slice.call(arguments,0)))}}var c=b;"undefined"!==typeof d?c=b[d]=[]:d="mixpanel";c.people=c.people||[];c.toString=function(b){var a="mixpanel";"mixpanel"!==d&&(a+="."+d);b||(a+=" (stub)");return a};c.people.toString=function(){return c.toString(1)+".people (stub)"};i="disable track track_pageview track_links track_forms register register_once alias unregister identify name_tag set_config people.set people.set_once people.increment people.append people.track_charge people.clear_charges people.delete_user".split(" ");
for(g=0;g<i.length;g++)f(c,i[g]);b._i.push([a,e,d])};b.__SV=1.2;a=f.createElement("script");a.type="text/javascript";a.async=!0;a.src="//cdn.mxpnl.com/libs/mixpanel-2-latest.min.js";e=f.getElementsByTagName("script")[0];e.parentNode.insertBefore(a,e)}})(document,window.mixpanel||[]);
mixpanel.init("2486e0f021e92605d44d32fce5f1d826");
</script>
<!-- end Mixpanel -->

<style type="text/css">@-webkit-keyframes bounce{0%,20%,50%,80%,to{-webkit-transform:translateY(0);transform:translateY(0)}40%{-webkit-transform:translateY(-30px);transform:translateY(-30px)}60%{-webkit-transform:translateY(-15px);transform:translateY(-15px)}}@keyframes bounce{0%,20%,50%,80%,to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}40%{-webkit-transform:translateY(-30px);-ms-transform:translateY(-30px);transform:translateY(-30px)}60%{-webkit-transform:translateY(-15px);-ms-transform:translateY(-15px);transform:translateY(-15px)}}.om-animation-bounce{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:bounce;animation-name:bounce}@-webkit-keyframes bounceIn{0%{opacity:0;-webkit-transform:scale(.3);transform:scale(.3)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}70%{-webkit-transform:scale(.9);transform:scale(.9)}to{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes bounceIn{0%{opacity:0;-webkit-transform:scale(.3);-ms-transform:scale(.3);transform:scale(.3)}50%{opacity:1;-webkit-transform:scale(1.05);-ms-transform:scale(1.05);transform:scale(1.05)}70%{-webkit-transform:scale(.9);-ms-transform:scale(.9);transform:scale(.9)}to{opacity:1;-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}.om-animation-bounce-in{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceIn;animation-name:bounceIn}@-webkit-keyframes bounceInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}60%{opacity:1;-webkit-transform:translateY(30px);transform:translateY(30px)}80%{-webkit-transform:translateY(-10px);transform:translateY(-10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes bounceInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);-ms-transform:translateY(-2000px);transform:translateY(-2000px)}60%{opacity:1;-webkit-transform:translateY(30px);-ms-transform:translateY(30px);transform:translateY(30px)}80%{-webkit-transform:translateY(-10px);-ms-transform:translateY(-10px);transform:translateY(-10px)}to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}}.om-animation-bounce-in-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInDown;animation-name:bounceInDown}@-webkit-keyframes bounceInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}60%{opacity:1;-webkit-transform:translateX(30px);transform:translateX(30px)}80%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes bounceInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);-ms-transform:translateX(-2000px);transform:translateX(-2000px)}60%{opacity:1;-webkit-transform:translateX(30px);-ms-transform:translateX(30px);transform:translateX(30px)}80%{-webkit-transform:translateX(-10px);-ms-transform:translateX(-10px);transform:translateX(-10px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-bounce-in-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInLeft;animation-name:bounceInLeft}@-webkit-keyframes bounceInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}60%{opacity:1;-webkit-transform:translateX(-30px);transform:translateX(-30px)}80%{-webkit-transform:translateX(10px);transform:translateX(10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes bounceInRight{0%{opacity:0;-webkit-transform:translateX(2000px);-ms-transform:translateX(2000px);transform:translateX(2000px)}60%{opacity:1;-webkit-transform:translateX(-30px);-ms-transform:translateX(-30px);transform:translateX(-30px)}80%{-webkit-transform:translateX(10px);-ms-transform:translateX(10px);transform:translateX(10px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-bounce-in-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInRight;animation-name:bounceInRight}@-webkit-keyframes bounceInUp{0%{opacity:0;-webkit-transform:translateY(2000px);transform:translateY(2000px)}60%{opacity:1;-webkit-transform:translateY(-30px);transform:translateY(-30px)}80%{-webkit-transform:translateY(10px);transform:translateY(10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes bounceInUp{0%{opacity:0;-webkit-transform:translateY(2000px);-ms-transform:translateY(2000px);transform:translateY(2000px)}60%{opacity:1;-webkit-transform:translateY(-30px);-ms-transform:translateY(-30px);transform:translateY(-30px)}80%{-webkit-transform:translateY(10px);-ms-transform:translateY(10px);transform:translateY(10px)}to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}}.om-animation-bounce-in-up{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInUp;animation-name:bounceInUp}@-webkit-keyframes flash{0%,50%,to{opacity:1}25%,75%{opacity:0}}@keyframes flash{0%,50%,to{opacity:1}25%,75%{opacity:0}}.om-animation-flash{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:flash;animation-name:flash}@-webkit-keyframes flip{0%{-webkit-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}40%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}80%{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}to{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}@keyframes flip{0%{-webkit-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-ms-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}40%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-ms-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-ms-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}80%{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-ms-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}to{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-ms-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}.om-animation-flip{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;-ms-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flip;animation-name:flip}@-webkit-keyframes flipInX{0%{-webkit-transform:perspective(800px) rotateX(90deg);transform:perspective(800px) rotateX(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateX(-10deg);transform:perspective(800px) rotateX(-10deg)}70%{-webkit-transform:perspective(800px) rotateX(10deg);transform:perspective(800px) rotateX(10deg)}to{-webkit-transform:perspective(800px) rotateX(0deg);transform:perspective(800px) rotateX(0deg);opacity:1}}@keyframes flipInX{0%{-webkit-transform:perspective(800px) rotateX(90deg);-ms-transform:perspective(800px) rotateX(90deg);transform:perspective(800px) rotateX(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateX(-10deg);-ms-transform:perspective(800px) rotateX(-10deg);transform:perspective(800px) rotateX(-10deg)}70%{-webkit-transform:perspective(800px) rotateX(10deg);-ms-transform:perspective(800px) rotateX(10deg);transform:perspective(800px) rotateX(10deg)}to{-webkit-transform:perspective(800px) rotateX(0deg);-ms-transform:perspective(800px) rotateX(0deg);transform:perspective(800px) rotateX(0deg);opacity:1}}.om-animation-flip-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;-ms-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flipInX;animation-name:flipInX}@-webkit-keyframes flipInY{0%{-webkit-transform:perspective(800px) rotateY(90deg);transform:perspective(800px) rotateY(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateY(-10deg);transform:perspective(800px) rotateY(-10deg)}70%{-webkit-transform:perspective(800px) rotateY(10deg);transform:perspective(800px) rotateY(10deg)}to{-webkit-transform:perspective(800px) rotateY(0deg);transform:perspective(800px) rotateY(0deg);opacity:1}}@keyframes flipInY{0%{-webkit-transform:perspective(800px) rotateY(90deg);-ms-transform:perspective(800px) rotateY(90deg);transform:perspective(800px) rotateY(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateY(-10deg);-ms-transform:perspective(800px) rotateY(-10deg);transform:perspective(800px) rotateY(-10deg)}70%{-webkit-transform:perspective(800px) rotateY(10deg);-ms-transform:perspective(800px) rotateY(10deg);transform:perspective(800px) rotateY(10deg)}to{-webkit-transform:perspective(800px) rotateY(0deg);-ms-transform:perspective(800px) rotateY(0deg);transform:perspective(800px) rotateY(0deg);opacity:1}}.om-animation-flip-side{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;-ms-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flipInY;animation-name:flipInY}@-webkit-keyframes lightSpeedIn{0%{-webkit-transform:translateX(100%) skewX(-30deg);transform:translateX(100%) skewX(-30deg);opacity:0}60%{-webkit-transform:translateX(-20%) skewX(30deg);transform:translateX(-20%) skewX(30deg);opacity:1}80%{-webkit-transform:translateX(0) skewX(-15deg);transform:translateX(0) skewX(-15deg);opacity:1}to{-webkit-transform:translateX(0) skewX(0deg);transform:translateX(0) skewX(0deg);opacity:1}}@keyframes lightSpeedIn{0%{-webkit-transform:translateX(100%) skewX(-30deg);-ms-transform:translateX(100%) skewX(-30deg);transform:translateX(100%) skewX(-30deg);opacity:0}60%{-webkit-transform:translateX(-20%) skewX(30deg);-ms-transform:translateX(-20%) skewX(30deg);transform:translateX(-20%) skewX(30deg);opacity:1}80%{-webkit-transform:translateX(0) skewX(-15deg);-ms-transform:translateX(0) skewX(-15deg);transform:translateX(0) skewX(-15deg);opacity:1}to{-webkit-transform:translateX(0) skewX(0deg);-ms-transform:translateX(0) skewX(0deg);transform:translateX(0) skewX(0deg);opacity:1}}.om-animation-light-speed{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:lightSpeedIn;animation-name:lightSpeedIn;-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}@-webkit-keyframes pulse{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.1);transform:scale(1.1)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes pulse{0%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1)}to{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}.om-animation-pulse{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:pulse;animation-name:pulse}@-webkit-keyframes rollIn{0%{opacity:0;-webkit-transform:translateX(-100%) rotate(-120deg);transform:translateX(-100%) rotate(-120deg)}to{opacity:1;-webkit-transform:translateX(0) rotate(0deg);transform:translateX(0) rotate(0deg)}}@keyframes rollIn{0%{opacity:0;-webkit-transform:translateX(-100%) rotate(-120deg);-ms-transform:translateX(-100%) rotate(-120deg);transform:translateX(-100%) rotate(-120deg)}to{opacity:1;-webkit-transform:translateX(0) rotate(0deg);-ms-transform:translateX(0) rotate(0deg);transform:translateX(0) rotate(0deg)}}.om-animation-roll-in{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rollIn;animation-name:rollIn}@-webkit-keyframes rotateIn{0%{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(-200deg);transform:rotate(-200deg);opacity:0}to{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateIn{0%{-webkit-transform-origin:center center;-ms-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(-200deg);-ms-transform:rotate(-200deg);transform:rotate(-200deg);opacity:0}to{-webkit-transform-origin:center center;-ms-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateIn;animation-name:rotateIn}@-webkit-keyframes rotateInDownLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInDownLeft{0%{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(-90deg);-ms-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-down-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInDownLeft;animation-name:rotateInDownLeft}@-webkit-keyframes rotateInDownRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInDownRight{0%{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-down-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInDownRight;animation-name:rotateInDownRight}@-webkit-keyframes rotateInUpLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInUpLeft{0%{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-up-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInUpLeft;animation-name:rotateInUpLeft}@-webkit-keyframes rotateInUpRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInUpRight{0%{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(-90deg);-ms-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-up-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInUpRight;animation-name:rotateInUpRight}@-webkit-keyframes rubberBand{0%{-webkit-transform:scale(1);transform:scale(1)}30%{-webkit-transform:scaleX(1.25) scaleY(.75);transform:scaleX(1.25) scaleY(.75)}40%{-webkit-transform:scaleX(.75) scaleY(1.25);transform:scaleX(.75) scaleY(1.25)}60%{-webkit-transform:scaleX(1.15) scaleY(.85);transform:scaleX(1.15) scaleY(.85)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes rubberBand{0%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}30%{-webkit-transform:scaleX(1.25) scaleY(.75);-ms-transform:scaleX(1.25) scaleY(.75);transform:scaleX(1.25) scaleY(.75)}40%{-webkit-transform:scaleX(.75) scaleY(1.25);-ms-transform:scaleX(.75) scaleY(1.25);transform:scaleX(.75) scaleY(1.25)}60%{-webkit-transform:scaleX(1.15) scaleY(.85);-ms-transform:scaleX(1.15) scaleY(.85);transform:scaleX(1.15) scaleY(.85)}to{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}.om-animation-rubber-band{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:rubberBand;animation-name:rubberBand}@-webkit-keyframes shake{0%,to{-webkit-transform:translateX(0);transform:translateX(0)}10%,30%,50%,70%,90%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}20%,40%,60%,80%{-webkit-transform:translateX(10px);transform:translateX(10px)}}@keyframes shake{0%,to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}10%,30%,50%,70%,90%{-webkit-transform:translateX(-10px);-ms-transform:translateX(-10px);transform:translateX(-10px)}20%,40%,60%,80%{-webkit-transform:translateX(10px);-ms-transform:translateX(10px);transform:translateX(10px)}}.om-animation-shake{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:shake;animation-name:shake}@-webkit-keyframes slideInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes slideInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);-ms-transform:translateY(-2000px);transform:translateY(-2000px)}to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}}.om-animation-slide-in-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInDown;animation-name:slideInDown}@-webkit-keyframes slideInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes slideInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);-ms-transform:translateX(-2000px);transform:translateX(-2000px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-slide-in-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInLeft;animation-name:slideInLeft}@-webkit-keyframes slideInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes slideInRight{0%{opacity:0;-webkit-transform:translateX(2000px);-ms-transform:translateX(2000px);transform:translateX(2000px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-slide-in-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInRight;animation-name:slideInRight}@-webkit-keyframes swing{20%{-webkit-transform:rotate(15deg);transform:rotate(15deg)}40%{-webkit-transform:rotate(-10deg);transform:rotate(-10deg)}60%{-webkit-transform:rotate(5deg);transform:rotate(5deg)}80%{-webkit-transform:rotate(-5deg);transform:rotate(-5deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@keyframes swing{20%{-webkit-transform:rotate(15deg);-ms-transform:rotate(15deg);transform:rotate(15deg)}40%{-webkit-transform:rotate(-10deg);-ms-transform:rotate(-10deg);transform:rotate(-10deg)}60%{-webkit-transform:rotate(5deg);-ms-transform:rotate(5deg);transform:rotate(5deg)}80%{-webkit-transform:rotate(-5deg);-ms-transform:rotate(-5deg);transform:rotate(-5deg)}to{-webkit-transform:rotate(0deg);-ms-transform:rotate(0deg);transform:rotate(0deg)}}.om-animation-swing{-webkit-animation-duration:1s;animation-duration:1s;-webkit-transform-origin:top center;-ms-transform-origin:top center;transform-origin:top center;-webkit-animation-name:swing;animation-name:swing}@-webkit-keyframes tada{0%{-webkit-transform:scale(1);transform:scale(1)}10%,20%{-webkit-transform:scale(.9) rotate(-3deg);transform:scale(.9) rotate(-3deg)}30%,50%,70%,90%{-webkit-transform:scale(1.1) rotate(3deg);transform:scale(1.1) rotate(3deg)}40%,60%,80%{-webkit-transform:scale(1.1) rotate(-3deg);transform:scale(1.1) rotate(-3deg)}to{-webkit-transform:scale(1) rotate(0);transform:scale(1) rotate(0)}}@keyframes tada{0%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}10%,20%{-webkit-transform:scale(.9) rotate(-3deg);-ms-transform:scale(.9) rotate(-3deg);transform:scale(.9) rotate(-3deg)}30%,50%,70%,90%{-webkit-transform:scale(1.1) rotate(3deg);-ms-transform:scale(1.1) rotate(3deg);transform:scale(1.1) rotate(3deg)}40%,60%,80%{-webkit-transform:scale(1.1) rotate(-3deg);-ms-transform:scale(1.1) rotate(-3deg);transform:scale(1.1) rotate(-3deg)}to{-webkit-transform:scale(1) rotate(0);-ms-transform:scale(1) rotate(0);transform:scale(1) rotate(0)}}.om-animation-tada{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:tada;animation-name:tada}@-webkit-keyframes wobble{0%{-webkit-transform:translateX(0);transform:translateX(0)}15%{-webkit-transform:translateX(-25%) rotate(-5deg);transform:translateX(-25%) rotate(-5deg)}30%{-webkit-transform:translateX(20%) rotate(3deg);transform:translateX(20%) rotate(3deg)}45%{-webkit-transform:translateX(-15%) rotate(-3deg);transform:translateX(-15%) rotate(-3deg)}60%{-webkit-transform:translateX(10%) rotate(2deg);transform:translateX(10%) rotate(2deg)}75%{-webkit-transform:translateX(-5%) rotate(-1deg);transform:translateX(-5%) rotate(-1deg)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes wobble{0%{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}15%{-webkit-transform:translateX(-25%) rotate(-5deg);-ms-transform:translateX(-25%) rotate(-5deg);transform:translateX(-25%) rotate(-5deg)}30%{-webkit-transform:translateX(20%) rotate(3deg);-ms-transform:translateX(20%) rotate(3deg);transform:translateX(20%) rotate(3deg)}45%{-webkit-transform:translateX(-15%) rotate(-3deg);-ms-transform:translateX(-15%) rotate(-3deg);transform:translateX(-15%) rotate(-3deg)}60%{-webkit-transform:translateX(10%) rotate(2deg);-ms-transform:translateX(10%) rotate(2deg);transform:translateX(10%) rotate(2deg)}75%{-webkit-transform:translateX(-5%) rotate(-1deg);-ms-transform:translateX(-5%) rotate(-1deg);transform:translateX(-5%) rotate(-1deg)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-wobble{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:wobble;animation-name:wobble}.om-content-lock{color:transparent!important;text-shadow:rgba(0,0,0,.5) 0 0 10px;-webkit-user-select:none;-moz-user-select:none;user-select:none;pointer-events:none;filter:url("data:image/svg+xml;utf9,<svg%20version='1.1'%20xmlns='http://www.w3.org/2000/svg'><filter%20id='blur'><feGaussianBlur%20stdDeviation='10'%20/></filter></svg>#blur");-webkit-filter:blur(10px);-ms-filter:blur(10px);-o-filter:blur(10px);filter:blur(10px)}html.om-mobile-position,html.om-mobile-position body{position:fixed!important}html.om-ios-form,html.om-ios-form body{-webkit-transform:translateZ(0)!important;transform:translateZ(0)!important;-webkit-overflow-scrolling:touch!important;height:100%!important;overflow:auto!important}html.om-position-popup body{overflow:hidden!important}html.om-position-floating-top{transition:padding-top .5s ease!important}html.om-position-floating-bottom{transition:padding-bottom .5s ease!important}html.om-reset-dimensions{height:100%!important;width:100%!important}</style><style type="text/css">@-webkit-keyframes bounce{0%,20%,50%,80%,to{-webkit-transform:translateY(0);transform:translateY(0)}40%{-webkit-transform:translateY(-30px);transform:translateY(-30px)}60%{-webkit-transform:translateY(-15px);transform:translateY(-15px)}}@keyframes bounce{0%,20%,50%,80%,to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}40%{-webkit-transform:translateY(-30px);-ms-transform:translateY(-30px);transform:translateY(-30px)}60%{-webkit-transform:translateY(-15px);-ms-transform:translateY(-15px);transform:translateY(-15px)}}.om-animation-bounce{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:bounce;animation-name:bounce}@-webkit-keyframes bounceIn{0%{opacity:0;-webkit-transform:scale(.3);transform:scale(.3)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}70%{-webkit-transform:scale(.9);transform:scale(.9)}to{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes bounceIn{0%{opacity:0;-webkit-transform:scale(.3);-ms-transform:scale(.3);transform:scale(.3)}50%{opacity:1;-webkit-transform:scale(1.05);-ms-transform:scale(1.05);transform:scale(1.05)}70%{-webkit-transform:scale(.9);-ms-transform:scale(.9);transform:scale(.9)}to{opacity:1;-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}.om-animation-bounce-in{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceIn;animation-name:bounceIn}@-webkit-keyframes bounceInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}60%{opacity:1;-webkit-transform:translateY(30px);transform:translateY(30px)}80%{-webkit-transform:translateY(-10px);transform:translateY(-10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes bounceInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);-ms-transform:translateY(-2000px);transform:translateY(-2000px)}60%{opacity:1;-webkit-transform:translateY(30px);-ms-transform:translateY(30px);transform:translateY(30px)}80%{-webkit-transform:translateY(-10px);-ms-transform:translateY(-10px);transform:translateY(-10px)}to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}}.om-animation-bounce-in-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInDown;animation-name:bounceInDown}@-webkit-keyframes bounceInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}60%{opacity:1;-webkit-transform:translateX(30px);transform:translateX(30px)}80%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes bounceInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);-ms-transform:translateX(-2000px);transform:translateX(-2000px)}60%{opacity:1;-webkit-transform:translateX(30px);-ms-transform:translateX(30px);transform:translateX(30px)}80%{-webkit-transform:translateX(-10px);-ms-transform:translateX(-10px);transform:translateX(-10px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-bounce-in-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInLeft;animation-name:bounceInLeft}@-webkit-keyframes bounceInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}60%{opacity:1;-webkit-transform:translateX(-30px);transform:translateX(-30px)}80%{-webkit-transform:translateX(10px);transform:translateX(10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes bounceInRight{0%{opacity:0;-webkit-transform:translateX(2000px);-ms-transform:translateX(2000px);transform:translateX(2000px)}60%{opacity:1;-webkit-transform:translateX(-30px);-ms-transform:translateX(-30px);transform:translateX(-30px)}80%{-webkit-transform:translateX(10px);-ms-transform:translateX(10px);transform:translateX(10px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-bounce-in-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInRight;animation-name:bounceInRight}@-webkit-keyframes bounceInUp{0%{opacity:0;-webkit-transform:translateY(2000px);transform:translateY(2000px)}60%{opacity:1;-webkit-transform:translateY(-30px);transform:translateY(-30px)}80%{-webkit-transform:translateY(10px);transform:translateY(10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes bounceInUp{0%{opacity:0;-webkit-transform:translateY(2000px);-ms-transform:translateY(2000px);transform:translateY(2000px)}60%{opacity:1;-webkit-transform:translateY(-30px);-ms-transform:translateY(-30px);transform:translateY(-30px)}80%{-webkit-transform:translateY(10px);-ms-transform:translateY(10px);transform:translateY(10px)}to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}}.om-animation-bounce-in-up{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInUp;animation-name:bounceInUp}@-webkit-keyframes flash{0%,50%,to{opacity:1}25%,75%{opacity:0}}@keyframes flash{0%,50%,to{opacity:1}25%,75%{opacity:0}}.om-animation-flash{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:flash;animation-name:flash}@-webkit-keyframes flip{0%{-webkit-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}40%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}80%{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}to{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}@keyframes flip{0%{-webkit-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-ms-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}40%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-ms-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-ms-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}80%{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-ms-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}to{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-ms-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}.om-animation-flip{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;-ms-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flip;animation-name:flip}@-webkit-keyframes flipInX{0%{-webkit-transform:perspective(800px) rotateX(90deg);transform:perspective(800px) rotateX(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateX(-10deg);transform:perspective(800px) rotateX(-10deg)}70%{-webkit-transform:perspective(800px) rotateX(10deg);transform:perspective(800px) rotateX(10deg)}to{-webkit-transform:perspective(800px) rotateX(0deg);transform:perspective(800px) rotateX(0deg);opacity:1}}@keyframes flipInX{0%{-webkit-transform:perspective(800px) rotateX(90deg);-ms-transform:perspective(800px) rotateX(90deg);transform:perspective(800px) rotateX(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateX(-10deg);-ms-transform:perspective(800px) rotateX(-10deg);transform:perspective(800px) rotateX(-10deg)}70%{-webkit-transform:perspective(800px) rotateX(10deg);-ms-transform:perspective(800px) rotateX(10deg);transform:perspective(800px) rotateX(10deg)}to{-webkit-transform:perspective(800px) rotateX(0deg);-ms-transform:perspective(800px) rotateX(0deg);transform:perspective(800px) rotateX(0deg);opacity:1}}.om-animation-flip-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;-ms-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flipInX;animation-name:flipInX}@-webkit-keyframes flipInY{0%{-webkit-transform:perspective(800px) rotateY(90deg);transform:perspective(800px) rotateY(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateY(-10deg);transform:perspective(800px) rotateY(-10deg)}70%{-webkit-transform:perspective(800px) rotateY(10deg);transform:perspective(800px) rotateY(10deg)}to{-webkit-transform:perspective(800px) rotateY(0deg);transform:perspective(800px) rotateY(0deg);opacity:1}}@keyframes flipInY{0%{-webkit-transform:perspective(800px) rotateY(90deg);-ms-transform:perspective(800px) rotateY(90deg);transform:perspective(800px) rotateY(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateY(-10deg);-ms-transform:perspective(800px) rotateY(-10deg);transform:perspective(800px) rotateY(-10deg)}70%{-webkit-transform:perspective(800px) rotateY(10deg);-ms-transform:perspective(800px) rotateY(10deg);transform:perspective(800px) rotateY(10deg)}to{-webkit-transform:perspective(800px) rotateY(0deg);-ms-transform:perspective(800px) rotateY(0deg);transform:perspective(800px) rotateY(0deg);opacity:1}}.om-animation-flip-side{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;-ms-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flipInY;animation-name:flipInY}@-webkit-keyframes lightSpeedIn{0%{-webkit-transform:translateX(100%) skewX(-30deg);transform:translateX(100%) skewX(-30deg);opacity:0}60%{-webkit-transform:translateX(-20%) skewX(30deg);transform:translateX(-20%) skewX(30deg);opacity:1}80%{-webkit-transform:translateX(0) skewX(-15deg);transform:translateX(0) skewX(-15deg);opacity:1}to{-webkit-transform:translateX(0) skewX(0deg);transform:translateX(0) skewX(0deg);opacity:1}}@keyframes lightSpeedIn{0%{-webkit-transform:translateX(100%) skewX(-30deg);-ms-transform:translateX(100%) skewX(-30deg);transform:translateX(100%) skewX(-30deg);opacity:0}60%{-webkit-transform:translateX(-20%) skewX(30deg);-ms-transform:translateX(-20%) skewX(30deg);transform:translateX(-20%) skewX(30deg);opacity:1}80%{-webkit-transform:translateX(0) skewX(-15deg);-ms-transform:translateX(0) skewX(-15deg);transform:translateX(0) skewX(-15deg);opacity:1}to{-webkit-transform:translateX(0) skewX(0deg);-ms-transform:translateX(0) skewX(0deg);transform:translateX(0) skewX(0deg);opacity:1}}.om-animation-light-speed{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:lightSpeedIn;animation-name:lightSpeedIn;-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}@-webkit-keyframes pulse{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.1);transform:scale(1.1)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes pulse{0%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1)}to{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}.om-animation-pulse{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:pulse;animation-name:pulse}@-webkit-keyframes rollIn{0%{opacity:0;-webkit-transform:translateX(-100%) rotate(-120deg);transform:translateX(-100%) rotate(-120deg)}to{opacity:1;-webkit-transform:translateX(0) rotate(0deg);transform:translateX(0) rotate(0deg)}}@keyframes rollIn{0%{opacity:0;-webkit-transform:translateX(-100%) rotate(-120deg);-ms-transform:translateX(-100%) rotate(-120deg);transform:translateX(-100%) rotate(-120deg)}to{opacity:1;-webkit-transform:translateX(0) rotate(0deg);-ms-transform:translateX(0) rotate(0deg);transform:translateX(0) rotate(0deg)}}.om-animation-roll-in{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rollIn;animation-name:rollIn}@-webkit-keyframes rotateIn{0%{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(-200deg);transform:rotate(-200deg);opacity:0}to{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateIn{0%{-webkit-transform-origin:center center;-ms-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(-200deg);-ms-transform:rotate(-200deg);transform:rotate(-200deg);opacity:0}to{-webkit-transform-origin:center center;-ms-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateIn;animation-name:rotateIn}@-webkit-keyframes rotateInDownLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInDownLeft{0%{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(-90deg);-ms-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-down-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInDownLeft;animation-name:rotateInDownLeft}@-webkit-keyframes rotateInDownRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInDownRight{0%{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-down-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInDownRight;animation-name:rotateInDownRight}@-webkit-keyframes rotateInUpLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInUpLeft{0%{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-up-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInUpLeft;animation-name:rotateInUpLeft}@-webkit-keyframes rotateInUpRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInUpRight{0%{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(-90deg);-ms-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-up-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInUpRight;animation-name:rotateInUpRight}@-webkit-keyframes rubberBand{0%{-webkit-transform:scale(1);transform:scale(1)}30%{-webkit-transform:scaleX(1.25) scaleY(.75);transform:scaleX(1.25) scaleY(.75)}40%{-webkit-transform:scaleX(.75) scaleY(1.25);transform:scaleX(.75) scaleY(1.25)}60%{-webkit-transform:scaleX(1.15) scaleY(.85);transform:scaleX(1.15) scaleY(.85)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes rubberBand{0%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}30%{-webkit-transform:scaleX(1.25) scaleY(.75);-ms-transform:scaleX(1.25) scaleY(.75);transform:scaleX(1.25) scaleY(.75)}40%{-webkit-transform:scaleX(.75) scaleY(1.25);-ms-transform:scaleX(.75) scaleY(1.25);transform:scaleX(.75) scaleY(1.25)}60%{-webkit-transform:scaleX(1.15) scaleY(.85);-ms-transform:scaleX(1.15) scaleY(.85);transform:scaleX(1.15) scaleY(.85)}to{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}.om-animation-rubber-band{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:rubberBand;animation-name:rubberBand}@-webkit-keyframes shake{0%,to{-webkit-transform:translateX(0);transform:translateX(0)}10%,30%,50%,70%,90%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}20%,40%,60%,80%{-webkit-transform:translateX(10px);transform:translateX(10px)}}@keyframes shake{0%,to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}10%,30%,50%,70%,90%{-webkit-transform:translateX(-10px);-ms-transform:translateX(-10px);transform:translateX(-10px)}20%,40%,60%,80%{-webkit-transform:translateX(10px);-ms-transform:translateX(10px);transform:translateX(10px)}}.om-animation-shake{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:shake;animation-name:shake}@-webkit-keyframes slideInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes slideInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);-ms-transform:translateY(-2000px);transform:translateY(-2000px)}to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}}.om-animation-slide-in-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInDown;animation-name:slideInDown}@-webkit-keyframes slideInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes slideInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);-ms-transform:translateX(-2000px);transform:translateX(-2000px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-slide-in-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInLeft;animation-name:slideInLeft}@-webkit-keyframes slideInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes slideInRight{0%{opacity:0;-webkit-transform:translateX(2000px);-ms-transform:translateX(2000px);transform:translateX(2000px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-slide-in-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInRight;animation-name:slideInRight}@-webkit-keyframes swing{20%{-webkit-transform:rotate(15deg);transform:rotate(15deg)}40%{-webkit-transform:rotate(-10deg);transform:rotate(-10deg)}60%{-webkit-transform:rotate(5deg);transform:rotate(5deg)}80%{-webkit-transform:rotate(-5deg);transform:rotate(-5deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@keyframes swing{20%{-webkit-transform:rotate(15deg);-ms-transform:rotate(15deg);transform:rotate(15deg)}40%{-webkit-transform:rotate(-10deg);-ms-transform:rotate(-10deg);transform:rotate(-10deg)}60%{-webkit-transform:rotate(5deg);-ms-transform:rotate(5deg);transform:rotate(5deg)}80%{-webkit-transform:rotate(-5deg);-ms-transform:rotate(-5deg);transform:rotate(-5deg)}to{-webkit-transform:rotate(0deg);-ms-transform:rotate(0deg);transform:rotate(0deg)}}.om-animation-swing{-webkit-animation-duration:1s;animation-duration:1s;-webkit-transform-origin:top center;-ms-transform-origin:top center;transform-origin:top center;-webkit-animation-name:swing;animation-name:swing}@-webkit-keyframes tada{0%{-webkit-transform:scale(1);transform:scale(1)}10%,20%{-webkit-transform:scale(.9) rotate(-3deg);transform:scale(.9) rotate(-3deg)}30%,50%,70%,90%{-webkit-transform:scale(1.1) rotate(3deg);transform:scale(1.1) rotate(3deg)}40%,60%,80%{-webkit-transform:scale(1.1) rotate(-3deg);transform:scale(1.1) rotate(-3deg)}to{-webkit-transform:scale(1) rotate(0);transform:scale(1) rotate(0)}}@keyframes tada{0%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}10%,20%{-webkit-transform:scale(.9) rotate(-3deg);-ms-transform:scale(.9) rotate(-3deg);transform:scale(.9) rotate(-3deg)}30%,50%,70%,90%{-webkit-transform:scale(1.1) rotate(3deg);-ms-transform:scale(1.1) rotate(3deg);transform:scale(1.1) rotate(3deg)}40%,60%,80%{-webkit-transform:scale(1.1) rotate(-3deg);-ms-transform:scale(1.1) rotate(-3deg);transform:scale(1.1) rotate(-3deg)}to{-webkit-transform:scale(1) rotate(0);-ms-transform:scale(1) rotate(0);transform:scale(1) rotate(0)}}.om-animation-tada{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:tada;animation-name:tada}@-webkit-keyframes wobble{0%{-webkit-transform:translateX(0);transform:translateX(0)}15%{-webkit-transform:translateX(-25%) rotate(-5deg);transform:translateX(-25%) rotate(-5deg)}30%{-webkit-transform:translateX(20%) rotate(3deg);transform:translateX(20%) rotate(3deg)}45%{-webkit-transform:translateX(-15%) rotate(-3deg);transform:translateX(-15%) rotate(-3deg)}60%{-webkit-transform:translateX(10%) rotate(2deg);transform:translateX(10%) rotate(2deg)}75%{-webkit-transform:translateX(-5%) rotate(-1deg);transform:translateX(-5%) rotate(-1deg)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes wobble{0%{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}15%{-webkit-transform:translateX(-25%) rotate(-5deg);-ms-transform:translateX(-25%) rotate(-5deg);transform:translateX(-25%) rotate(-5deg)}30%{-webkit-transform:translateX(20%) rotate(3deg);-ms-transform:translateX(20%) rotate(3deg);transform:translateX(20%) rotate(3deg)}45%{-webkit-transform:translateX(-15%) rotate(-3deg);-ms-transform:translateX(-15%) rotate(-3deg);transform:translateX(-15%) rotate(-3deg)}60%{-webkit-transform:translateX(10%) rotate(2deg);-ms-transform:translateX(10%) rotate(2deg);transform:translateX(10%) rotate(2deg)}75%{-webkit-transform:translateX(-5%) rotate(-1deg);-ms-transform:translateX(-5%) rotate(-1deg);transform:translateX(-5%) rotate(-1deg)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-wobble{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:wobble;animation-name:wobble}.om-content-lock{color:transparent!important;text-shadow:rgba(0,0,0,.5) 0 0 10px;-webkit-user-select:none;-moz-user-select:none;user-select:none;pointer-events:none;filter:url("data:image/svg+xml;utf9,<svg%20version='1.1'%20xmlns='http://www.w3.org/2000/svg'><filter%20id='blur'><feGaussianBlur%20stdDeviation='10'%20/></filter></svg>#blur");-webkit-filter:blur(10px);-ms-filter:blur(10px);-o-filter:blur(10px);filter:blur(10px)}html.om-mobile-position,html.om-mobile-position body{position:fixed!important}html.om-ios-form,html.om-ios-form body{-webkit-transform:translateZ(0)!important;transform:translateZ(0)!important;-webkit-overflow-scrolling:touch!important;height:100%!important;overflow:auto!important}html.om-position-popup body{overflow:hidden!important}html.om-position-floating-top{transition:padding-top .5s ease!important}html.om-position-floating-bottom{transition:padding-bottom .5s ease!important}html.om-reset-dimensions{height:100%!important;width:100%!important}</style><style type="text/css">@-webkit-keyframes bounce{0%,20%,50%,80%,to{-webkit-transform:translateY(0);transform:translateY(0)}40%{-webkit-transform:translateY(-30px);transform:translateY(-30px)}60%{-webkit-transform:translateY(-15px);transform:translateY(-15px)}}@keyframes bounce{0%,20%,50%,80%,to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}40%{-webkit-transform:translateY(-30px);-ms-transform:translateY(-30px);transform:translateY(-30px)}60%{-webkit-transform:translateY(-15px);-ms-transform:translateY(-15px);transform:translateY(-15px)}}.om-animation-bounce{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:bounce;animation-name:bounce}@-webkit-keyframes bounceIn{0%{opacity:0;-webkit-transform:scale(.3);transform:scale(.3)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}70%{-webkit-transform:scale(.9);transform:scale(.9)}to{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes bounceIn{0%{opacity:0;-webkit-transform:scale(.3);-ms-transform:scale(.3);transform:scale(.3)}50%{opacity:1;-webkit-transform:scale(1.05);-ms-transform:scale(1.05);transform:scale(1.05)}70%{-webkit-transform:scale(.9);-ms-transform:scale(.9);transform:scale(.9)}to{opacity:1;-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}.om-animation-bounce-in{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceIn;animation-name:bounceIn}@-webkit-keyframes bounceInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}60%{opacity:1;-webkit-transform:translateY(30px);transform:translateY(30px)}80%{-webkit-transform:translateY(-10px);transform:translateY(-10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes bounceInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);-ms-transform:translateY(-2000px);transform:translateY(-2000px)}60%{opacity:1;-webkit-transform:translateY(30px);-ms-transform:translateY(30px);transform:translateY(30px)}80%{-webkit-transform:translateY(-10px);-ms-transform:translateY(-10px);transform:translateY(-10px)}to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}}.om-animation-bounce-in-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInDown;animation-name:bounceInDown}@-webkit-keyframes bounceInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}60%{opacity:1;-webkit-transform:translateX(30px);transform:translateX(30px)}80%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes bounceInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);-ms-transform:translateX(-2000px);transform:translateX(-2000px)}60%{opacity:1;-webkit-transform:translateX(30px);-ms-transform:translateX(30px);transform:translateX(30px)}80%{-webkit-transform:translateX(-10px);-ms-transform:translateX(-10px);transform:translateX(-10px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-bounce-in-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInLeft;animation-name:bounceInLeft}@-webkit-keyframes bounceInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}60%{opacity:1;-webkit-transform:translateX(-30px);transform:translateX(-30px)}80%{-webkit-transform:translateX(10px);transform:translateX(10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes bounceInRight{0%{opacity:0;-webkit-transform:translateX(2000px);-ms-transform:translateX(2000px);transform:translateX(2000px)}60%{opacity:1;-webkit-transform:translateX(-30px);-ms-transform:translateX(-30px);transform:translateX(-30px)}80%{-webkit-transform:translateX(10px);-ms-transform:translateX(10px);transform:translateX(10px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-bounce-in-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInRight;animation-name:bounceInRight}@-webkit-keyframes bounceInUp{0%{opacity:0;-webkit-transform:translateY(2000px);transform:translateY(2000px)}60%{opacity:1;-webkit-transform:translateY(-30px);transform:translateY(-30px)}80%{-webkit-transform:translateY(10px);transform:translateY(10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes bounceInUp{0%{opacity:0;-webkit-transform:translateY(2000px);-ms-transform:translateY(2000px);transform:translateY(2000px)}60%{opacity:1;-webkit-transform:translateY(-30px);-ms-transform:translateY(-30px);transform:translateY(-30px)}80%{-webkit-transform:translateY(10px);-ms-transform:translateY(10px);transform:translateY(10px)}to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}}.om-animation-bounce-in-up{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInUp;animation-name:bounceInUp}@-webkit-keyframes flash{0%,50%,to{opacity:1}25%,75%{opacity:0}}@keyframes flash{0%,50%,to{opacity:1}25%,75%{opacity:0}}.om-animation-flash{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:flash;animation-name:flash}@-webkit-keyframes flip{0%{-webkit-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}40%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}80%{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}to{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}@keyframes flip{0%{-webkit-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-ms-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}40%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-ms-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-ms-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}80%{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-ms-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}to{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-ms-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}.om-animation-flip{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;-ms-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flip;animation-name:flip}@-webkit-keyframes flipInX{0%{-webkit-transform:perspective(800px) rotateX(90deg);transform:perspective(800px) rotateX(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateX(-10deg);transform:perspective(800px) rotateX(-10deg)}70%{-webkit-transform:perspective(800px) rotateX(10deg);transform:perspective(800px) rotateX(10deg)}to{-webkit-transform:perspective(800px) rotateX(0deg);transform:perspective(800px) rotateX(0deg);opacity:1}}@keyframes flipInX{0%{-webkit-transform:perspective(800px) rotateX(90deg);-ms-transform:perspective(800px) rotateX(90deg);transform:perspective(800px) rotateX(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateX(-10deg);-ms-transform:perspective(800px) rotateX(-10deg);transform:perspective(800px) rotateX(-10deg)}70%{-webkit-transform:perspective(800px) rotateX(10deg);-ms-transform:perspective(800px) rotateX(10deg);transform:perspective(800px) rotateX(10deg)}to{-webkit-transform:perspective(800px) rotateX(0deg);-ms-transform:perspective(800px) rotateX(0deg);transform:perspective(800px) rotateX(0deg);opacity:1}}.om-animation-flip-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;-ms-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flipInX;animation-name:flipInX}@-webkit-keyframes flipInY{0%{-webkit-transform:perspective(800px) rotateY(90deg);transform:perspective(800px) rotateY(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateY(-10deg);transform:perspective(800px) rotateY(-10deg)}70%{-webkit-transform:perspective(800px) rotateY(10deg);transform:perspective(800px) rotateY(10deg)}to{-webkit-transform:perspective(800px) rotateY(0deg);transform:perspective(800px) rotateY(0deg);opacity:1}}@keyframes flipInY{0%{-webkit-transform:perspective(800px) rotateY(90deg);-ms-transform:perspective(800px) rotateY(90deg);transform:perspective(800px) rotateY(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateY(-10deg);-ms-transform:perspective(800px) rotateY(-10deg);transform:perspective(800px) rotateY(-10deg)}70%{-webkit-transform:perspective(800px) rotateY(10deg);-ms-transform:perspective(800px) rotateY(10deg);transform:perspective(800px) rotateY(10deg)}to{-webkit-transform:perspective(800px) rotateY(0deg);-ms-transform:perspective(800px) rotateY(0deg);transform:perspective(800px) rotateY(0deg);opacity:1}}.om-animation-flip-side{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;-ms-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flipInY;animation-name:flipInY}@-webkit-keyframes lightSpeedIn{0%{-webkit-transform:translateX(100%) skewX(-30deg);transform:translateX(100%) skewX(-30deg);opacity:0}60%{-webkit-transform:translateX(-20%) skewX(30deg);transform:translateX(-20%) skewX(30deg);opacity:1}80%{-webkit-transform:translateX(0) skewX(-15deg);transform:translateX(0) skewX(-15deg);opacity:1}to{-webkit-transform:translateX(0) skewX(0deg);transform:translateX(0) skewX(0deg);opacity:1}}@keyframes lightSpeedIn{0%{-webkit-transform:translateX(100%) skewX(-30deg);-ms-transform:translateX(100%) skewX(-30deg);transform:translateX(100%) skewX(-30deg);opacity:0}60%{-webkit-transform:translateX(-20%) skewX(30deg);-ms-transform:translateX(-20%) skewX(30deg);transform:translateX(-20%) skewX(30deg);opacity:1}80%{-webkit-transform:translateX(0) skewX(-15deg);-ms-transform:translateX(0) skewX(-15deg);transform:translateX(0) skewX(-15deg);opacity:1}to{-webkit-transform:translateX(0) skewX(0deg);-ms-transform:translateX(0) skewX(0deg);transform:translateX(0) skewX(0deg);opacity:1}}.om-animation-light-speed{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:lightSpeedIn;animation-name:lightSpeedIn;-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}@-webkit-keyframes pulse{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.1);transform:scale(1.1)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes pulse{0%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1)}to{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}.om-animation-pulse{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:pulse;animation-name:pulse}@-webkit-keyframes rollIn{0%{opacity:0;-webkit-transform:translateX(-100%) rotate(-120deg);transform:translateX(-100%) rotate(-120deg)}to{opacity:1;-webkit-transform:translateX(0) rotate(0deg);transform:translateX(0) rotate(0deg)}}@keyframes rollIn{0%{opacity:0;-webkit-transform:translateX(-100%) rotate(-120deg);-ms-transform:translateX(-100%) rotate(-120deg);transform:translateX(-100%) rotate(-120deg)}to{opacity:1;-webkit-transform:translateX(0) rotate(0deg);-ms-transform:translateX(0) rotate(0deg);transform:translateX(0) rotate(0deg)}}.om-animation-roll-in{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rollIn;animation-name:rollIn}@-webkit-keyframes rotateIn{0%{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(-200deg);transform:rotate(-200deg);opacity:0}to{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateIn{0%{-webkit-transform-origin:center center;-ms-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(-200deg);-ms-transform:rotate(-200deg);transform:rotate(-200deg);opacity:0}to{-webkit-transform-origin:center center;-ms-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateIn;animation-name:rotateIn}@-webkit-keyframes rotateInDownLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInDownLeft{0%{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(-90deg);-ms-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-down-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInDownLeft;animation-name:rotateInDownLeft}@-webkit-keyframes rotateInDownRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInDownRight{0%{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-down-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInDownRight;animation-name:rotateInDownRight}@-webkit-keyframes rotateInUpLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInUpLeft{0%{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-up-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInUpLeft;animation-name:rotateInUpLeft}@-webkit-keyframes rotateInUpRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInUpRight{0%{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(-90deg);-ms-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-up-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInUpRight;animation-name:rotateInUpRight}@-webkit-keyframes rubberBand{0%{-webkit-transform:scale(1);transform:scale(1)}30%{-webkit-transform:scaleX(1.25) scaleY(.75);transform:scaleX(1.25) scaleY(.75)}40%{-webkit-transform:scaleX(.75) scaleY(1.25);transform:scaleX(.75) scaleY(1.25)}60%{-webkit-transform:scaleX(1.15) scaleY(.85);transform:scaleX(1.15) scaleY(.85)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes rubberBand{0%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}30%{-webkit-transform:scaleX(1.25) scaleY(.75);-ms-transform:scaleX(1.25) scaleY(.75);transform:scaleX(1.25) scaleY(.75)}40%{-webkit-transform:scaleX(.75) scaleY(1.25);-ms-transform:scaleX(.75) scaleY(1.25);transform:scaleX(.75) scaleY(1.25)}60%{-webkit-transform:scaleX(1.15) scaleY(.85);-ms-transform:scaleX(1.15) scaleY(.85);transform:scaleX(1.15) scaleY(.85)}to{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}.om-animation-rubber-band{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:rubberBand;animation-name:rubberBand}@-webkit-keyframes shake{0%,to{-webkit-transform:translateX(0);transform:translateX(0)}10%,30%,50%,70%,90%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}20%,40%,60%,80%{-webkit-transform:translateX(10px);transform:translateX(10px)}}@keyframes shake{0%,to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}10%,30%,50%,70%,90%{-webkit-transform:translateX(-10px);-ms-transform:translateX(-10px);transform:translateX(-10px)}20%,40%,60%,80%{-webkit-transform:translateX(10px);-ms-transform:translateX(10px);transform:translateX(10px)}}.om-animation-shake{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:shake;animation-name:shake}@-webkit-keyframes slideInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes slideInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);-ms-transform:translateY(-2000px);transform:translateY(-2000px)}to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}}.om-animation-slide-in-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInDown;animation-name:slideInDown}@-webkit-keyframes slideInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes slideInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);-ms-transform:translateX(-2000px);transform:translateX(-2000px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-slide-in-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInLeft;animation-name:slideInLeft}@-webkit-keyframes slideInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes slideInRight{0%{opacity:0;-webkit-transform:translateX(2000px);-ms-transform:translateX(2000px);transform:translateX(2000px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-slide-in-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInRight;animation-name:slideInRight}@-webkit-keyframes swing{20%{-webkit-transform:rotate(15deg);transform:rotate(15deg)}40%{-webkit-transform:rotate(-10deg);transform:rotate(-10deg)}60%{-webkit-transform:rotate(5deg);transform:rotate(5deg)}80%{-webkit-transform:rotate(-5deg);transform:rotate(-5deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@keyframes swing{20%{-webkit-transform:rotate(15deg);-ms-transform:rotate(15deg);transform:rotate(15deg)}40%{-webkit-transform:rotate(-10deg);-ms-transform:rotate(-10deg);transform:rotate(-10deg)}60%{-webkit-transform:rotate(5deg);-ms-transform:rotate(5deg);transform:rotate(5deg)}80%{-webkit-transform:rotate(-5deg);-ms-transform:rotate(-5deg);transform:rotate(-5deg)}to{-webkit-transform:rotate(0deg);-ms-transform:rotate(0deg);transform:rotate(0deg)}}.om-animation-swing{-webkit-animation-duration:1s;animation-duration:1s;-webkit-transform-origin:top center;-ms-transform-origin:top center;transform-origin:top center;-webkit-animation-name:swing;animation-name:swing}@-webkit-keyframes tada{0%{-webkit-transform:scale(1);transform:scale(1)}10%,20%{-webkit-transform:scale(.9) rotate(-3deg);transform:scale(.9) rotate(-3deg)}30%,50%,70%,90%{-webkit-transform:scale(1.1) rotate(3deg);transform:scale(1.1) rotate(3deg)}40%,60%,80%{-webkit-transform:scale(1.1) rotate(-3deg);transform:scale(1.1) rotate(-3deg)}to{-webkit-transform:scale(1) rotate(0);transform:scale(1) rotate(0)}}@keyframes tada{0%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}10%,20%{-webkit-transform:scale(.9) rotate(-3deg);-ms-transform:scale(.9) rotate(-3deg);transform:scale(.9) rotate(-3deg)}30%,50%,70%,90%{-webkit-transform:scale(1.1) rotate(3deg);-ms-transform:scale(1.1) rotate(3deg);transform:scale(1.1) rotate(3deg)}40%,60%,80%{-webkit-transform:scale(1.1) rotate(-3deg);-ms-transform:scale(1.1) rotate(-3deg);transform:scale(1.1) rotate(-3deg)}to{-webkit-transform:scale(1) rotate(0);-ms-transform:scale(1) rotate(0);transform:scale(1) rotate(0)}}.om-animation-tada{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:tada;animation-name:tada}@-webkit-keyframes wobble{0%{-webkit-transform:translateX(0);transform:translateX(0)}15%{-webkit-transform:translateX(-25%) rotate(-5deg);transform:translateX(-25%) rotate(-5deg)}30%{-webkit-transform:translateX(20%) rotate(3deg);transform:translateX(20%) rotate(3deg)}45%{-webkit-transform:translateX(-15%) rotate(-3deg);transform:translateX(-15%) rotate(-3deg)}60%{-webkit-transform:translateX(10%) rotate(2deg);transform:translateX(10%) rotate(2deg)}75%{-webkit-transform:translateX(-5%) rotate(-1deg);transform:translateX(-5%) rotate(-1deg)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes wobble{0%{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}15%{-webkit-transform:translateX(-25%) rotate(-5deg);-ms-transform:translateX(-25%) rotate(-5deg);transform:translateX(-25%) rotate(-5deg)}30%{-webkit-transform:translateX(20%) rotate(3deg);-ms-transform:translateX(20%) rotate(3deg);transform:translateX(20%) rotate(3deg)}45%{-webkit-transform:translateX(-15%) rotate(-3deg);-ms-transform:translateX(-15%) rotate(-3deg);transform:translateX(-15%) rotate(-3deg)}60%{-webkit-transform:translateX(10%) rotate(2deg);-ms-transform:translateX(10%) rotate(2deg);transform:translateX(10%) rotate(2deg)}75%{-webkit-transform:translateX(-5%) rotate(-1deg);-ms-transform:translateX(-5%) rotate(-1deg);transform:translateX(-5%) rotate(-1deg)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-wobble{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:wobble;animation-name:wobble}.om-content-lock{color:transparent!important;text-shadow:rgba(0,0,0,.5) 0 0 10px;-webkit-user-select:none;-moz-user-select:none;user-select:none;pointer-events:none;filter:url("data:image/svg+xml;utf9,<svg%20version='1.1'%20xmlns='http://www.w3.org/2000/svg'><filter%20id='blur'><feGaussianBlur%20stdDeviation='10'%20/></filter></svg>#blur");-webkit-filter:blur(10px);-ms-filter:blur(10px);-o-filter:blur(10px);filter:blur(10px)}html.om-mobile-position,html.om-mobile-position body{position:fixed!important}html.om-ios-form,html.om-ios-form body{-webkit-transform:translateZ(0)!important;transform:translateZ(0)!important;-webkit-overflow-scrolling:touch!important;height:100%!important;overflow:auto!important}html.om-position-popup body{overflow:hidden!important}html.om-position-floating-top{transition:padding-top .5s ease!important}html.om-position-floating-bottom{transition:padding-bottom .5s ease!important}html.om-reset-dimensions{height:100%!important;width:100%!important}</style><script type="text/javascript" async="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/tagjs"></script><style type="text/css">@-webkit-keyframes bounce{0%,20%,50%,80%,to{-webkit-transform:translateY(0);transform:translateY(0)}40%{-webkit-transform:translateY(-30px);transform:translateY(-30px)}60%{-webkit-transform:translateY(-15px);transform:translateY(-15px)}}@keyframes bounce{0%,20%,50%,80%,to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}40%{-webkit-transform:translateY(-30px);-ms-transform:translateY(-30px);transform:translateY(-30px)}60%{-webkit-transform:translateY(-15px);-ms-transform:translateY(-15px);transform:translateY(-15px)}}.om-animation-bounce{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:bounce;animation-name:bounce}@-webkit-keyframes bounceIn{0%{opacity:0;-webkit-transform:scale(.3);transform:scale(.3)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}70%{-webkit-transform:scale(.9);transform:scale(.9)}to{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes bounceIn{0%{opacity:0;-webkit-transform:scale(.3);-ms-transform:scale(.3);transform:scale(.3)}50%{opacity:1;-webkit-transform:scale(1.05);-ms-transform:scale(1.05);transform:scale(1.05)}70%{-webkit-transform:scale(.9);-ms-transform:scale(.9);transform:scale(.9)}to{opacity:1;-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}.om-animation-bounce-in{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceIn;animation-name:bounceIn}@-webkit-keyframes bounceInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}60%{opacity:1;-webkit-transform:translateY(30px);transform:translateY(30px)}80%{-webkit-transform:translateY(-10px);transform:translateY(-10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes bounceInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);-ms-transform:translateY(-2000px);transform:translateY(-2000px)}60%{opacity:1;-webkit-transform:translateY(30px);-ms-transform:translateY(30px);transform:translateY(30px)}80%{-webkit-transform:translateY(-10px);-ms-transform:translateY(-10px);transform:translateY(-10px)}to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}}.om-animation-bounce-in-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInDown;animation-name:bounceInDown}@-webkit-keyframes bounceInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}60%{opacity:1;-webkit-transform:translateX(30px);transform:translateX(30px)}80%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes bounceInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);-ms-transform:translateX(-2000px);transform:translateX(-2000px)}60%{opacity:1;-webkit-transform:translateX(30px);-ms-transform:translateX(30px);transform:translateX(30px)}80%{-webkit-transform:translateX(-10px);-ms-transform:translateX(-10px);transform:translateX(-10px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-bounce-in-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInLeft;animation-name:bounceInLeft}@-webkit-keyframes bounceInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}60%{opacity:1;-webkit-transform:translateX(-30px);transform:translateX(-30px)}80%{-webkit-transform:translateX(10px);transform:translateX(10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes bounceInRight{0%{opacity:0;-webkit-transform:translateX(2000px);-ms-transform:translateX(2000px);transform:translateX(2000px)}60%{opacity:1;-webkit-transform:translateX(-30px);-ms-transform:translateX(-30px);transform:translateX(-30px)}80%{-webkit-transform:translateX(10px);-ms-transform:translateX(10px);transform:translateX(10px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-bounce-in-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInRight;animation-name:bounceInRight}@-webkit-keyframes bounceInUp{0%{opacity:0;-webkit-transform:translateY(2000px);transform:translateY(2000px)}60%{opacity:1;-webkit-transform:translateY(-30px);transform:translateY(-30px)}80%{-webkit-transform:translateY(10px);transform:translateY(10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes bounceInUp{0%{opacity:0;-webkit-transform:translateY(2000px);-ms-transform:translateY(2000px);transform:translateY(2000px)}60%{opacity:1;-webkit-transform:translateY(-30px);-ms-transform:translateY(-30px);transform:translateY(-30px)}80%{-webkit-transform:translateY(10px);-ms-transform:translateY(10px);transform:translateY(10px)}to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}}.om-animation-bounce-in-up{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInUp;animation-name:bounceInUp}@-webkit-keyframes flash{0%,50%,to{opacity:1}25%,75%{opacity:0}}@keyframes flash{0%,50%,to{opacity:1}25%,75%{opacity:0}}.om-animation-flash{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:flash;animation-name:flash}@-webkit-keyframes flip{0%{-webkit-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}40%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}80%{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}to{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}@keyframes flip{0%{-webkit-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-ms-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}40%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-ms-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-ms-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}80%{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-ms-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}to{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-ms-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}.om-animation-flip{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;-ms-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flip;animation-name:flip}@-webkit-keyframes flipInX{0%{-webkit-transform:perspective(800px) rotateX(90deg);transform:perspective(800px) rotateX(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateX(-10deg);transform:perspective(800px) rotateX(-10deg)}70%{-webkit-transform:perspective(800px) rotateX(10deg);transform:perspective(800px) rotateX(10deg)}to{-webkit-transform:perspective(800px) rotateX(0deg);transform:perspective(800px) rotateX(0deg);opacity:1}}@keyframes flipInX{0%{-webkit-transform:perspective(800px) rotateX(90deg);-ms-transform:perspective(800px) rotateX(90deg);transform:perspective(800px) rotateX(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateX(-10deg);-ms-transform:perspective(800px) rotateX(-10deg);transform:perspective(800px) rotateX(-10deg)}70%{-webkit-transform:perspective(800px) rotateX(10deg);-ms-transform:perspective(800px) rotateX(10deg);transform:perspective(800px) rotateX(10deg)}to{-webkit-transform:perspective(800px) rotateX(0deg);-ms-transform:perspective(800px) rotateX(0deg);transform:perspective(800px) rotateX(0deg);opacity:1}}.om-animation-flip-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;-ms-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flipInX;animation-name:flipInX}@-webkit-keyframes flipInY{0%{-webkit-transform:perspective(800px) rotateY(90deg);transform:perspective(800px) rotateY(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateY(-10deg);transform:perspective(800px) rotateY(-10deg)}70%{-webkit-transform:perspective(800px) rotateY(10deg);transform:perspective(800px) rotateY(10deg)}to{-webkit-transform:perspective(800px) rotateY(0deg);transform:perspective(800px) rotateY(0deg);opacity:1}}@keyframes flipInY{0%{-webkit-transform:perspective(800px) rotateY(90deg);-ms-transform:perspective(800px) rotateY(90deg);transform:perspective(800px) rotateY(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateY(-10deg);-ms-transform:perspective(800px) rotateY(-10deg);transform:perspective(800px) rotateY(-10deg)}70%{-webkit-transform:perspective(800px) rotateY(10deg);-ms-transform:perspective(800px) rotateY(10deg);transform:perspective(800px) rotateY(10deg)}to{-webkit-transform:perspective(800px) rotateY(0deg);-ms-transform:perspective(800px) rotateY(0deg);transform:perspective(800px) rotateY(0deg);opacity:1}}.om-animation-flip-side{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;-ms-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flipInY;animation-name:flipInY}@-webkit-keyframes lightSpeedIn{0%{-webkit-transform:translateX(100%) skewX(-30deg);transform:translateX(100%) skewX(-30deg);opacity:0}60%{-webkit-transform:translateX(-20%) skewX(30deg);transform:translateX(-20%) skewX(30deg);opacity:1}80%{-webkit-transform:translateX(0) skewX(-15deg);transform:translateX(0) skewX(-15deg);opacity:1}to{-webkit-transform:translateX(0) skewX(0deg);transform:translateX(0) skewX(0deg);opacity:1}}@keyframes lightSpeedIn{0%{-webkit-transform:translateX(100%) skewX(-30deg);-ms-transform:translateX(100%) skewX(-30deg);transform:translateX(100%) skewX(-30deg);opacity:0}60%{-webkit-transform:translateX(-20%) skewX(30deg);-ms-transform:translateX(-20%) skewX(30deg);transform:translateX(-20%) skewX(30deg);opacity:1}80%{-webkit-transform:translateX(0) skewX(-15deg);-ms-transform:translateX(0) skewX(-15deg);transform:translateX(0) skewX(-15deg);opacity:1}to{-webkit-transform:translateX(0) skewX(0deg);-ms-transform:translateX(0) skewX(0deg);transform:translateX(0) skewX(0deg);opacity:1}}.om-animation-light-speed{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:lightSpeedIn;animation-name:lightSpeedIn;-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}@-webkit-keyframes pulse{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.1);transform:scale(1.1)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes pulse{0%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1)}to{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}.om-animation-pulse{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:pulse;animation-name:pulse}@-webkit-keyframes rollIn{0%{opacity:0;-webkit-transform:translateX(-100%) rotate(-120deg);transform:translateX(-100%) rotate(-120deg)}to{opacity:1;-webkit-transform:translateX(0) rotate(0deg);transform:translateX(0) rotate(0deg)}}@keyframes rollIn{0%{opacity:0;-webkit-transform:translateX(-100%) rotate(-120deg);-ms-transform:translateX(-100%) rotate(-120deg);transform:translateX(-100%) rotate(-120deg)}to{opacity:1;-webkit-transform:translateX(0) rotate(0deg);-ms-transform:translateX(0) rotate(0deg);transform:translateX(0) rotate(0deg)}}.om-animation-roll-in{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rollIn;animation-name:rollIn}@-webkit-keyframes rotateIn{0%{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(-200deg);transform:rotate(-200deg);opacity:0}to{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateIn{0%{-webkit-transform-origin:center center;-ms-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(-200deg);-ms-transform:rotate(-200deg);transform:rotate(-200deg);opacity:0}to{-webkit-transform-origin:center center;-ms-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateIn;animation-name:rotateIn}@-webkit-keyframes rotateInDownLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInDownLeft{0%{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(-90deg);-ms-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-down-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInDownLeft;animation-name:rotateInDownLeft}@-webkit-keyframes rotateInDownRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInDownRight{0%{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-down-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInDownRight;animation-name:rotateInDownRight}@-webkit-keyframes rotateInUpLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInUpLeft{0%{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-up-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInUpLeft;animation-name:rotateInUpLeft}@-webkit-keyframes rotateInUpRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInUpRight{0%{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(-90deg);-ms-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-up-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInUpRight;animation-name:rotateInUpRight}@-webkit-keyframes rubberBand{0%{-webkit-transform:scale(1);transform:scale(1)}30%{-webkit-transform:scaleX(1.25) scaleY(.75);transform:scaleX(1.25) scaleY(.75)}40%{-webkit-transform:scaleX(.75) scaleY(1.25);transform:scaleX(.75) scaleY(1.25)}60%{-webkit-transform:scaleX(1.15) scaleY(.85);transform:scaleX(1.15) scaleY(.85)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes rubberBand{0%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}30%{-webkit-transform:scaleX(1.25) scaleY(.75);-ms-transform:scaleX(1.25) scaleY(.75);transform:scaleX(1.25) scaleY(.75)}40%{-webkit-transform:scaleX(.75) scaleY(1.25);-ms-transform:scaleX(.75) scaleY(1.25);transform:scaleX(.75) scaleY(1.25)}60%{-webkit-transform:scaleX(1.15) scaleY(.85);-ms-transform:scaleX(1.15) scaleY(.85);transform:scaleX(1.15) scaleY(.85)}to{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}.om-animation-rubber-band{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:rubberBand;animation-name:rubberBand}@-webkit-keyframes shake{0%,to{-webkit-transform:translateX(0);transform:translateX(0)}10%,30%,50%,70%,90%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}20%,40%,60%,80%{-webkit-transform:translateX(10px);transform:translateX(10px)}}@keyframes shake{0%,to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}10%,30%,50%,70%,90%{-webkit-transform:translateX(-10px);-ms-transform:translateX(-10px);transform:translateX(-10px)}20%,40%,60%,80%{-webkit-transform:translateX(10px);-ms-transform:translateX(10px);transform:translateX(10px)}}.om-animation-shake{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:shake;animation-name:shake}@-webkit-keyframes slideInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes slideInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);-ms-transform:translateY(-2000px);transform:translateY(-2000px)}to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}}.om-animation-slide-in-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInDown;animation-name:slideInDown}@-webkit-keyframes slideInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes slideInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);-ms-transform:translateX(-2000px);transform:translateX(-2000px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-slide-in-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInLeft;animation-name:slideInLeft}@-webkit-keyframes slideInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes slideInRight{0%{opacity:0;-webkit-transform:translateX(2000px);-ms-transform:translateX(2000px);transform:translateX(2000px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-slide-in-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInRight;animation-name:slideInRight}@-webkit-keyframes swing{20%{-webkit-transform:rotate(15deg);transform:rotate(15deg)}40%{-webkit-transform:rotate(-10deg);transform:rotate(-10deg)}60%{-webkit-transform:rotate(5deg);transform:rotate(5deg)}80%{-webkit-transform:rotate(-5deg);transform:rotate(-5deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@keyframes swing{20%{-webkit-transform:rotate(15deg);-ms-transform:rotate(15deg);transform:rotate(15deg)}40%{-webkit-transform:rotate(-10deg);-ms-transform:rotate(-10deg);transform:rotate(-10deg)}60%{-webkit-transform:rotate(5deg);-ms-transform:rotate(5deg);transform:rotate(5deg)}80%{-webkit-transform:rotate(-5deg);-ms-transform:rotate(-5deg);transform:rotate(-5deg)}to{-webkit-transform:rotate(0deg);-ms-transform:rotate(0deg);transform:rotate(0deg)}}.om-animation-swing{-webkit-animation-duration:1s;animation-duration:1s;-webkit-transform-origin:top center;-ms-transform-origin:top center;transform-origin:top center;-webkit-animation-name:swing;animation-name:swing}@-webkit-keyframes tada{0%{-webkit-transform:scale(1);transform:scale(1)}10%,20%{-webkit-transform:scale(.9) rotate(-3deg);transform:scale(.9) rotate(-3deg)}30%,50%,70%,90%{-webkit-transform:scale(1.1) rotate(3deg);transform:scale(1.1) rotate(3deg)}40%,60%,80%{-webkit-transform:scale(1.1) rotate(-3deg);transform:scale(1.1) rotate(-3deg)}to{-webkit-transform:scale(1) rotate(0);transform:scale(1) rotate(0)}}@keyframes tada{0%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}10%,20%{-webkit-transform:scale(.9) rotate(-3deg);-ms-transform:scale(.9) rotate(-3deg);transform:scale(.9) rotate(-3deg)}30%,50%,70%,90%{-webkit-transform:scale(1.1) rotate(3deg);-ms-transform:scale(1.1) rotate(3deg);transform:scale(1.1) rotate(3deg)}40%,60%,80%{-webkit-transform:scale(1.1) rotate(-3deg);-ms-transform:scale(1.1) rotate(-3deg);transform:scale(1.1) rotate(-3deg)}to{-webkit-transform:scale(1) rotate(0);-ms-transform:scale(1) rotate(0);transform:scale(1) rotate(0)}}.om-animation-tada{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:tada;animation-name:tada}@-webkit-keyframes wobble{0%{-webkit-transform:translateX(0);transform:translateX(0)}15%{-webkit-transform:translateX(-25%) rotate(-5deg);transform:translateX(-25%) rotate(-5deg)}30%{-webkit-transform:translateX(20%) rotate(3deg);transform:translateX(20%) rotate(3deg)}45%{-webkit-transform:translateX(-15%) rotate(-3deg);transform:translateX(-15%) rotate(-3deg)}60%{-webkit-transform:translateX(10%) rotate(2deg);transform:translateX(10%) rotate(2deg)}75%{-webkit-transform:translateX(-5%) rotate(-1deg);transform:translateX(-5%) rotate(-1deg)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes wobble{0%{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}15%{-webkit-transform:translateX(-25%) rotate(-5deg);-ms-transform:translateX(-25%) rotate(-5deg);transform:translateX(-25%) rotate(-5deg)}30%{-webkit-transform:translateX(20%) rotate(3deg);-ms-transform:translateX(20%) rotate(3deg);transform:translateX(20%) rotate(3deg)}45%{-webkit-transform:translateX(-15%) rotate(-3deg);-ms-transform:translateX(-15%) rotate(-3deg);transform:translateX(-15%) rotate(-3deg)}60%{-webkit-transform:translateX(10%) rotate(2deg);-ms-transform:translateX(10%) rotate(2deg);transform:translateX(10%) rotate(2deg)}75%{-webkit-transform:translateX(-5%) rotate(-1deg);-ms-transform:translateX(-5%) rotate(-1deg);transform:translateX(-5%) rotate(-1deg)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-wobble{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:wobble;animation-name:wobble}.om-content-lock{color:transparent!important;text-shadow:rgba(0,0,0,.5) 0 0 10px;-webkit-user-select:none;-moz-user-select:none;user-select:none;pointer-events:none;filter:url("data:image/svg+xml;utf9,<svg%20version='1.1'%20xmlns='http://www.w3.org/2000/svg'><filter%20id='blur'><feGaussianBlur%20stdDeviation='10'%20/></filter></svg>#blur");-webkit-filter:blur(10px);-ms-filter:blur(10px);-o-filter:blur(10px);filter:blur(10px)}html.om-mobile-position,html.om-mobile-position body{position:fixed!important}html.om-ios-form,html.om-ios-form body{-webkit-transform:translateZ(0)!important;transform:translateZ(0)!important;-webkit-overflow-scrolling:touch!important;height:100%!important;overflow:auto!important}html.om-position-popup body{overflow:hidden!important}html.om-position-floating-top{transition:padding-top .5s ease!important}html.om-position-floating-bottom{transition:padding-bottom .5s ease!important}html.om-reset-dimensions{height:100%!important;width:100%!important}</style><script src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/webfont.js" async=""></script><img src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/a.gif" width="1" height="1" border="0"><img src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/tr_003.gif" width="1" height="1" border="0"><img src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/seg_002.gif" width="1" height="1" border="0"><img src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/tr_002.gif" width="1" height="1" border="0"><img src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/seg_003.gif" width="1" height="1" border="0"><img src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/tr.gif" width="1" height="1" border="0"><img src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/seg.gif" width="1" height="1" border="0"><style type="text/css">@-webkit-keyframes bounce{0%,20%,50%,80%,to{-webkit-transform:translateY(0);transform:translateY(0)}40%{-webkit-transform:translateY(-30px);transform:translateY(-30px)}60%{-webkit-transform:translateY(-15px);transform:translateY(-15px)}}@keyframes bounce{0%,20%,50%,80%,to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}40%{-webkit-transform:translateY(-30px);-ms-transform:translateY(-30px);transform:translateY(-30px)}60%{-webkit-transform:translateY(-15px);-ms-transform:translateY(-15px);transform:translateY(-15px)}}.om-animation-bounce{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:bounce;animation-name:bounce}@-webkit-keyframes bounceIn{0%{opacity:0;-webkit-transform:scale(.3);transform:scale(.3)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}70%{-webkit-transform:scale(.9);transform:scale(.9)}to{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes bounceIn{0%{opacity:0;-webkit-transform:scale(.3);-ms-transform:scale(.3);transform:scale(.3)}50%{opacity:1;-webkit-transform:scale(1.05);-ms-transform:scale(1.05);transform:scale(1.05)}70%{-webkit-transform:scale(.9);-ms-transform:scale(.9);transform:scale(.9)}to{opacity:1;-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}.om-animation-bounce-in{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceIn;animation-name:bounceIn}@-webkit-keyframes bounceInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}60%{opacity:1;-webkit-transform:translateY(30px);transform:translateY(30px)}80%{-webkit-transform:translateY(-10px);transform:translateY(-10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes bounceInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);-ms-transform:translateY(-2000px);transform:translateY(-2000px)}60%{opacity:1;-webkit-transform:translateY(30px);-ms-transform:translateY(30px);transform:translateY(30px)}80%{-webkit-transform:translateY(-10px);-ms-transform:translateY(-10px);transform:translateY(-10px)}to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}}.om-animation-bounce-in-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInDown;animation-name:bounceInDown}@-webkit-keyframes bounceInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}60%{opacity:1;-webkit-transform:translateX(30px);transform:translateX(30px)}80%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes bounceInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);-ms-transform:translateX(-2000px);transform:translateX(-2000px)}60%{opacity:1;-webkit-transform:translateX(30px);-ms-transform:translateX(30px);transform:translateX(30px)}80%{-webkit-transform:translateX(-10px);-ms-transform:translateX(-10px);transform:translateX(-10px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-bounce-in-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInLeft;animation-name:bounceInLeft}@-webkit-keyframes bounceInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}60%{opacity:1;-webkit-transform:translateX(-30px);transform:translateX(-30px)}80%{-webkit-transform:translateX(10px);transform:translateX(10px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes bounceInRight{0%{opacity:0;-webkit-transform:translateX(2000px);-ms-transform:translateX(2000px);transform:translateX(2000px)}60%{opacity:1;-webkit-transform:translateX(-30px);-ms-transform:translateX(-30px);transform:translateX(-30px)}80%{-webkit-transform:translateX(10px);-ms-transform:translateX(10px);transform:translateX(10px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-bounce-in-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInRight;animation-name:bounceInRight}@-webkit-keyframes bounceInUp{0%{opacity:0;-webkit-transform:translateY(2000px);transform:translateY(2000px)}60%{opacity:1;-webkit-transform:translateY(-30px);transform:translateY(-30px)}80%{-webkit-transform:translateY(10px);transform:translateY(10px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes bounceInUp{0%{opacity:0;-webkit-transform:translateY(2000px);-ms-transform:translateY(2000px);transform:translateY(2000px)}60%{opacity:1;-webkit-transform:translateY(-30px);-ms-transform:translateY(-30px);transform:translateY(-30px)}80%{-webkit-transform:translateY(10px);-ms-transform:translateY(10px);transform:translateY(10px)}to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}}.om-animation-bounce-in-up{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:bounceInUp;animation-name:bounceInUp}@-webkit-keyframes flash{0%,50%,to{opacity:1}25%,75%{opacity:0}}@keyframes flash{0%,50%,to{opacity:1}25%,75%{opacity:0}}.om-animation-flash{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:flash;animation-name:flash}@-webkit-keyframes flip{0%{-webkit-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}40%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}80%{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}to{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}@keyframes flip{0%{-webkit-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-ms-transform:perspective(800px) translateZ(0) rotateY(0) scale(1);transform:perspective(800px) translateZ(0) rotateY(0) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}40%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-ms-transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(170deg) scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{-webkit-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-ms-transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);transform:perspective(800px) translateZ(150px) rotateY(190deg) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}80%{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-ms-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(.95);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}to{-webkit-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-ms-transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);transform:perspective(800px) translateZ(0) rotateY(1turn) scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}.om-animation-flip{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;-ms-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flip;animation-name:flip}@-webkit-keyframes flipInX{0%{-webkit-transform:perspective(800px) rotateX(90deg);transform:perspective(800px) rotateX(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateX(-10deg);transform:perspective(800px) rotateX(-10deg)}70%{-webkit-transform:perspective(800px) rotateX(10deg);transform:perspective(800px) rotateX(10deg)}to{-webkit-transform:perspective(800px) rotateX(0deg);transform:perspective(800px) rotateX(0deg);opacity:1}}@keyframes flipInX{0%{-webkit-transform:perspective(800px) rotateX(90deg);-ms-transform:perspective(800px) rotateX(90deg);transform:perspective(800px) rotateX(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateX(-10deg);-ms-transform:perspective(800px) rotateX(-10deg);transform:perspective(800px) rotateX(-10deg)}70%{-webkit-transform:perspective(800px) rotateX(10deg);-ms-transform:perspective(800px) rotateX(10deg);transform:perspective(800px) rotateX(10deg)}to{-webkit-transform:perspective(800px) rotateX(0deg);-ms-transform:perspective(800px) rotateX(0deg);transform:perspective(800px) rotateX(0deg);opacity:1}}.om-animation-flip-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;-ms-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flipInX;animation-name:flipInX}@-webkit-keyframes flipInY{0%{-webkit-transform:perspective(800px) rotateY(90deg);transform:perspective(800px) rotateY(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateY(-10deg);transform:perspective(800px) rotateY(-10deg)}70%{-webkit-transform:perspective(800px) rotateY(10deg);transform:perspective(800px) rotateY(10deg)}to{-webkit-transform:perspective(800px) rotateY(0deg);transform:perspective(800px) rotateY(0deg);opacity:1}}@keyframes flipInY{0%{-webkit-transform:perspective(800px) rotateY(90deg);-ms-transform:perspective(800px) rotateY(90deg);transform:perspective(800px) rotateY(90deg);opacity:0}40%{-webkit-transform:perspective(800px) rotateY(-10deg);-ms-transform:perspective(800px) rotateY(-10deg);transform:perspective(800px) rotateY(-10deg)}70%{-webkit-transform:perspective(800px) rotateY(10deg);-ms-transform:perspective(800px) rotateY(10deg);transform:perspective(800px) rotateY(10deg)}to{-webkit-transform:perspective(800px) rotateY(0deg);-ms-transform:perspective(800px) rotateY(0deg);transform:perspective(800px) rotateY(0deg);opacity:1}}.om-animation-flip-side{-webkit-animation-duration:1s;animation-duration:1s;-webkit-backface-visibility:visible;-ms-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flipInY;animation-name:flipInY}@-webkit-keyframes lightSpeedIn{0%{-webkit-transform:translateX(100%) skewX(-30deg);transform:translateX(100%) skewX(-30deg);opacity:0}60%{-webkit-transform:translateX(-20%) skewX(30deg);transform:translateX(-20%) skewX(30deg);opacity:1}80%{-webkit-transform:translateX(0) skewX(-15deg);transform:translateX(0) skewX(-15deg);opacity:1}to{-webkit-transform:translateX(0) skewX(0deg);transform:translateX(0) skewX(0deg);opacity:1}}@keyframes lightSpeedIn{0%{-webkit-transform:translateX(100%) skewX(-30deg);-ms-transform:translateX(100%) skewX(-30deg);transform:translateX(100%) skewX(-30deg);opacity:0}60%{-webkit-transform:translateX(-20%) skewX(30deg);-ms-transform:translateX(-20%) skewX(30deg);transform:translateX(-20%) skewX(30deg);opacity:1}80%{-webkit-transform:translateX(0) skewX(-15deg);-ms-transform:translateX(0) skewX(-15deg);transform:translateX(0) skewX(-15deg);opacity:1}to{-webkit-transform:translateX(0) skewX(0deg);-ms-transform:translateX(0) skewX(0deg);transform:translateX(0) skewX(0deg);opacity:1}}.om-animation-light-speed{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:lightSpeedIn;animation-name:lightSpeedIn;-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}@-webkit-keyframes pulse{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.1);transform:scale(1.1)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes pulse{0%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1)}to{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}.om-animation-pulse{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:pulse;animation-name:pulse}@-webkit-keyframes rollIn{0%{opacity:0;-webkit-transform:translateX(-100%) rotate(-120deg);transform:translateX(-100%) rotate(-120deg)}to{opacity:1;-webkit-transform:translateX(0) rotate(0deg);transform:translateX(0) rotate(0deg)}}@keyframes rollIn{0%{opacity:0;-webkit-transform:translateX(-100%) rotate(-120deg);-ms-transform:translateX(-100%) rotate(-120deg);transform:translateX(-100%) rotate(-120deg)}to{opacity:1;-webkit-transform:translateX(0) rotate(0deg);-ms-transform:translateX(0) rotate(0deg);transform:translateX(0) rotate(0deg)}}.om-animation-roll-in{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rollIn;animation-name:rollIn}@-webkit-keyframes rotateIn{0%{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(-200deg);transform:rotate(-200deg);opacity:0}to{-webkit-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateIn{0%{-webkit-transform-origin:center center;-ms-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(-200deg);-ms-transform:rotate(-200deg);transform:rotate(-200deg);opacity:0}to{-webkit-transform-origin:center center;-ms-transform-origin:center center;transform-origin:center center;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateIn;animation-name:rotateIn}@-webkit-keyframes rotateInDownLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInDownLeft{0%{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(-90deg);-ms-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-down-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInDownLeft;animation-name:rotateInDownLeft}@-webkit-keyframes rotateInDownRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInDownRight{0%{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-down-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInDownRight;animation-name:rotateInDownRight}@-webkit-keyframes rotateInUpLeft{0%{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInUpLeft{0%{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg);opacity:0}to{-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-up-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInUpLeft;animation-name:rotateInUpLeft}@-webkit-keyframes rotateInUpRight{0%{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);transform:rotate(0);opacity:1}}@keyframes rotateInUpRight{0%{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(-90deg);-ms-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);opacity:1}}.om-animation-rotate-up-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:rotateInUpRight;animation-name:rotateInUpRight}@-webkit-keyframes rubberBand{0%{-webkit-transform:scale(1);transform:scale(1)}30%{-webkit-transform:scaleX(1.25) scaleY(.75);transform:scaleX(1.25) scaleY(.75)}40%{-webkit-transform:scaleX(.75) scaleY(1.25);transform:scaleX(.75) scaleY(1.25)}60%{-webkit-transform:scaleX(1.15) scaleY(.85);transform:scaleX(1.15) scaleY(.85)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes rubberBand{0%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}30%{-webkit-transform:scaleX(1.25) scaleY(.75);-ms-transform:scaleX(1.25) scaleY(.75);transform:scaleX(1.25) scaleY(.75)}40%{-webkit-transform:scaleX(.75) scaleY(1.25);-ms-transform:scaleX(.75) scaleY(1.25);transform:scaleX(.75) scaleY(1.25)}60%{-webkit-transform:scaleX(1.15) scaleY(.85);-ms-transform:scaleX(1.15) scaleY(.85);transform:scaleX(1.15) scaleY(.85)}to{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}.om-animation-rubber-band{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:rubberBand;animation-name:rubberBand}@-webkit-keyframes shake{0%,to{-webkit-transform:translateX(0);transform:translateX(0)}10%,30%,50%,70%,90%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}20%,40%,60%,80%{-webkit-transform:translateX(10px);transform:translateX(10px)}}@keyframes shake{0%,to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}10%,30%,50%,70%,90%{-webkit-transform:translateX(-10px);-ms-transform:translateX(-10px);transform:translateX(-10px)}20%,40%,60%,80%{-webkit-transform:translateX(10px);-ms-transform:translateX(10px);transform:translateX(10px)}}.om-animation-shake{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-name:shake;animation-name:shake}@-webkit-keyframes slideInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);transform:translateY(-2000px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes slideInDown{0%{opacity:0;-webkit-transform:translateY(-2000px);-ms-transform:translateY(-2000px);transform:translateY(-2000px)}to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}}.om-animation-slide-in-down{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInDown;animation-name:slideInDown}@-webkit-keyframes slideInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);transform:translateX(-2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes slideInLeft{0%{opacity:0;-webkit-transform:translateX(-2000px);-ms-transform:translateX(-2000px);transform:translateX(-2000px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-slide-in-left{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInLeft;animation-name:slideInLeft}@-webkit-keyframes slideInRight{0%{opacity:0;-webkit-transform:translateX(2000px);transform:translateX(2000px)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes slideInRight{0%{opacity:0;-webkit-transform:translateX(2000px);-ms-transform:translateX(2000px);transform:translateX(2000px)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-slide-in-right{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:slideInRight;animation-name:slideInRight}@-webkit-keyframes swing{20%{-webkit-transform:rotate(15deg);transform:rotate(15deg)}40%{-webkit-transform:rotate(-10deg);transform:rotate(-10deg)}60%{-webkit-transform:rotate(5deg);transform:rotate(5deg)}80%{-webkit-transform:rotate(-5deg);transform:rotate(-5deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@keyframes swing{20%{-webkit-transform:rotate(15deg);-ms-transform:rotate(15deg);transform:rotate(15deg)}40%{-webkit-transform:rotate(-10deg);-ms-transform:rotate(-10deg);transform:rotate(-10deg)}60%{-webkit-transform:rotate(5deg);-ms-transform:rotate(5deg);transform:rotate(5deg)}80%{-webkit-transform:rotate(-5deg);-ms-transform:rotate(-5deg);transform:rotate(-5deg)}to{-webkit-transform:rotate(0deg);-ms-transform:rotate(0deg);transform:rotate(0deg)}}.om-animation-swing{-webkit-animation-duration:1s;animation-duration:1s;-webkit-transform-origin:top center;-ms-transform-origin:top center;transform-origin:top center;-webkit-animation-name:swing;animation-name:swing}@-webkit-keyframes tada{0%{-webkit-transform:scale(1);transform:scale(1)}10%,20%{-webkit-transform:scale(.9) rotate(-3deg);transform:scale(.9) rotate(-3deg)}30%,50%,70%,90%{-webkit-transform:scale(1.1) rotate(3deg);transform:scale(1.1) rotate(3deg)}40%,60%,80%{-webkit-transform:scale(1.1) rotate(-3deg);transform:scale(1.1) rotate(-3deg)}to{-webkit-transform:scale(1) rotate(0);transform:scale(1) rotate(0)}}@keyframes tada{0%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}10%,20%{-webkit-transform:scale(.9) rotate(-3deg);-ms-transform:scale(.9) rotate(-3deg);transform:scale(.9) rotate(-3deg)}30%,50%,70%,90%{-webkit-transform:scale(1.1) rotate(3deg);-ms-transform:scale(1.1) rotate(3deg);transform:scale(1.1) rotate(3deg)}40%,60%,80%{-webkit-transform:scale(1.1) rotate(-3deg);-ms-transform:scale(1.1) rotate(-3deg);transform:scale(1.1) rotate(-3deg)}to{-webkit-transform:scale(1) rotate(0);-ms-transform:scale(1) rotate(0);transform:scale(1) rotate(0)}}.om-animation-tada{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:tada;animation-name:tada}@-webkit-keyframes wobble{0%{-webkit-transform:translateX(0);transform:translateX(0)}15%{-webkit-transform:translateX(-25%) rotate(-5deg);transform:translateX(-25%) rotate(-5deg)}30%{-webkit-transform:translateX(20%) rotate(3deg);transform:translateX(20%) rotate(3deg)}45%{-webkit-transform:translateX(-15%) rotate(-3deg);transform:translateX(-15%) rotate(-3deg)}60%{-webkit-transform:translateX(10%) rotate(2deg);transform:translateX(10%) rotate(2deg)}75%{-webkit-transform:translateX(-5%) rotate(-1deg);transform:translateX(-5%) rotate(-1deg)}to{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes wobble{0%{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}15%{-webkit-transform:translateX(-25%) rotate(-5deg);-ms-transform:translateX(-25%) rotate(-5deg);transform:translateX(-25%) rotate(-5deg)}30%{-webkit-transform:translateX(20%) rotate(3deg);-ms-transform:translateX(20%) rotate(3deg);transform:translateX(20%) rotate(3deg)}45%{-webkit-transform:translateX(-15%) rotate(-3deg);-ms-transform:translateX(-15%) rotate(-3deg);transform:translateX(-15%) rotate(-3deg)}60%{-webkit-transform:translateX(10%) rotate(2deg);-ms-transform:translateX(10%) rotate(2deg);transform:translateX(10%) rotate(2deg)}75%{-webkit-transform:translateX(-5%) rotate(-1deg);-ms-transform:translateX(-5%) rotate(-1deg);transform:translateX(-5%) rotate(-1deg)}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}}.om-animation-wobble{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-name:wobble;animation-name:wobble}.om-content-lock{color:transparent!important;text-shadow:rgba(0,0,0,.5) 0 0 10px;-webkit-user-select:none;-moz-user-select:none;user-select:none;pointer-events:none;filter:url("data:image/svg+xml;utf9,<svg%20version='1.1'%20xmlns='http://www.w3.org/2000/svg'><filter%20id='blur'><feGaussianBlur%20stdDeviation='10'%20/></filter></svg>#blur");-webkit-filter:blur(10px);-ms-filter:blur(10px);-o-filter:blur(10px);filter:blur(10px)}html.om-mobile-position,html.om-mobile-position body{position:fixed!important}html.om-ios-form,html.om-ios-form body{-webkit-transform:translateZ(0)!important;transform:translateZ(0)!important;-webkit-overflow-scrolling:touch!important;height:100%!important;overflow:auto!important}html.om-position-popup body{overflow:hidden!important}html.om-position-floating-top{transition:padding-top .5s ease!important}html.om-position-floating-bottom{transition:padding-bottom .5s ease!important}html.om-reset-dimensions{height:100%!important;width:100%!important}</style><link rel="stylesheet" href="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/css.css" media="all"><meta class="foundation-mq"><link rel="stylesheet" href="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/css_002.css" media="all"><script src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/analytics.js" async=""></script><style type="text/css">
  /* === Form-Specific Styles === */
  /* stylelint-disable */

  #drip-129969 .drip-content,
  #drip-129969 .drip-header {
    background: rgb(223,75,75) !important;
    background: rgba(223,75,75,0.90) !important;
  }

  #drip-129969 .drip-content h3 {
    color: #e56f6f !important;
    font-size: 23px !important;
  }

  #drip-129969 .drip-submit-button {
    background-color: #e56f6f !important;
    font-size: 13px !important;
  }

  #drip-129969 .drip-submit-button:hover {
    background-color: #e25d5d !important;
  }

  #drip-129969 .drip-submit-button:active {
    background-color: #c94444 !important;
  }

  #drip-129969 dl dt,
  #drip-129969 .drip-content .drip-description,
  #drip-129969 .drip-content .classic--checkbox,
  #drip-129969 .drip-errors {
    font-size: 14px !important;
  }

  #drip-129969 .drip-text-field {
    font-size: 15px !important;
  }

  /* === Reset styles === */

  .drip-tab h1,
  .drip-tab h2,
  .drip-tab h3,
  .drip-tab div,
  .drip-tab dl,
  .drip-tab dt,
  .drip-tab dd,
  .drip-tab p,
  .drip-tab a,
  .drip-tab .drip-text-field,
  .drip-tab .drip-text-field:focus,
  .drip-tab .drip-submit-button {
    margin: 0;
    padding: 0;
    border: 0;
    font-size: 100%;
    font: inherit;
    vertical-align: baseline;
    float: none;
    width: auto;
    background-image: none;
    letter-spacing: 0;
    -webkit-box-shadow: none;
       -moz-box-shadow: none;
            box-shadow: none;
    -webkit-text-shadow: none !important;
       -moz-text-shadow: none !important;
            text-shadow: none !important;
  }

  .drip-tab a {
    text-decoration: none;
  }

  .drip-tab :focus {
    outline: 0;
  }

  /* === Clearfix === */

  .drip-clearfix:after {
    visibility: hidden;
    display: block;
    font-size: 0;
    content: " ";
    clear: both;
    height: 0;
  }
  * html .drip-clearfix             { zoom: 1; } /* IE6 */
  *:first-child+html .drip-clearfix { zoom: 1; } /* IE7 */

  /* === Main Container === */

  .drip-tab-container * {
    box-sizing: content-box;
  }

  /* === Content === */

  .drip-tab .drip-content {
    margin: 0;
    padding: 5px;
    width: 330px;
    position: fixed;
    font-size: 100%;
    font: inherit;
    z-index: 10000;
    color: #333;
    vertical-align: baseline;
    text-align: left;
    box-sizing: border-box;
    -webkit-box-shadow: 0px 0px 20px rgba(0,0,0,0.25);
       -moz-box-shadow: 0px 0px 20px rgba(0,0,0,0.25);
            box-shadow: 0px 0px 20px rgba(0,0,0,0.25);
  }

  .drip-tab.bottom .drip-content {
    bottom: -800px;
    -webkit-border-radius: 8px 8px 0 0;
       -moz-border-radius: 8px 8px 0 0;
            border-radius: 8px 8px 0 0;
    -webkit-transition: bottom 200ms ease-in;
       -moz-transition: bottom 200ms ease-in;
         -o-transition: bottom 200ms ease-in;
            transition: bottom 200ms ease-in;
  }

  .drip-tab.bottom.left .drip-content {
    left: 40px;
  }

  .drip-tab.bottom.right .drip-content {
    right: 40px;
  }

  .drip-tab.image-left .drip-content,
  .drip-tab.image-right .drip-content {
    width: 510px;
  }

  .drip-tab.side .drip-content {
    top: 10%;
  }

  .drip-tab.side.right .drip-content {
    right: -550px;
    -webkit-border-radius: 8px 0 0 8px;
       -moz-border-radius: 8px 0 0 8px;
            border-radius: 8px 0 0 8px;
    -webkit-transition: right 200ms ease-in;
       -moz-transition: right 200ms ease-in;
         -o-transition: right 200ms ease-in;
            transition: right 200ms ease-in;
  }

  .drip-tab.side.left .drip-content {
    left: -550px;
    -webkit-border-radius: 0 8px 8px 0;
       -moz-border-radius: 0 8px 8px 0;
            border-radius: 0 8px 8px 0;
    -webkit-transition: left 200ms ease-in;
       -moz-transition: left 200ms ease-in;
         -o-transition: left 200ms ease-in;
            transition: left 200ms ease-in;
  }

  .drip-tab.mobile .drip-content {
    width: 100% !important;
    bottom: -800px;
    left: 0;
    -webkit-border-radius: 0;
       -moz-border-radius: 0;
            border-radius: 0;
    -webkit-transition: bottom 200ms ease-in;
       -moz-transition: bottom 200ms ease-in;
         -o-transition: bottom 200ms ease-in;
            transition: bottom 200ms ease-in;
  }

  .drip-tab.drip-scrollable .drip-content {
    overflow-y: scroll;
  }

  /* === Header === */

  .drip-tab .drip-header {
    margin: 0;
    padding: 0;
    position: fixed;
    font-size: 100%;
    font: inherit;
    z-index: 10000;
    color: #333;
    vertical-align: baseline;
    text-align: left;
    -webkit-border-radius: 8px 8px 0 0;
       -moz-border-radius: 8px 8px 0 0;
            border-radius: 8px 8px 0 0;
    -webkit-box-shadow: 0px 10px 28px rgba(0,0,0,0.36);
       -moz-box-shadow: 0px 10px 28px rgba(0,0,0,0.36);
            box-shadow: 0px 10px 28px rgba(0,0,0,0.36);
  }

  .drip-tab.bottom .drip-header {
    width: 330px;
    bottom: 0;
    -webkit-transition: bottom 200ms ease-in;
       -moz-transition: bottom 200ms ease-in;
         -o-transition: bottom 200ms ease-in;
            transition: bottom 200ms ease-in;
  }

  .drip-tab.bottom .drip-header.drip-hidden {
    bottom: -800px;
  }

  .drip-tab.bottom.left .drip-header {
    left: 40px;
  }

  .drip-tab.bottom.right .drip-header {
    right: 40px;
  }

  .drip-tab.bottom.image-left .drip-header,
  .drip-tab.bottom.image-right .drip-header {
    width: 510px;
  }

  .drip-tab.side .drip-header {
    width: 330px;
    top: 10%;
  }

  .drip-tab.side.right .drip-header {
    right: -100px;
    -webkit-transition: right 400ms ease-in;
       -moz-transition: right 400ms ease-in;
         -o-transition: right 400ms ease-in;
            transition: right 400ms ease-in;
    -webkit-transform: rotate(-90deg) !important;
       -moz-transform: rotate(-90deg) !important;
        -ms-transform: rotate(-90deg) !important;
         -o-transform: rotate(-90deg) !important;
            transform: rotate(-90deg) !important;
    -webkit-transform-origin: right center;
       -moz-transform-origin: right center;
         -o-transform-origin: right center;
            transform-origin: right center;
  }

  .drip-tab.side.right .drip-header.drip-hidden {
    right: -100px;
  }

  .drip-tab.side.left .drip-header {
    left: -100px;
    -webkit-transition: left 400ms ease-in;
       -moz-transition: left 400ms ease-in;
         -o-transition: left 400ms ease-in;
            transition: left 400ms ease-in;
    -webkit-transform: rotate(90deg) !important;
       -moz-transform: rotate(90deg) !important;
        -ms-transform: rotate(90deg) !important;
         -o-transform: rotate(90deg) !important;
            transform: rotate(90deg) !important;
    -webkit-transform-origin: left center;
       -moz-transform-origin: left center;
         -o-transform-origin: left center;
            transform-origin: left center;
  }

  .drip-tab.side.left .drip-header.drip-hidden {
    left: -100px;
  }

  .drip-tab.mobile .drip-header {
    width: 100% !important;
    bottom: 0;
    left: 0;
    -webkit-border-radius: 0;
       -moz-border-radius: 0;
            border-radius: 0;
    -webkit-transition: bottom 200ms ease-in;
       -moz-transition: bottom 200ms ease-in;
         -o-transition: bottom 200ms ease-in;
            transition: bottom 200ms ease-in;
  }

  .drip-tab.mobile .drip-header.drip-hidden {
    bottom: -300px;
  }

  /* === Header Toggle === */

  .drip-tab .drip-toggle {
    display: block;
    text-decoration: none;
    padding: 10px 50px 10px 20px; /* extra padding for the arrow */
  }

  /* === Teaser === */

  .drip-tab .drip-header h2 {
    display: block;
    margin: 0 !important;
    padding: 0 !important;
    border: 0 !important;
    font-size: 14px !important;
    line-height: 1.5 !important;
    font-weight: bold !important;
    text-align: left !important;
    color: #fff !important;
    clear: none !important;
    letter-spacing: 0 !important;
    width: auto !important;
  }

  /* === Arrows === */

  .drip-tab .drip-header span.drip-arrow {
    display: block;
    position: absolute;
    margin: 0;
    padding: 0;
    width: 0;
    height: 0;
    line-height: 0;
    top: 17px;
    right: 32px;
  }

  /* === Panel === */

  .drip-tab .drip-content > div.drip-panel {
    padding: 15px 15px 12px;
    background-color: #fff;
    -webkit-border-radius: 6px;
       -moz-border-radius: 6px;
            border-radius: 6px;
  }

  /* === Powered By === */

  .drip-tab .drip-powered-by {
    padding: 8px;
    margin-bottom: -5px;
    font-family: Helvetica, Arial, sans-serif;
    text-align: left;
    font-weight: bold;
    font-size: 10px;
    line-height: 16px;
    color: #ffffff;
    letter-spacing: 1px;
    text-align: center;
    text-transform: uppercase;
    display: -webkit-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .drip-tab .drip-powered-by a {
    color: #ffffff !important;
    text-decoration: underline !important;
    letter-spacing: 1px;
    margin-left: 6px;
  }

  /* === Content Headings & Paragraphs === */

  .drip-tab .drip-content h3 {
    display: block;
    margin: 0 20px 0 0 !important;
    padding: 0 0 15px 0 !important;
    line-height: 1.4 !important;
    font-weight: bold !important;
    text-align: left !important;
    color: #4477bd !important;
    clear: none !important;
  }

  .drip-tab .drip-content .drip-description {
    margin: 0;
    padding: 0 0 20px 0;
    line-height: 1.6;
    text-align: left;
  }

  .drip-tab.image-left .drip-content .drip-description {
    margin-left: 170px;
  }

  .drip-tab.image-right .drip-content .drip-description {
    margin-right: 170px;
  }

  @media screen and (max-width: 510px) {
    .drip-tab.image-left .drip-content .drip-description {
      margin-left: 0; /* 120px; */
    }

    .drip-tab.image-right .drip-content .drip-description {
      margin-right: 0; /* 120px; */
    }
  }

  .drip-tab .drip-content .drip-description a {
    text-decoration: underline;
  }

  .drip-tab .drip-content .drip-description em {
    font-style: italic;
  }

  .drip-tab .drip-content .drip-description ul,
  .drip-tab .drip-content .drip-description ol {
    list-style-position: outside;
    margin: 8px 0 8px 30px;
  }

  .drip-tab .drip-content .drip-description ul li
  .drip-tab .drip-content .drip-description ol li {
    padding: 0;
  }

  .drip-tab .drip-content img.drip-image {
    margin-bottom: 20px;
  }

  .drip-tab.image-left .drip-content img.drip-image {
    float: left;
    width: 150px;
  }

  .drip-tab.image-right .drip-content img.drip-image {
    float: right;
    width: 150px;
  }

  @media screen and (max-width: 510px) {
    .drip-tab.image-left .drip-content img.drip-image {
      margin-right: 20px;
      width: 100px;
    }

    .drip-tab.image-right .drip-content img.drip-image {
      margin-left: 20px;
      width: 100px;
    }
  }

  .drip-tab .drip-content a.drip-close {
    font-family: Arial, Helvetica, sans-serif;
    margin: -1px 0 0 0;
    float: right;
    font-size: 28px;
    line-height: 15px;
    font-weight: normal;
    color: #333;
    opacity: 0.4;
  }

  .drip-tab .drip-content a.drip-close:hover {
    text-decoration: none;
    cursor: pointer;
    opacity: 0.6;
  }

  /* === Content Subscribe Form === */

  .drip-tab form {
    margin: 0 !important;
    padding: 0 !important;
  }

  .drip-tab dl {
    display: block;
    margin: 0;
    padding: 0;
  }

  .drip-tab dl dt {
    display: block;
    padding: 0 0 5px 0;
    font-weight: bold;
  }

  .drip-tab dl.no-labels dt {
    display: none;
  }

  .drip-tab dl dd {
    display: block;
    padding: 0 0 10px 0;
  }

  .drip-tab .drip-text-field {
    margin: 0 !important;
    padding: 6px !important;
    height: auto !important;
    width: 100% !important;
    color: #333 !important;
    background-color: #fff !important;
    border: 1px solid #c4c4c4 !important;
    -webkit-box-shadow: inset 0 0 3px rgba(0,0,0,0.18) !important;
       -moz-box-shadow: inset 0 0 3px rgba(0,0,0,0.18) !important;
            box-shadow: inset 0 0 3px rgba(0,0,0,0.18) !important;
    -webkit-border-radius: 4px !important;
       -moz-border-radius: 4px !important;
            border-radius: 4px !important;
    -webkit-box-sizing: border-box !important;
       -moz-box-sizing: border-box !important;
        -ms-box-sizing: border-box !important;
            box-sizing: border-box !important;
    background-image: none !important;
    min-width: 0 !important;
    min-height: 0 !important;
  }

  .drip-tab .drip-text-field::-webkit-input-placeholder { /* WebKit browsers */
    color: #999999 !important;
  }
  .drip-tab .drip-text-field:-moz-placeholder { /* Mozilla Firefox 4 to 18 */
    color: #999999 !important;
  }
  .drip-tab .drip-text-field::-moz-placeholder { /* Mozilla Firefox 19+ */
    color: #999999 !important;
  }
  .drip-tab .drip-text-field:-ms-input-placeholder { /* Internet Explorer 10+ */
    color: #999999 !important;
  }

  .drip-tab .drip-text-field:focus {
    border-color: #a4a4a4 !important;
    outline: 0;
    background-image: none;
    background-color: #fff !important;
  }

  .drip-tab.mobile .drip-text-field {
    font-size: 16px;
  }

  .drip-tab .drip-errors {
    padding: 5px 0 0 0;
    font-weight: normal;
    color: red;
  }

  .drip-tab .drip-submit-button {
    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif !important;
    padding: 3px 12px !important;
    color: #ffffff !important;
    font-weight: bold !important;
    line-height: 1.6 !important;
    border: 0 !important;
    -webkit-border-radius: 15px !important;
       -moz-border-radius: 15px !important;
            border-radius: 15px !important;
    cursor: pointer !important;
    background-image: none !important;
    min-width: 0 !important;
    min-height: 0 !important;
    height: auto;
  }

  .drip-tab .drip-submit-button:hover {
    background-image: none !important;
  }

  .drip-tab .drip-submit-button:active {
    background-image: none !important;
  }

  /* checkbox */
  .drip-tab .classic--checkbox.hidden {
    margin-bottom: -8px;
    display: none;
  }

  .drip-tab .classic--checkbox input[type="checkbox"] {
    display: inline-block;
    width: auto;
  }

  /* stylelint-enable */

</style></head>
<body class="post-template-default single single-post postid-6092 single-format-standard gecko alt-style-default two-col-left width-960 two-col-left-960 full-width full-header full-footer">
<div id="wrapper">

	<div id="inner-wrapper">

	    <!--#header-container-->
    <div id="header-container">
<h3 class="nav-toggle icon"><a href="#navigation">Navigation</a></h3>

	<header id="header" class="col-full">

		<div id="logo">
<a href="https://www.pyimagesearch.com/" title="Be awesome at OpenCV, Python, deep learning, and computer vision"><img src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/logo.png" alt="PyImageSearch"></a>
<span class="site-title"><a href="https://www.pyimagesearch.com/">PyImageSearch</a></span>
<span class="site-description">Be awesome at OpenCV, Python, deep learning, and computer vision</span>
</div>

	</header>

	    </div><!--/#header-container-->
    <!--#nav-container-->
    <div id="nav-container">
<nav id="navigation" class="col-full" role="navigation">

	<section class="menus">

		<a href="https://www.pyimagesearch.com/" class="nav-home"><span>Home</span></a>

	<h3>Main Menu</h3><ul id="main-nav" class="nav fl"><li id="menu-item-4519" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4519"><a href="https://www.pyimagesearch.com/start-here-learn-computer-vision-opencv/">Start Here</a></li>
<li id="menu-item-2616" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2616"><a href="https://www.pyimagesearch.com/practical-python-opencv/">Practical Python and OpenCV</a></li>
<li id="menu-item-2617" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2617"><a href="https://www.pyimagesearch.com/pyimagesearch-gurus/">PyImageSearch Gurus</a></li>
<li id="menu-item-2615" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2615"><a href="https://www.pyimagesearch.com/opencv-tutorials-resources-guides/">OpenCV 3 &amp; 4 Tutorials</a></li>
<li id="menu-item-9774" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-9774"><a href="https://www.pyimagesearch.com/free-opencv-computer-vision-deep-learning-crash-course/">FREE Crash Course</a></li>
<li id="menu-item-2619" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2619"><a href="https://www.pyimagesearch.com/about/">About</a></li>
<li id="menu-item-6744" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-6744"><a href="https://www.pyimagesearch.com/contact/">Contact</a></li>
</ul>
	</section><!-- /.menus -->

	<a href="#top" class="nav-close"><span>Return to Content</span></a>

</nav>
    </div><!--/#nav-container-->
       
    <!-- #content Starts -->
	    <div id="content" class="col-full">
    
    	<div id="main-sidebar-container">    

            <!-- #main Starts -->
                        <section id="main">                       
<article class="post-6092 post type-post status-publish format-standard hentry category-deep-learning-2 category-object-detection category-opencv-3 category-tutorials tag-cnn tag-coco tag-convolutional-neural-network tag-deep-learning tag-machine-learning tag-opencv-3 tag-pascal-voc tag-real-time tag-video tag-video-stream">
	<header>
	<h1 class="title">Real-time object detection with deep learning and OpenCV</h1>	</header>
<div class="post-meta"><span class="small">By</span> <span class="author vcard"><span class="fn"><a href="https://www.pyimagesearch.com/author/adrian/" title="Posts by Adrian Rosebrock" rel="author">Adrian Rosebrock</a></span></span> <span class="small">on</span> <abbr class="date time published" title="2017-09-18T10:00:46-0400">September 18, 2017</abbr>  <span class="small">in</span> <span class="categories"><a href="https://www.pyimagesearch.com/category/deep-learning-2/" title="View all items in Deep Learning">Deep Learning</a>, <a href="https://www.pyimagesearch.com/category/object-detection/" title="View all items in Object Detection">Object Detection</a>, <a href="https://www.pyimagesearch.com/category/opencv-3/" title="View all items in OpenCV 3">OpenCV 3</a>, <a href="https://www.pyimagesearch.com/category/tutorials/" title="View all items in Tutorials">Tutorials</a></span>  
</div> <!-- Close out Post Meta div -->

<div id="pyis-optinmonster-sticky-anchor"></div>

<div id="pyis-optinmonster-sticky-bar" data-sticky-container="" class="sticky-container" style="height: 67px;">

	<div class="sticky is-at-top is-stuck" data-sticky="fygcr7-sticky" data-options="topAnchor: pyis-optinmonster-sticky-anchor:top; marginTop: 0; stickyOn: small;" data-resize="8ihosj-sticky" data-mutate="8ihosj-sticky" style="max-width: 622.933px; margin-top: 0em; top: 0px; bottom: auto;" data-events="mutate">
		
		<a href="https://app.monstercampaigns.com/c/tortsem7qkvyuxc4cyfi/" id="pyis-optinmonster-open-modal" data-optin-slug="tortsem7qkvyuxc4cyfi">
			
			<img src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/python_icon.png" alt="Python File Icon">
			
			<span class="link-text">
			
				Click here to download the source code to this post				
			</span>
			
			<div class="clearfix"></div>
			
		</a>
		
	</div>
	
<!-- Our div gets closed out by the one originally intended for Post Meta --></div>
	<section class="entry">
<p><img class="aligncenter wp-image-6104" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/real_time_object_detection_animation.gif" width="350" height="214"></p>
<p>Today’s blog post was inspired by PyImageSearch reader, Emmanuel. Emmanuel emailed me after last week’s tutorial on <a href="https://www.pyimagesearch.com/2017/09/11/object-detection-with-deep-learning-and-opencv/" target="_blank" rel="noopener">object detection with deep learning + OpenCV</a> and asked:</p>
<blockquote><p>“Hi Adrian,</p>
<p>I really enjoyed last week’s blog post on <a href="https://www.pyimagesearch.com/2017/09/11/object-detection-with-deep-learning-and-opencv/" target="_blank" rel="noopener">object detection with deep learning and OpenCV</a>, thanks for putting it together and for making deep learning with OpenCV so accessible.</p>
<p>I want to apply the same technique to real-time video.</p>
<p>What is the best way to do this?</p>
<p>How can I achieve the most efficiency?</p>
<p>If you could do a tutorial on real-time object detection with deep learning and OpenCV I would really appreciate it.”</p></blockquote>
<p>Great question, thanks for asking Emmanuel.</p>
<p>Luckily, extending our previous tutorial on object detection with deep learning and OpenCV to <em><strong>real-time video streams</strong></em> is fairly straightforward — we simply need to combine some <a href="https://www.pyimagesearch.com/2016/01/04/unifying-picamera-and-cv2-videocapture-into-a-single-class-with-opencv/" target="_blank" rel="noopener">efficient, boilerplate code for real-time video access</a> and then add in our object detection.</p>
<p><strong>By the end of this tutorial you’ll be able to apply deep 
learning-based object detection to real-time video streams using OpenCV 
and Python — to learn how, <em>just keep reading</em>.</strong></p>
<div style="padding-top: 10px; padding-bottom: 15px; padding-right: 10px; height: 70px; background: url('https://www.pyimagesearch.com/wp-content/uploads/2014/02/download-code-icon.png'); background-size: 70px 70px; background-repeat: no-repeat;">
<p style="margin-top: 1px; margin-left: 80px; font-weight: bold;">Looking for the source code to this post?<br>
<a id="scroll_to_code" href="#">Jump right to the downloads section.</a></p>
</div>
<h2>Real-time object detection with deep learning and OpenCV</h2>
<p>Today’s blog post is broken into two parts.</p>
<p>In the first part we’ll learn how to extend <a href="https://www.pyimagesearch.com/2017/09/11/object-detection-with-deep-learning-and-opencv/" target="_blank" rel="noopener">last week’s tutorial</a>
 to apply real-time object detection using deep learning and OpenCV to 
work with video streams and video files. This will be accomplished using
 the highly efficient 
			<span id="crayon-5c93d9077ce98334310316" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">VideoStream</span></span></span>&nbsp; class discussed <a href="https://www.pyimagesearch.com/2016/01/04/unifying-picamera-and-cv2-videocapture-into-a-single-class-with-opencv/" target="_blank" rel="noopener">in this tutorial</a>.</p>
<p>From there, we’ll apply our deep learning + object detection code to actual video streams and measure the FPS processing rate.</p>
<h3>Object detection in video with deep learning and OpenCV</h3>
<p>To build our deep learning-based real-time object detector with 
OpenCV we’ll need to (1) access our webcam/video stream in an efficient 
manner and (2) apply object detection to each frame.</p>
<p>To see how this is done, open up a new file, name it&nbsp;
			<span id="crayon-5c93d9077cea7238739564" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">real_time_object_detection</span><span class="crayon-e">.py</span></span></span>&nbsp; and insert the following code:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93d9077ceac856328874" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">Real-time object detection with deep learning and OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft"># import the necessary packages
from imutils.video import VideoStream
from imutils.video import FPS
import numpy as np
import argparse
import imutils
import time
import cv2</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93d9077ceac856328874-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077ceac856328874-2">2</div><div class="crayon-num" data-line="crayon-5c93d9077ceac856328874-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077ceac856328874-4">4</div><div class="crayon-num" data-line="crayon-5c93d9077ceac856328874-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077ceac856328874-6">6</div><div class="crayon-num" data-line="crayon-5c93d9077ceac856328874-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077ceac856328874-8">8</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93d9077ceac856328874-1"><span class="crayon-c"># import the necessary packages</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077ceac856328874-2"><span class="crayon-st">from</span><span class="crayon-h"> </span><span class="crayon-v">imutils</span><span class="crayon-sy">.</span><span class="crayon-e">video </span><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-e">VideoStream</span></div><div class="crayon-line" id="crayon-5c93d9077ceac856328874-3"><span class="crayon-st">from</span><span class="crayon-h"> </span><span class="crayon-v">imutils</span><span class="crayon-sy">.</span><span class="crayon-e">video </span><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-e">FPS</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077ceac856328874-4"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-e">numpy </span><span class="crayon-st">as</span><span class="crayon-h"> </span><span class="crayon-e">np</span></div><div class="crayon-line" id="crayon-5c93d9077ceac856328874-5"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-k ">argparse</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077ceac856328874-6"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-e">imutils</span></div><div class="crayon-line" id="crayon-5c93d9077ceac856328874-7"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-k ">time</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077ceac856328874-8"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0022 seconds] -->
<p>We begin by importing packages on <strong>Lines 2-8</strong>. For this tutorial, you will need <a href="https://www.pyimagesearch.com/2015/02/02/just-open-sourced-personal-imutils-package-series-opencv-convenience-functions/" target="_blank" rel="noopener">imutils</a> and OpenCV 3.3.</p>
<p>To get your system set up, simply <a href="https://www.pyimagesearch.com/opencv-tutorials-resources-guides/" target="_blank" rel="noopener">install OpenCV</a> using the relevant instructions for your system (while ensuring you’re following any Python virtualenv commands).</p>
<p><em><strong>Note: </strong>Make sure to download and install <a href="https://github.com/opencv/opencv/releases/tag/3.3.0" target="_blank" rel="noopener">opencv</a> and and <a href="https://github.com/opencv/opencv_contrib/releases/tag/3.3.0" target="_blank" rel="noopener">opencv-contrib</a> releases for OpenCV 3.3. This will ensure that the deep neural network (
			<span id="crayon-5c93d9077ceb1072431508" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">dnn</span></span></span>) module is installed. You <strong>must</strong> have OpenCV 3.3 (or newer) to run the code in this tutorial.<br>
</em></p>
<p>Next, we’ll parse our command line arguments:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93d9077ceb7645450390" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">Real-time object detection with deep learning and OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft"># construct the argument parse and parse the arguments
ap = argparse.ArgumentParser()
ap.add_argument("-p", "--prototxt", required=True,
	help="path to Caffe 'deploy' prototxt file")
ap.add_argument("-m", "--model", required=True,
	help="path to Caffe pre-trained model")
ap.add_argument("-c", "--confidence", type=float, default=0.2,
	help="minimum probability to filter weak detections")
args = vars(ap.parse_args())</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93d9077ceb7645450390-10">10</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077ceb7645450390-11">11</div><div class="crayon-num" data-line="crayon-5c93d9077ceb7645450390-12">12</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077ceb7645450390-13">13</div><div class="crayon-num" data-line="crayon-5c93d9077ceb7645450390-14">14</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077ceb7645450390-15">15</div><div class="crayon-num" data-line="crayon-5c93d9077ceb7645450390-16">16</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077ceb7645450390-17">17</div><div class="crayon-num" data-line="crayon-5c93d9077ceb7645450390-18">18</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93d9077ceb7645450390-10"><span class="crayon-c"># construct the argument parse and parse the arguments</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077ceb7645450390-11"><span class="crayon-v">ap</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">argparse</span><span class="crayon-sy">.</span><span class="crayon-e">ArgumentParser</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93d9077ceb7645450390-12"><span class="crayon-v">ap</span><span class="crayon-sy">.</span><span class="crayon-e">add_argument</span><span class="crayon-sy">(</span><span class="crayon-s">"-p"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"--prototxt"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">required</span><span class="crayon-o">=</span><span class="crayon-t">True</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077ceb7645450390-13"><span class="crayon-h">	</span><span class="crayon-k ">help</span><span class="crayon-o">=</span><span class="crayon-s">"path to Caffe 'deploy' prototxt file"</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93d9077ceb7645450390-14"><span class="crayon-v">ap</span><span class="crayon-sy">.</span><span class="crayon-e">add_argument</span><span class="crayon-sy">(</span><span class="crayon-s">"-m"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"--model"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">required</span><span class="crayon-o">=</span><span class="crayon-t">True</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077ceb7645450390-15"><span class="crayon-h">	</span><span class="crayon-k ">help</span><span class="crayon-o">=</span><span class="crayon-s">"path to Caffe pre-trained model"</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93d9077ceb7645450390-16"><span class="crayon-v">ap</span><span class="crayon-sy">.</span><span class="crayon-e">add_argument</span><span class="crayon-sy">(</span><span class="crayon-s">"-c"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"--confidence"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-k ">type</span><span class="crayon-o">=</span><span class="crayon-k ">float</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">default</span><span class="crayon-o">=</span><span class="crayon-cn">0.2</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077ceb7645450390-17"><span class="crayon-h">	</span><span class="crayon-k ">help</span><span class="crayon-o">=</span><span class="crayon-s">"minimum probability to filter weak detections"</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93d9077ceb7645450390-18"><span class="crayon-v">args</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">vars</span><span class="crayon-sy">(</span><span class="crayon-v">ap</span><span class="crayon-sy">.</span><span class="crayon-e">parse_args</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0040 seconds] -->
<p>Compared to last week, we don’t need the image argument since we’re 
working with streams and videos — other than that the following 
arguments remain the same:</p>
<ul>
<li>
			<span id="crayon-5c93d9077cebb415901524" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-o">--</span><span class="crayon-v">prototxt</span></span></span>&nbsp;: The path to the Caffe prototxt file.</li>
<li>
			<span id="crayon-5c93d9077cec0805862990" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-o">--</span><span class="crayon-v">model</span></span></span>&nbsp;: The path to the pre-trained model.</li>
<li>
			<span id="crayon-5c93d9077cec4002708703" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-o">--</span><span class="crayon-v">confidence</span></span></span>&nbsp;: The minimum probability threshold to filter weak detections. The default is 20%.</li>
</ul>
<p>We then initialize a class list and a color set:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93d9077cec9276737569" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">Real-time object detection with deep learning and OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft"># initialize the list of class labels MobileNet SSD was trained to
# detect, then generate a set of bounding box colors for each class
CLASSES = ["background", "aeroplane", "bicycle", "bird", "boat",
	"bottle", "bus", "car", "cat", "chair", "cow", "diningtable",
	"dog", "horse", "motorbike", "person", "pottedplant", "sheep",
	"sofa", "train", "tvmonitor"]
COLORS = np.random.uniform(0, 255, size=(len(CLASSES), 3))</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93d9077cec9276737569-20">20</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cec9276737569-21">21</div><div class="crayon-num" data-line="crayon-5c93d9077cec9276737569-22">22</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cec9276737569-23">23</div><div class="crayon-num" data-line="crayon-5c93d9077cec9276737569-24">24</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cec9276737569-25">25</div><div class="crayon-num" data-line="crayon-5c93d9077cec9276737569-26">26</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93d9077cec9276737569-20"><span class="crayon-c"># initialize the list of class labels MobileNet SSD was trained to</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cec9276737569-21"><span class="crayon-c"># detect, then generate a set of bounding box colors for each class</span></div><div class="crayon-line" id="crayon-5c93d9077cec9276737569-22"><span class="crayon-v">CLASSES</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-s">"background"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"aeroplane"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"bicycle"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"bird"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"boat"</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cec9276737569-23"><span class="crayon-h">	</span><span class="crayon-s">"bottle"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"bus"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"car"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"cat"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"chair"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"cow"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"diningtable"</span><span class="crayon-sy">,</span></div><div class="crayon-line" id="crayon-5c93d9077cec9276737569-24"><span class="crayon-h">	</span><span class="crayon-s">"dog"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"horse"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"motorbike"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"person"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"pottedplant"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"sheep"</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cec9276737569-25"><span class="crayon-h">	</span><span class="crayon-s">"sofa"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"train"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"tvmonitor"</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-5c93d9077cec9276737569-26"><span class="crayon-v">COLORS</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-k ">random</span><span class="crayon-sy">.</span><span class="crayon-e">uniform</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">255</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">size</span><span class="crayon-o">=</span><span class="crayon-sy">(</span><span class="crayon-k ">len</span><span class="crayon-sy">(</span><span class="crayon-v">CLASSES</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">3</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0021 seconds] -->
<p>On <strong>Lines 22-26</strong> we initialize 
			<span id="crayon-5c93d9077cecd962456337" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-t">CLASS</span></span></span>&nbsp; labels and corresponding random 
			<span id="crayon-5c93d9077ced9214971387" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">COLORS</span></span></span>&nbsp;. For more information on these classes (and how the network was trained), please refer to <a href="https://www.pyimagesearch.com/2017/09/11/object-detection-with-deep-learning-and-opencv/" target="_blank" rel="noopener">last week’s blog post</a>.</p>
<p>Now, let’s load our model and set up our video stream:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93d9077cedf374772139" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">Real-time object detection with deep learning and OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft"># load our serialized model from disk
print("[INFO] loading model...")
net = cv2.dnn.readNetFromCaffe(args["prototxt"], args["model"])

# initialize the video stream, allow the cammera sensor to warmup,
# and initialize the FPS counter
print("[INFO] starting video stream...")
vs = VideoStream(src=0).start()
time.sleep(2.0)
fps = FPS().start()</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93d9077cedf374772139-28">28</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cedf374772139-29">29</div><div class="crayon-num" data-line="crayon-5c93d9077cedf374772139-30">30</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cedf374772139-31">31</div><div class="crayon-num" data-line="crayon-5c93d9077cedf374772139-32">32</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cedf374772139-33">33</div><div class="crayon-num" data-line="crayon-5c93d9077cedf374772139-34">34</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cedf374772139-35">35</div><div class="crayon-num" data-line="crayon-5c93d9077cedf374772139-36">36</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cedf374772139-37">37</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93d9077cedf374772139-28"><span class="crayon-c"># load our serialized model from disk</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cedf374772139-29"><span class="crayon-k ">print</span><span class="crayon-sy">(</span><span class="crayon-s">"[INFO] loading model..."</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93d9077cedf374772139-30"><span class="crayon-v">net</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-v">dnn</span><span class="crayon-sy">.</span><span class="crayon-e">readNetFromCaffe</span><span class="crayon-sy">(</span><span class="crayon-v">args</span><span class="crayon-sy">[</span><span class="crayon-s">"prototxt"</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">args</span><span class="crayon-sy">[</span><span class="crayon-s">"model"</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cedf374772139-31">&nbsp;</div><div class="crayon-line" id="crayon-5c93d9077cedf374772139-32"><span class="crayon-c"># initialize the video stream, allow the cammera sensor to warmup,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cedf374772139-33"><span class="crayon-c"># and initialize the FPS counter</span></div><div class="crayon-line" id="crayon-5c93d9077cedf374772139-34"><span class="crayon-k ">print</span><span class="crayon-sy">(</span><span class="crayon-s">"[INFO] starting video stream..."</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cedf374772139-35"><span class="crayon-v">vs</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">VideoStream</span><span class="crayon-sy">(</span><span class="crayon-v">src</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">)</span><span class="crayon-sy">.</span><span class="crayon-e">start</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93d9077cedf374772139-36"><span class="crayon-k ">time</span><span class="crayon-sy">.</span><span class="crayon-e">sleep</span><span class="crayon-sy">(</span><span class="crayon-cn">2.0</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cedf374772139-37"><span class="crayon-v">fps</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">FPS</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">.</span><span class="crayon-e">start</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0018 seconds] -->
<p>We load our serialized model, providing the references to our prototxt and model files on <strong>Line 30</strong> — notice how easy this is in OpenCV 3.3.</p>
<p>Next let’s initialize our video stream (this can be from a video file or a camera). First we start the 
			<span id="crayon-5c93d9077cee4408638851" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">VideoStream</span></span></span>&nbsp; (<strong>Line 35</strong>), then we wait for the camera to warm up (<strong>Line 36</strong>), and finally we start the frames per second counter (<strong>Line 37</strong>). The 
			<span id="crayon-5c93d9077cee9372267455" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">VideoStream</span></span></span>&nbsp; and 
			<span id="crayon-5c93d9077ceed207350806" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">FPS</span></span></span>&nbsp; classes are part of my 
			<span id="crayon-5c93d9077cef1124713025" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">imutils</span></span></span>&nbsp; package.</p>
<p>Now, let’s loop over each and every frame (for speed purposes, you could skip frames):</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93d9077cef5784747122" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">Real-time object detection with deep learning and OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft"># loop over the frames from the video stream
while True:
	# grab the frame from the threaded video stream and resize it
	# to have a maximum width of 400 pixels
	frame = vs.read()
	frame = imutils.resize(frame, width=400)

	# grab the frame dimensions and convert it to a blob
	(h, w) = frame.shape[:2]
	blob = cv2.dnn.blobFromImage(cv2.resize(frame, (300, 300)),
		0.007843, (300, 300), 127.5)

	# pass the blob through the network and obtain the detections and
	# predictions
	net.setInput(blob)
	detections = net.forward()</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93d9077cef5784747122-39">39</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cef5784747122-40">40</div><div class="crayon-num" data-line="crayon-5c93d9077cef5784747122-41">41</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cef5784747122-42">42</div><div class="crayon-num" data-line="crayon-5c93d9077cef5784747122-43">43</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cef5784747122-44">44</div><div class="crayon-num" data-line="crayon-5c93d9077cef5784747122-45">45</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cef5784747122-46">46</div><div class="crayon-num" data-line="crayon-5c93d9077cef5784747122-47">47</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cef5784747122-48">48</div><div class="crayon-num" data-line="crayon-5c93d9077cef5784747122-49">49</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cef5784747122-50">50</div><div class="crayon-num" data-line="crayon-5c93d9077cef5784747122-51">51</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cef5784747122-52">52</div><div class="crayon-num" data-line="crayon-5c93d9077cef5784747122-53">53</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cef5784747122-54">54</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93d9077cef5784747122-39"><span class="crayon-c"># loop over the frames from the video stream</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cef5784747122-40"><span class="crayon-st">while</span><span class="crayon-h"> </span><span class="crayon-t">True</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-5c93d9077cef5784747122-41"><span class="crayon-h">	</span><span class="crayon-c"># grab the frame from the threaded video stream and resize it</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cef5784747122-42"><span class="crayon-h">	</span><span class="crayon-c"># to have a maximum width of 400 pixels</span></div><div class="crayon-line" id="crayon-5c93d9077cef5784747122-43"><span class="crayon-h">	</span><span class="crayon-v">frame</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">vs</span><span class="crayon-sy">.</span><span class="crayon-e">read</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cef5784747122-44"><span class="crayon-h">	</span><span class="crayon-v">frame</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">imutils</span><span class="crayon-sy">.</span><span class="crayon-e">resize</span><span class="crayon-sy">(</span><span class="crayon-v">frame</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">width</span><span class="crayon-o">=</span><span class="crayon-cn">400</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93d9077cef5784747122-45">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cef5784747122-46"><span class="crayon-h">	</span><span class="crayon-c"># grab the frame dimensions and convert it to a blob</span></div><div class="crayon-line" id="crayon-5c93d9077cef5784747122-47"><span class="crayon-h">	</span><span class="crayon-sy">(</span><span class="crayon-v">h</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-k ">w</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">frame</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">[</span><span class="crayon-o">:</span><span class="crayon-cn">2</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cef5784747122-48"><span class="crayon-h">	</span><span class="crayon-v">blob</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-v">dnn</span><span class="crayon-sy">.</span><span class="crayon-e">blobFromImage</span><span class="crayon-sy">(</span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">resize</span><span class="crayon-sy">(</span><span class="crayon-v">frame</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-cn">300</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">300</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span></div><div class="crayon-line" id="crayon-5c93d9077cef5784747122-49"><span class="crayon-h">		</span><span class="crayon-cn">0.007843</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-cn">300</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">300</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">127.5</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cef5784747122-50">&nbsp;</div><div class="crayon-line" id="crayon-5c93d9077cef5784747122-51"><span class="crayon-h">	</span><span class="crayon-c"># pass the blob through the network and obtain the detections and</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cef5784747122-52"><span class="crayon-h">	</span><span class="crayon-c"># predictions</span></div><div class="crayon-line" id="crayon-5c93d9077cef5784747122-53"><span class="crayon-h">	</span><span class="crayon-v">net</span><span class="crayon-sy">.</span><span class="crayon-e">setInput</span><span class="crayon-sy">(</span><span class="crayon-v">blob</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cef5784747122-54"><span class="crayon-h">	</span><span class="crayon-v">detections</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">net</span><span class="crayon-sy">.</span><span class="crayon-e">forward</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0031 seconds] -->
<p>First, we read&nbsp; a 
			<span id="crayon-5c93d9077cefa751324260" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">frame</span></span></span>&nbsp; (<strong>Line 43</strong>) from the stream, followed by resizing it (<strong>Line 44</strong>).</p>
<p>Since we will need the width and height later, we grab these now on <strong>Line 47</strong>. This is followed by converting the 
			<span id="crayon-5c93d9077cefe863497177" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">frame</span></span></span>&nbsp; to a 
			<span id="crayon-5c93d9077cf03035501237" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">blob</span></span></span>&nbsp; with the 
			<span id="crayon-5c93d9077cf07312753374" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">dnn</span></span></span>&nbsp; module (<strong>Lines 48 and 49</strong>).</p>
<p>Now for the heavy lifting: we set the 
			<span id="crayon-5c93d9077cf0b925460670" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">blob</span></span></span>&nbsp; as the input to our neural network (<strong>Line 53</strong>) and feed the input through the 
			<span id="crayon-5c93d9077cf0f675518749" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">net</span></span></span>&nbsp; (<strong>Line 54</strong>) which gives us our 
			<span id="crayon-5c93d9077cf13307770204" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">detections</span></span></span>&nbsp;.</p>
<p>At this point, we have detected objects in the input frame. It is now
 time to look at confidence values and determine if we should draw a box
 + label surrounding the object– you’ll recognize this code block from 
last week:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93d9077cf17336063640" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">Real-time object detection with deep learning and OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft">	# loop over the detections
	for i in np.arange(0, detections.shape[2]):
		# extract the confidence (i.e., probability) associated with
		# the prediction
		confidence = detections[0, 0, i, 2]

		# filter out weak detections by ensuring the `confidence` is
		# greater than the minimum confidence
		if confidence &gt; args["confidence"]:
			# extract the index of the class label from the
			# `detections`, then compute the (x, y)-coordinates of
			# the bounding box for the object
			idx = int(detections[0, 0, i, 1])
			box = detections[0, 0, i, 3:7] * np.array([w, h, w, h])
			(startX, startY, endX, endY) = box.astype("int")

			# draw the prediction on the frame
			label = "{}: {:.2f}%".format(CLASSES[idx],
				confidence * 100)
			cv2.rectangle(frame, (startX, startY), (endX, endY),
				COLORS[idx], 2)
			y = startY - 15 if startY - 15 &gt; 15 else startY + 15
			cv2.putText(frame, label, (startX, y),
				cv2.FONT_HERSHEY_SIMPLEX, 0.5, COLORS[idx], 2)</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93d9077cf17336063640-55">55</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cf17336063640-56">56</div><div class="crayon-num" data-line="crayon-5c93d9077cf17336063640-57">57</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cf17336063640-58">58</div><div class="crayon-num" data-line="crayon-5c93d9077cf17336063640-59">59</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cf17336063640-60">60</div><div class="crayon-num" data-line="crayon-5c93d9077cf17336063640-61">61</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cf17336063640-62">62</div><div class="crayon-num" data-line="crayon-5c93d9077cf17336063640-63">63</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cf17336063640-64">64</div><div class="crayon-num" data-line="crayon-5c93d9077cf17336063640-65">65</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cf17336063640-66">66</div><div class="crayon-num" data-line="crayon-5c93d9077cf17336063640-67">67</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cf17336063640-68">68</div><div class="crayon-num" data-line="crayon-5c93d9077cf17336063640-69">69</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cf17336063640-70">70</div><div class="crayon-num" data-line="crayon-5c93d9077cf17336063640-71">71</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cf17336063640-72">72</div><div class="crayon-num" data-line="crayon-5c93d9077cf17336063640-73">73</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cf17336063640-74">74</div><div class="crayon-num" data-line="crayon-5c93d9077cf17336063640-75">75</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cf17336063640-76">76</div><div class="crayon-num" data-line="crayon-5c93d9077cf17336063640-77">77</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cf17336063640-78">78</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93d9077cf17336063640-55"><span class="crayon-h">	</span><span class="crayon-c"># loop over the detections</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cf17336063640-56"><span class="crayon-h">	</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">arange</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">detections</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">[</span><span class="crayon-cn">2</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-5c93d9077cf17336063640-57"><span class="crayon-h">		</span><span class="crayon-c"># extract the confidence (i.e., probability) associated with</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cf17336063640-58"><span class="crayon-h">		</span><span class="crayon-c"># the prediction</span></div><div class="crayon-line" id="crayon-5c93d9077cf17336063640-59"><span class="crayon-h">		</span><span class="crayon-v">confidence</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">detections</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">i</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cf17336063640-60">&nbsp;</div><div class="crayon-line" id="crayon-5c93d9077cf17336063640-61"><span class="crayon-h">		</span><span class="crayon-c"># filter out weak detections by ensuring the `confidence` is</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cf17336063640-62"><span class="crayon-h">		</span><span class="crayon-c"># greater than the minimum confidence</span></div><div class="crayon-line" id="crayon-5c93d9077cf17336063640-63"><span class="crayon-h">		</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-v">confidence</span><span class="crayon-h"> </span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-v">args</span><span class="crayon-sy">[</span><span class="crayon-s">"confidence"</span><span class="crayon-sy">]</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cf17336063640-64"><span class="crayon-h">			</span><span class="crayon-c"># extract the index of the class label from the</span></div><div class="crayon-line" id="crayon-5c93d9077cf17336063640-65"><span class="crayon-h">			</span><span class="crayon-c"># `detections`, then compute the (x, y)-coordinates of</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cf17336063640-66"><span class="crayon-h">			</span><span class="crayon-c"># the bounding box for the object</span></div><div class="crayon-line" id="crayon-5c93d9077cf17336063640-67"><span class="crayon-h">			</span><span class="crayon-v">idx</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">int</span><span class="crayon-sy">(</span><span class="crayon-v">detections</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">i</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cf17336063640-68"><span class="crayon-h">			</span><span class="crayon-v">box</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">detections</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">i</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">3</span><span class="crayon-o">:</span><span class="crayon-cn">7</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-k ">array</span><span class="crayon-sy">(</span><span class="crayon-sy">[</span><span class="crayon-k ">w</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">h</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-k ">w</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">h</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93d9077cf17336063640-69"><span class="crayon-h">			</span><span class="crayon-sy">(</span><span class="crayon-v">startX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">startY</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">endX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">endY</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">box</span><span class="crayon-sy">.</span><span class="crayon-e">astype</span><span class="crayon-sy">(</span><span class="crayon-s">"int"</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cf17336063640-70">&nbsp;</div><div class="crayon-line" id="crayon-5c93d9077cf17336063640-71"><span class="crayon-h">			</span><span class="crayon-c"># draw the prediction on the frame</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cf17336063640-72"><span class="crayon-h">			</span><span class="crayon-v">label</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"{}: {:.2f}%"</span><span class="crayon-sy">.</span><span class="crayon-k ">format</span><span class="crayon-sy">(</span><span class="crayon-v">CLASSES</span><span class="crayon-sy">[</span><span class="crayon-v">idx</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span></div><div class="crayon-line" id="crayon-5c93d9077cf17336063640-73"><span class="crayon-h">				</span><span class="crayon-v">confidence</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-cn">100</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cf17336063640-74"><span class="crayon-h">			</span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">rectangle</span><span class="crayon-sy">(</span><span class="crayon-v">frame</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">startX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">startY</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">endX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">endY</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span></div><div class="crayon-line" id="crayon-5c93d9077cf17336063640-75"><span class="crayon-h">				</span><span class="crayon-v">COLORS</span><span class="crayon-sy">[</span><span class="crayon-v">idx</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cf17336063640-76"><span class="crayon-h">			</span><span class="crayon-v">y</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">startY</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-cn">15</span><span class="crayon-h"> </span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-v">startY</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-cn">15</span><span class="crayon-h"> </span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-cn">15</span><span class="crayon-h"> </span><span class="crayon-st">else</span><span class="crayon-h"> </span><span class="crayon-v">startY</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-cn">15</span></div><div class="crayon-line" id="crayon-5c93d9077cf17336063640-77"><span class="crayon-h">			</span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">putText</span><span class="crayon-sy">(</span><span class="crayon-v">frame</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">label</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">startX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cf17336063640-78"><span class="crayon-h">				</span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-v">FONT_HERSHEY_SIMPLEX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">0.5</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">COLORS</span><span class="crayon-sy">[</span><span class="crayon-v">idx</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0068 seconds] -->
<p>We start by looping over our 
			<span id="crayon-5c93d9077cf1d028948500" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">detections</span></span></span>&nbsp;,
 keeping in mind that multiple objects can be detected in a single 
image. We also apply a check to the confidence (i.e., probability) 
associated with each detection. If the confidence is high enough (i.e. 
above the threshold), then we’ll display the prediction in the terminal 
as well as draw the prediction on the image with text and a colored 
bounding box. Let’s break it down line-by-line:</p>
<p>Looping through our 
			<span id="crayon-5c93d9077cf22439484845" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">detections</span></span></span>&nbsp;, first we extract the 
			<span id="crayon-5c93d9077cf26833272669" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">confidence</span></span></span>&nbsp; value (<strong>Line 60</strong>).</p>
<p>If the 
			<span id="crayon-5c93d9077cf2a100950168" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">confidence</span></span></span>&nbsp; is above our minimum threshold (<strong>Line 64</strong>), we extract the class label index (<strong>Line 68</strong>) and compute the bounding box coordinates around the detected object (<strong>Line 69</strong>).</p>
<p>Then, we extract the <em>(x, y)</em>-coordinates of the box (<strong>Line 70</strong>) which we will will use shortly for drawing a rectangle and displaying text.</p>
<p>We build a text 
			<span id="crayon-5c93d9077cf2e201984825" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">label</span></span></span>&nbsp; containing the 
			<span id="crayon-5c93d9077cf32984666689" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-t">CLASS</span></span></span>&nbsp; name and the 
			<span id="crayon-5c93d9077cf37046445493" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">confidence</span></span></span>&nbsp; (<strong>Lines 73 and 74</strong>).</p>
<p>Let’s also draw a colored rectangle around the object using our class color and previously extracted <em>(x, y)</em>-coordinates (<strong>Lines 75 and 76</strong>).</p>
<p>In general, we want the label to be displayed above the rectangle, 
but if there isn’t room, we’ll display it just below the top of the 
rectangle (<strong>Line 77</strong>).</p>
<p>Finally, we overlay the colored text onto the 
			<span id="crayon-5c93d9077cf3b507220972" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">frame</span></span></span>&nbsp; using the <em>y</em>-value that we just calculated (<strong>Lines 78 and 79</strong>).</p>
<p>The remaining steps in the frame capture loop involve (1) displaying 
the frame, (2) checking for a quit key, and (3) updating our frames per 
second counter:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93d9077cf40364414127" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">Real-time object detection with deep learning and OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft">	# show the output frame
	cv2.imshow("Frame", frame)
	key = cv2.waitKey(1) &amp; 0xFF

	# if the `q` key was pressed, break from the loop
	if key == ord("q"):
		break

	# update the FPS counter
	fps.update()</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93d9077cf40364414127-80">80</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cf40364414127-81">81</div><div class="crayon-num" data-line="crayon-5c93d9077cf40364414127-82">82</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cf40364414127-83">83</div><div class="crayon-num" data-line="crayon-5c93d9077cf40364414127-84">84</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cf40364414127-85">85</div><div class="crayon-num" data-line="crayon-5c93d9077cf40364414127-86">86</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cf40364414127-87">87</div><div class="crayon-num" data-line="crayon-5c93d9077cf40364414127-88">88</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cf40364414127-89">89</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93d9077cf40364414127-80"><span class="crayon-h">	</span><span class="crayon-c"># show the output frame</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cf40364414127-81"><span class="crayon-h">	</span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">imshow</span><span class="crayon-sy">(</span><span class="crayon-s">"Frame"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">frame</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93d9077cf40364414127-82"><span class="crayon-h">	</span><span class="crayon-v">key</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">waitKey</span><span class="crayon-sy">(</span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-h"> </span><span class="crayon-cn">0xFF</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cf40364414127-83">&nbsp;</div><div class="crayon-line" id="crayon-5c93d9077cf40364414127-84"><span class="crayon-h">	</span><span class="crayon-c"># if the `q` key was pressed, break from the loop</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cf40364414127-85"><span class="crayon-h">	</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-v">key</span><span class="crayon-h"> </span><span class="crayon-o">==</span><span class="crayon-h"> </span><span class="crayon-k ">ord</span><span class="crayon-sy">(</span><span class="crayon-s">"q"</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-5c93d9077cf40364414127-86"><span class="crayon-h">		</span><span class="crayon-st">break</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cf40364414127-87">&nbsp;</div><div class="crayon-line" id="crayon-5c93d9077cf40364414127-88"><span class="crayon-h">	</span><span class="crayon-c"># update the FPS counter</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cf40364414127-89"><span class="crayon-h">	</span><span class="crayon-v">fps</span><span class="crayon-sy">.</span><span class="crayon-e">update</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0014 seconds] -->
<p>The above code block is pretty self-explanatory — first we display the frame (<strong>Line 82</strong>). Then we capture a key press (<strong>Line 83</strong>) while checking if the ‘q’ key (for “quit”) is pressed, at which point we break out of the frame capture loop (<strong>Lines 86 and 87</strong>).</p>
<p>Finally we update our fps counter (<strong>Line 90</strong>).</p>
<p>If we break out of the loop (‘q’ key press or end of the video stream), we have some housekeeping to take care of:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93d9077cf44369468982" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">Real-time object detection with deep learning and OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft"># stop the timer and display FPS information
fps.stop()
print("[INFO] elapsed time: {:.2f}".format(fps.elapsed()))
print("[INFO] approx. FPS: {:.2f}".format(fps.fps()))

# do a bit of cleanup
cv2.destroyAllWindows()
vs.stop()</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93d9077cf44369468982-91">91</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cf44369468982-92">92</div><div class="crayon-num" data-line="crayon-5c93d9077cf44369468982-93">93</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cf44369468982-94">94</div><div class="crayon-num" data-line="crayon-5c93d9077cf44369468982-95">95</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cf44369468982-96">96</div><div class="crayon-num" data-line="crayon-5c93d9077cf44369468982-97">97</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cf44369468982-98">98</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93d9077cf44369468982-91"><span class="crayon-c"># stop the timer and display FPS information</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cf44369468982-92"><span class="crayon-v">fps</span><span class="crayon-sy">.</span><span class="crayon-e">stop</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93d9077cf44369468982-93"><span class="crayon-k ">print</span><span class="crayon-sy">(</span><span class="crayon-s">"[INFO] elapsed time: {:.2f}"</span><span class="crayon-sy">.</span><span class="crayon-k ">format</span><span class="crayon-sy">(</span><span class="crayon-v">fps</span><span class="crayon-sy">.</span><span class="crayon-e">elapsed</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cf44369468982-94"><span class="crayon-k ">print</span><span class="crayon-sy">(</span><span class="crayon-s">"[INFO] approx. FPS: {:.2f}"</span><span class="crayon-sy">.</span><span class="crayon-k ">format</span><span class="crayon-sy">(</span><span class="crayon-v">fps</span><span class="crayon-sy">.</span><span class="crayon-e">fps</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c93d9077cf44369468982-95">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cf44369468982-96"><span class="crayon-c"># do a bit of cleanup</span></div><div class="crayon-line" id="crayon-5c93d9077cf44369468982-97"><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">destroyAllWindows</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cf44369468982-98"><span class="crayon-v">vs</span><span class="crayon-sy">.</span><span class="crayon-e">stop</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0013 seconds] -->
<p>When we’ve exited the loop, we stop the 
			<span id="crayon-5c93d9077cf49302514471" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">fps</span></span></span>&nbsp; counter (<strong>Line 93</strong>) and print information about the frames per second to our terminal (<strong>Lines 94 and 95</strong>).</p>
<p>We close the open window (<strong>Line 98</strong>) followed by stopping the video stream (<strong>Line 99</strong>).</p>
<p>If you’ve made it this far, you’re probably ready to give it a try 
with your webcam — to see how it’s done, let’s move on to the next 
section.</p>
<h3>Real-time deep learning object detection results</h3>
<p>To see our real-time deep-learning based object detector in action, make sure you use the <em><strong>“Downloads”</strong></em> section of this guide to download the example code + pre-trained Convolutional Neural Network.</p>
<p>From there, open up a terminal and execute the following command:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93d9077cf4d375701967" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">Real-time object detection with deep learning and OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Shell</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft">$ python real_time_object_detection.py \
	--prototxt MobileNetSSD_deploy.prototxt.txt \
	--model MobileNetSSD_deploy.caffemodel
[INFO] loading model...
[INFO] starting video stream...
[INFO] elapsed time: 55.07
[INFO] approx. FPS: 6.54</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93d9077cf4d375701967-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cf4d375701967-2">2</div><div class="crayon-num" data-line="crayon-5c93d9077cf4d375701967-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cf4d375701967-4">4</div><div class="crayon-num" data-line="crayon-5c93d9077cf4d375701967-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9077cf4d375701967-6">6</div><div class="crayon-num" data-line="crayon-5c93d9077cf4d375701967-7">7</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93d9077cf4d375701967-1"><span class="crayon-sy">$</span><span class="crayon-h"> </span><span class="crayon-e">python </span><span class="crayon-v">real_time_object_detection</span><span class="crayon-e">.py</span><span class="crayon-h"> </span><span class="crayon-sy">\</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cf4d375701967-2"><span class="crayon-h">	</span><span class="crayon-o">--</span><span class="crayon-e">prototxt </span><span class="crayon-v">MobileNetSSD_deploy</span><span class="crayon-e">.prototxt</span><span class="crayon-e">.txt</span><span class="crayon-h"> </span><span class="crayon-sy">\</span></div><div class="crayon-line" id="crayon-5c93d9077cf4d375701967-3"><span class="crayon-h">	</span><span class="crayon-o">--</span><span class="crayon-e">model </span><span class="crayon-v">MobileNetSSD_deploy</span><span class="crayon-e">.caffemodel</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cf4d375701967-4"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-e">loading </span><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span></div><div class="crayon-line" id="crayon-5c93d9077cf4d375701967-5"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-e">starting </span><span class="crayon-e">video </span><span class="crayon-v">stream</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9077cf4d375701967-6"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-e">elapsed </span><span class="crayon-r">time</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-cn">55.07</span></div><div class="crayon-line" id="crayon-5c93d9077cf4d375701967-7"><span class="crayon-sy">[</span><span class="crayon-v">INFO</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-v">approx</span><span class="crayon-sy">.</span><span class="crayon-h"> </span><span class="crayon-v">FPS</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-cn">6.54</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0014 seconds] -->
<p>Provided that OpenCV can access your webcam you should see the output
 video frame with any detected objects. I have included sample results 
of applying deep learning object detection to an example video below:</p>
<div id="attachment_6104" style="max-width: 360px" class="wp-caption aligncenter"><a href="https://www.pyimagesearch.com/wp-content/uploads/2017/09/real_time_object_detection_animation.gif"><img class="wp-image-6104" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/real_time_object_detection_animation.gif" width="350" height="214"></a><p class="wp-caption-text"><strong>Figure 1:</strong> A short clip of real-time object detection with deep learning and OpenCV + Python.</p></div>
<p>Notice how our deep learning object detector can detect not only myself (a <em>person</em>), but also the <em>sofa</em> I am sitting on and the <em>chair</em> next to me — <em><strong>all in real-time!</strong></em></p>
<p>The full video can be found below:</p>
<p><iframe src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/hMFx1TXjAJc.htm" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" width="500" height="281" frameborder="0"></iframe></p>
<h2>Summary</h2>
<p>In today’s blog post we learned how to perform real-time object detection using deep learning + OpenCV + video streams.</p>
<p>We accomplished this by combing two separate tutorials:</p>
<ol>
<li><a href="https://www.pyimagesearch.com/2017/09/11/object-detection-with-deep-learning-and-opencv/" target="_blank" rel="noopener">Object detection with deep learning and OpenCV</a></li>
<li><a href="https://www.pyimagesearch.com/2016/01/04/unifying-picamera-and-cv2-videocapture-into-a-single-class-with-opencv/" target="_blank" rel="noopener">Efficient, threaded video streams with OpenCV</a></li>
</ol>
<p>The end result is a deep learning-based object detector that can 
process approximately 6-8 FPS (depending on the speed of your system, of
 course).</p>
<p>Further speed improvements can be obtained by:</p>
<ol>
<li>Applying skip frames.</li>
<li>Swapping different variations of MobileNet (that are faster, but less accurate).</li>
<li>Potentially using the quantized variation of SqueezeNet (I haven’t 
tested this, but imagine it would be faster due to smaller network 
footprint).</li>
</ol>
<p>In future blog posts we’ll be discussing deep learning object detection methods in more detail.</p>
<p>In the meantime, be sure to take a look at my book, <em><a href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/" target="_blank" rel="noopener">Deep Learning for Computer Vision with Python</a></em>, where I’ll be reviewing object detection frameworks such as Faster R-CNNs and Single Shot Detectors!</p>
<p>If you’re interested in studying deep learning for computer vision 
and image classification tasks, you just can’t beat this book — <a href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/" target="_blank" rel="noopener">click here to learn more</a>.</p>
<h2 id="post_downloads">Downloads:</h2>
<div id="mc4wp-form-1" class="form mc4wp-form mc4wp-form-761"><form action="https://www.getdrip.com/forms/84507510/submissions" method="post" target="blank" data-drip-embedded-form="84507510" data-drip-id="84507510"><img style="padding-right: 10px; width: 115px; border: none; float: left;" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/download-code-icon.png" alt="">If
 you would like to download the code and images used in this post, 
please enter your email address in the form below. Not only will you get
 a .zip of the code, I’ll also send you a <strong>FREE 17-page Resource Guide on Computer Vision, OpenCV, and Deep Learning.</strong>
 Inside you'll find my hand-picked tutorials, books, courses, and 
libraries to help you master CV and DL! Sound good? If so, enter your 
email address and I’ll send you the code immediately!
<p style="margin-left: 130px; margin-top: 10px;"><label for="fields[email]">Email address:</label><input name="fields[email]" type="email" placeholder="Your email address"></p>
<p style="margin-left: 130px;"><input type="submit" value="Download the code!"></p>
<input type="hidden" name="time_zone" value="Europe/Berlin"><input type="hidden" name="url" value="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/"><input type="hidden" name="page_title" value="Real-time object detection with deep learning and OpenCV - PyImageSearch"></form></div>
	</section><!-- /.entry -->
	<div class="fix"></div>
		<aside id="connect">
		<h3>Resource Guide (it’s totally free).</h3>

		<div>
			<p><img title="Get your FREE 17-page Computer Vision and Deep Learning Resource Guide PDF" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/computer_vision_deep_learning_resource_guide_cover.png" style="padding-right: 10px;width: 230px;float: left">
</p><div style="padding-top: 35px">
Enter your email address below to get my <strong>free 17-page Computer Vision, OpenCV, and Deep Learning Resource Guide PDF</strong>.
 Inside you'll find my hand-picked tutorials, books, courses, and Python
 libraries to help you master computer vision and deep learning!</div><p></p>

			
						<form action="https://www.getdrip.com/forms/657075648/submissions" method="post" target="_blank" data-drip-embedded-form="657075648" data-drip-id="657075648">
				<div>
					<input type="email" name="fields[email]" class="required email" placeholder="Your email address" style="width: 50%;">
				</div>
				<div>
					<input id="mc-embedded-subscribe" type="submit" name="submit" class="btn submit button" value="Download the Guide!" data-drip-attribute="sign-up-button">
				</div>
			<input type="hidden" name="time_zone" value="Europe/Berlin"><input type="hidden" name="url" value="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/"><input type="hidden" name="page_title" value="Real-time object detection with deep learning and OpenCV - PyImageSearch"></form>
			
						<div class="social">
		   					</div>
			
		</div><!-- col-left -->

		
        <div class="fix"></div>
	</aside>
	<div class="post-utility"><p class="tags"><i class="icon-tag"></i> <a href="https://www.pyimagesearch.com/tag/cnn/" rel="tag">cnn</a>, <a href="https://www.pyimagesearch.com/tag/coco/" rel="tag">coco</a>, <a href="https://www.pyimagesearch.com/tag/convolutional-neural-network/" rel="tag">convolutional neural network</a>, <a href="https://www.pyimagesearch.com/tag/deep-learning/" rel="tag">deep learning</a>, <a href="https://www.pyimagesearch.com/tag/machine-learning/" rel="tag">machine learning</a>, <a href="https://www.pyimagesearch.com/tag/opencv-3/" rel="tag">opencv 3</a>, <a href="https://www.pyimagesearch.com/tag/pascal-voc/" rel="tag">pascal voc</a>, <a href="https://www.pyimagesearch.com/tag/real-time/" rel="tag">real-time</a>, <a href="https://www.pyimagesearch.com/tag/video/" rel="tag">video</a>, <a href="https://www.pyimagesearch.com/tag/video-stream/" rel="tag">video stream</a></p> </div>
</article><!-- /.post -->
	        <div class="post-entries">
	            <div class="nav-prev fl"><a href="https://www.pyimagesearch.com/2017/09/11/object-detection-with-deep-learning-and-opencv/" rel="prev"><i class="icon-angle-left"></i> Object detection with deep learning and OpenCV</a></div>
	            <div class="nav-next fr"><a href="https://www.pyimagesearch.com/2017/09/20/pre-configured-amazon-aws-deep-learning-ami-with-python/" rel="next">Pre-configured Amazon AWS deep learning AMI with Python <i class="icon-angle-right"></i></a></div>
	            <div class="fix"></div>
	        </div>

		<div id="comments">		 	<h3 id="comments-title">564 Responses to <em>Real-time object detection with deep learning and OpenCV</em></h3>
		 	<ol class="commentlist">
					                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-435087"></a>
	      	
	      	<div id="li-comment-435087" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/ac804f923f99d3883b3354f7fd004c9d.jpg" srcset="https://secure.gravatar.com/avatar/ac804f923f99d3883b3354f7fd004c9d?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Daniel Funseth</span>           
	                <span class="date">September 18, 2017 at 10:55 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435087" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435087">
				
				<p>wow! this is really impressive, will it be able to run on a RPI 3?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435087" onclick='return addComment.moveForm( "comment-435087", "435087", "respond", "6092" )' aria-label="Reply to Daniel Funseth">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2 parent">
	    
	    	<a name="comment-435103"></a>
	      	
	      	<div id="li-comment-435103" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 18, 2017 at 1:56 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435103" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435103">
				
				<p>Please see my reply to “Flávio”.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435103" onclick='return addComment.moveForm( "comment-435103", "435103", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-3 parent">
	    
	    	<a name="comment-473654"></a>
	      	
	      	<div id="li-comment-473654" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/90de0a4c6393c44b3988bace8a99cfb0.jpg" srcset="https://secure.gravatar.com/avatar/90de0a4c6393c44b3988bace8a99cfb0?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Jibin John</span>           
	                <span class="date">August 9, 2018 at 1:56 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-473654" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-473654">
				
				<p>I have done cascade training for object detection. Can you 
explain how you generate the three models protext caffe etc used in your
 project</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-473654" onclick='return addComment.moveForm( "comment-473654", "473654", "respond", "6092" )' aria-label="Reply to Jibin John">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-4">
	    
	    	<a name="comment-473739"></a>
	      	
	      	<div id="li-comment-473739" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">August 9, 2018 at 2:45 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-473739" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-473739">
				
				<p>It’s too complicated of a process to explain in a single blog post. You should read <a target="blank" href="https://www.pyimagesearch.com/2018/05/14/a-gentle-guide-to-deep-learning-object-detection/">this post</a>
 to understand the fundamentals of deep learning object detection. I 
then cover how to train your own custom deep learning object detections 
inside <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python</a>.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-473739" onclick='return addComment.moveForm( "comment-473739", "473739", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-435089"></a>
	      	
	      	<div id="li-comment-435089" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/0d3d3f588831f1cb5951f0d4db8d34c8.jpg" srcset="https://secure.gravatar.com/avatar/0d3d3f588831f1cb5951f0d4db8d34c8?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Flávio Rodrigues</span>           
	                <span class="date">September 18, 2017 at 11:01 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435089" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435089">
				
				<p>Hi, Adrian. Thanks a lot for another great tutorial. Have you got
 a real-time example working on a Pi 3? (Maybe skipping frames?) I’m 
just using a Pi (for OpenCV and DL) and I’d like to know to what extent 
is it’d be usable. What about the frame rate? Nice work as always. 
Cheers.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435089" onclick='return addComment.moveForm( "comment-435089", "435089", "respond", "6092" )' aria-label="Reply to Flávio Rodrigues">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2 parent">
	    
	    	<a name="comment-435102"></a>
	      	
	      	<div id="li-comment-435102" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 18, 2017 at 1:56 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435102" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435102">
				
				<p>I haven’t applied this method to the Raspberry Pi (yet) but I 
will very soon. It will be covered in a future blog post. I’ll be 
sharing any optimizations I’ve made.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435102" onclick='return addComment.moveForm( "comment-435102", "435102", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-3 parent">
	    
	    	<a name="comment-453518"></a>
	      	
	      	<div id="li-comment-453518" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/952355d1de8333f112991c8aca2bdd39.jpg" srcset="https://secure.gravatar.com/avatar/952355d1de8333f112991c8aca2bdd39?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">adams</span>           
	                <span class="date">March 19, 2018 at 6:57 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-453518" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-453518">
				
				<p>have you done it?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-453518" onclick='return addComment.moveForm( "comment-453518", "453518", "respond", "6092" )' aria-label="Reply to adams">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-4 parent">
	    
	    	<a name="comment-453560"></a>
	      	
	      	<div id="li-comment-453560" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">March 19, 2018 at 4:54 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-453560" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-453560">
				
				<p>Yes. Refer to <a target="blank" href="https://www.pyimagesearch.com/2017/10/16/raspberry-pi-deep-learning-object-detection-with-opencv/">this post</a>.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-453560" onclick='return addComment.moveForm( "comment-453560", "453560", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-5">
	    
	    	<a name="comment-470446"></a>
	      	
	      	<div id="li-comment-470446" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/88ca912ed6e8273fb2fd25ac1899c07c.jpg" srcset="https://secure.gravatar.com/avatar/88ca912ed6e8273fb2fd25ac1899c07c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Priya</span>           
	                <span class="date">July 9, 2018 at 8:41 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-470446" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-470446">
				
				<p>Hello Adrian, </p>
<p>Very helpful post. Is it possible to only for one type of class, that is only for the detection of persons?</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-5">
	    
	    	<a name="comment-470587"></a>
	      	
	      	<div id="li-comment-470587" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">July 10, 2018 at 8:25 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-470587" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-470587">
				
				<p>Yes. See <a target="blank" href="https://www.pyimagesearch.com/2018/05/14/a-gentle-guide-to-deep-learning-object-detection/">see this post</a>.</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1">
	    
	    	<a name="comment-435090"></a>
	      	
	      	<div id="li-comment-435090" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/ea681e2a7d6780c46d799ee053b759f9.jpg" srcset="https://secure.gravatar.com/avatar/ea681e2a7d6780c46d799ee053b759f9?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Nicolas</span>           
	                <span class="date">September 18, 2017 at 11:01 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435090" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435090">
				
				<p>Hi Adrian.</p>
<p>Excelent, you are a great developer! But, I want to know how develop a
 face-tracking with opencv and python in the Backend, but capturing 
video en canvas with HTML5 real-time and after draw and object depending
 of the Backend´s Response, for example, a Moustache. Too, this tracking
 has support with head movement and Moustache  adapts.</p>
<p>Thanks.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435090" onclick='return addComment.moveForm( "comment-435090", "435090", "respond", "6092" )' aria-label="Reply to Nicolas">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-435091"></a>
	      	
	      	<div id="li-comment-435091" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/3e1812eff584331489cfd19fcf299b28.jpg" srcset="https://secure.gravatar.com/avatar/3e1812eff584331489cfd19fcf299b28?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">tommy</span>           
	                <span class="date">September 18, 2017 at 11:22 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435091" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435091">
				
				<p>hi what’s the best FPS on say a typical Macbook assuming u used threading and other optimisations?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435091" onclick='return addComment.moveForm( "comment-435091", "435091", "respond", "6092" )' aria-label="Reply to tommy">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-2 parent">
	    
	    	<a name="comment-435092"></a>
	      	
	      	<div id="li-comment-435092" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/3e1812eff584331489cfd19fcf299b28.jpg" srcset="https://secure.gravatar.com/avatar/3e1812eff584331489cfd19fcf299b28?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">tommy</span>           
	                <span class="date">September 18, 2017 at 11:27 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435092" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435092">
				
				<p>in particular, does it mean if i used N threads to process the frames, the FPS will be N times better?</p>
<p>does the dnn module use any threading / multi-core underneath the hood?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435092" onclick='return addComment.moveForm( "comment-435092", "435092", "respond", "6092" )' aria-label="Reply to tommy">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-3 parent">
	    
	    	<a name="comment-435100"></a>
	      	
	      	<div id="li-comment-435100" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 18, 2017 at 1:54 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435100" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435100">
				
				<p>No, the threading here only applies to polling of frames from the
 video sensor. The threading helps with I/O latency on the video itself.
 If you’re looking to speedup the actual detection you should push the 
object detection to the GPU (which I think can only be done with the C++
 bindings of OpenCV).</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435100" onclick='return addComment.moveForm( "comment-435100", "435100", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-4 parent">
	    
	    	<a name="comment-443997"></a>
	      	
	      	<div id="li-comment-443997" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/57d8587a6bef15f7d54b2aaad0f806e0.jpg" srcset="https://secure.gravatar.com/avatar/57d8587a6bef15f7d54b2aaad0f806e0?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Peter</span>           
	                <span class="date">December 21, 2017 at 12:58 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-443997" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-443997">
				
				<p>Hello Adrian,<br>
I plan to use jetson TX2 to do the object detection with deeplearning.<br>
i don’t know if there will be faster if just port the above code to tx2?<br>
can i have better performance by using tx2 for the upper code with opencv’s deep learning library?</p>
<p>or do you have any suggestions to make the object detection faster on
 tx2, what framework and training net is better? use mxnet + mobielnet?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-443997" onclick='return addComment.moveForm( "comment-443997", "443997", "respond", "6092" )' aria-label="Reply to Peter">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-5">
	    
	    	<a name="comment-444208"></a>
	      	
	      	<div id="li-comment-444208" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">December 22, 2017 at 6:57 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-444208" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-444208">
				
				<p>I haven’t tried this code with the TX2 yet, but yes, in general 
this should run faster on the TX2 provided you can run the model on the 
GPU directly. I would suggest using the code as is and then obtaining 
your benchmark. From there it will be possible to provide suggestions. 
The model included in the blog post uses the MobileNet framework.</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even depth-4 parent">
	    
	    	<a name="comment-445668"></a>
	      	
	      	<div id="li-comment-445668" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/57d8587a6bef15f7d54b2aaad0f806e0.jpg" srcset="https://secure.gravatar.com/avatar/57d8587a6bef15f7d54b2aaad0f806e0?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Peter</span>           
	                <span class="date">January 4, 2018 at 10:10 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-445668" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-445668">
				
				<p>Use C++ binding for  opencv will speedup the detection on TX2 lot than python binding? do you have a bench mark?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-445668" onclick='return addComment.moveForm( "comment-445668", "445668", "respond", "6092" )' aria-label="Reply to Peter">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-5">
	    
	    	<a name="comment-445723"></a>
	      	
	      	<div id="li-comment-445723" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 5, 2018 at 1:30 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-445723" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-445723">
				
				<p>Sorry, I do not have a benchmark for the TX2 and Python or C++ bindings.</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even depth-4 parent">
	    
	    	<a name="comment-447989"></a>
	      	
	      	<div id="li-comment-447989" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/cbe5217190acda67248e1e802236bafe.jpg" srcset="https://secure.gravatar.com/avatar/cbe5217190acda67248e1e802236bafe?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">mirror</span>           
	                <span class="date">January 28, 2018 at 9:34 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-447989" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-447989">
				
				<p>hello,what should i  do if i want to apply the detection code to a local video on  my computer??</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-447989" onclick='return addComment.moveForm( "comment-447989", "447989", "respond", "6092" )' aria-label="Reply to mirror">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-5">
	    
	    	<a name="comment-448240"></a>
	      	
	      	<div id="li-comment-448240" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 30, 2018 at 10:28 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-448240" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-448240">
				
				<p>You can use the <code>cv2.VideoCapture</code> function and provide the path to your input video. If you’re new to working with OpenCV I would recommend going through <a target="blank" href="https://www.pyimagesearch.com/practical-python-opencv/">Practical Python and OpenCV</a> where I teach the fundamentals. I hope that helps point you on the right path!</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even depth-4 parent">
	    
	    	<a name="comment-453648"></a>
	      	
	      	<div id="li-comment-453648" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/29f96d3ae94bf095681b288b0cce0bcf.jpg" srcset="https://secure.gravatar.com/avatar/29f96d3ae94bf095681b288b0cce0bcf?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">zhenyuchen</span>           
	                <span class="date">March 19, 2018 at 9:41 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-453648" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-453648">
				
				<p>Hi Adrian,<br>
I replaced the caffe model I trained myself, but I didn’t show a 
rectangular box. I want to know what the reason is, I look forward to 
your reply<br>
 Best wishes！<br>
thank you!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-453648" onclick='return addComment.moveForm( "comment-453648", "453648", "respond", "6092" )' aria-label="Reply to zhenyuchen">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-5">
	    
	    	<a name="comment-453708"></a>
	      	
	      	<div id="li-comment-453708" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">March 20, 2018 at 8:23 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-453708" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-453708">
				
				<p>The code in this post filters out “weak” detections by discarding
 any predictions with a confidence of less than 20%. You can try to set 
the confidence to zero just to see if your detections are being filtered
 out.</p>
<p>If not, your network is simply not returning predictions for your 
input image. You should consider training your network with (1) more 
data and (2) data that more closely resembles the test images.</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-435101"></a>
	      	
	      	<div id="li-comment-435101" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 18, 2017 at 1:55 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435101" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435101">
				
				<p>I used my MacBook Pro to collect the results to this blog post — approximately 5-7 FPS depending on your system specs.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435101" onclick='return addComment.moveForm( "comment-435101", "435101", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-435095"></a>
	      	
	      	<div id="li-comment-435095" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/369c47eb159b036eaa57c5bc9c536c09.jpg" srcset="https://secure.gravatar.com/avatar/369c47eb159b036eaa57c5bc9c536c09?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">vinu</span>           
	                <span class="date">September 18, 2017 at 1:00 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435095" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435095">
				
				<p>Thanks<br>
its so much help<br>
and i needs to detect only helmet in realtime</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435095" onclick='return addComment.moveForm( "comment-435095", "435095", "respond", "6092" )' aria-label="Reply to vinu">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-2">
	    
	    	<a name="comment-435147"></a>
	      	
	      	<div id="li-comment-435147" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/f46ba91cad23ec7dccc4e22f44b4b316.jpg" srcset="https://secure.gravatar.com/avatar/f46ba91cad23ec7dccc4e22f44b4b316?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Ashwin Venkat</span>           
	                <span class="date">September 18, 2017 at 9:28 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435147" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435147">
				
				<p>Hi interesting thought, did it work</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435147" onclick='return addComment.moveForm( "comment-435147", "435147", "respond", "6092" )' aria-label="Reply to Ashwin Venkat">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-435096"></a>
	      	
	      	<div id="li-comment-435096" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/4366a8409e3e56f7c1247048254a21e2.jpg" srcset="https://secure.gravatar.com/avatar/4366a8409e3e56f7c1247048254a21e2?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Eng.AAA</span>           
	                <span class="date">September 18, 2017 at 1:31 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435096" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435096">
				
				<p>Thanks for awesome Tutorials .<br>
I have question about:  can I track the location of the chair in video, I mean if the chair moving can I track its location.<br>
Thanks</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435096" onclick='return addComment.moveForm( "comment-435096", "435096", "respond", "6092" )' aria-label="Reply to Eng.AAA">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2 parent">
	    
	    	<a name="comment-435099"></a>
	      	
	      	<div id="li-comment-435099" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 18, 2017 at 1:52 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435099" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435099">
				
				<p>I would suggest using object detection (such as the method used 
in this post) to detect the chair/object. Then once you have the object 
detected pass the location into an object tracking algorithm, such as 
correlation tracking.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435099" onclick='return addComment.moveForm( "comment-435099", "435099", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-3">
	    
	    	<a name="comment-435141"></a>
	      	
	      	<div id="li-comment-435141" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/4366a8409e3e56f7c1247048254a21e2.jpg" srcset="https://secure.gravatar.com/avatar/4366a8409e3e56f7c1247048254a21e2?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Eng.AAA</span>           
	                <span class="date">September 18, 2017 at 5:59 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435141" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435141">
				
				<p>I hope it will cover with an example in new Deep Learning Book </p>
<p>Thanks</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435141" onclick='return addComment.moveForm( "comment-435141", "435141", "respond", "6092" )' aria-label="Reply to Eng.AAA">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-435097"></a>
	      	
	      	<div id="li-comment-435097" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/607c89e546b0e233a9e84a48182c9ff9.jpg" srcset="https://secure.gravatar.com/avatar/607c89e546b0e233a9e84a48182c9ff9?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href="http://www.zimbotech.co.zw/" rel="external nofollow" class="url">Sydney</a></span>           
	                <span class="date">September 18, 2017 at 1:36 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435097" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435097">
				
				<p>Thanks for the tutorial man. The method is quite effective, 
running better on a CPU. I am still trying to figure out how i can use a
 video as my source instead of the webcam.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435097" onclick='return addComment.moveForm( "comment-435097", "435097", "respond", "6092" )' aria-label="Reply to Sydney">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-435098"></a>
	      	
	      	<div id="li-comment-435098" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 18, 2017 at 1:52 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435098" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435098">
				
				<p>Thanks Sydney, I’m glad it worked for you 🙂</p>
<p>As far as working with video files, <a target="blank" href="https://www.pyimagesearch.com/2017/02/06/faster-video-file-fps-with-cv2-videocapture-and-opencv/">take a look at this post</a>.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435098" onclick='return addComment.moveForm( "comment-435098", "435098", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-435115"></a>
	      	
	      	<div id="li-comment-435115" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/0bf457e7d4d34b0b7a6126f0cbc88b2c.jpg" srcset="https://secure.gravatar.com/avatar/0bf457e7d4d34b0b7a6126f0cbc88b2c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Ashraf</span>           
	                <span class="date">September 18, 2017 at 2:07 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435115" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435115">
				
				<p>great article! continue the great way!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435115" onclick='return addComment.moveForm( "comment-435115", "435115", "respond", "6092" )' aria-label="Reply to Ashraf">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-435131"></a>
	      	
	      	<div id="li-comment-435131" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 18, 2017 at 2:21 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435131" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435131">
				
				<p>Thanks Ashraf 🙂</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435131" onclick='return addComment.moveForm( "comment-435131", "435131", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-435126"></a>
	      	
	      	<div id="li-comment-435126" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/989017ba46090b8638d722c9485a8c40.jpg" srcset="https://secure.gravatar.com/avatar/989017ba46090b8638d722c9485a8c40?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Walid Ahmed</span>           
	                <span class="date">September 18, 2017 at 2:18 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435126" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435126">
				
				<p>Thanks. I waited for 18 Sep to read this blog!</p>
<p>Just one questions , isnt  0.2   so low as confidence?<br>
would not this result in low precision?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435126" onclick='return addComment.moveForm( "comment-435126", "435126", "respond", "6092" )' aria-label="Reply to Walid Ahmed">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-435130"></a>
	      	
	      	<div id="li-comment-435130" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 18, 2017 at 2:21 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435130" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435130">
				
				<p>With object detection we typically have lower probabilities in 
the localization. You can tune the threshold probability to your liking.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435130" onclick='return addComment.moveForm( "comment-435130", "435130", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-435127"></a>
	      	
	      	<div id="li-comment-435127" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/4daee2e06f78de30b3de948b1e472756.jpg" srcset="https://secure.gravatar.com/avatar/4daee2e06f78de30b3de948b1e472756?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Jacques</span>           
	                <span class="date">September 18, 2017 at 2:18 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435127" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435127">
				
				<p>Hey Mate,</p>
<p>Many thanks for the great example code – just what I needed :)..</p>
<p>How would this perform on a Pi 3?  I intend testing it asap, but I 
would guess the classification function would be really slow (I was 
getting up to 4 seconds on your previous tutorial using cv DNN)?  Any 
views on how to compensate for the slower processor?</p>
<p>Do you believe that this code would be too much for the Pi3?</p>
<p>-J</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435127" onclick='return addComment.moveForm( "comment-435127", "435127", "respond", "6092" )' aria-label="Reply to Jacques">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-435128"></a>
	      	
	      	<div id="li-comment-435128" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 18, 2017 at 2:21 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435128" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435128">
				
				<p>Hi Jacques — please see my reply to “Flávio”. I haven’t yet tried
 the code on the Raspberry Pi but will be documenting my experience with
 it in a future blog post.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435128" onclick='return addComment.moveForm( "comment-435128", "435128", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-435134"></a>
	      	
	      	<div id="li-comment-435134" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/c92e5aaedf0a01577fce938af6f52253.jpg" srcset="https://secure.gravatar.com/avatar/c92e5aaedf0a01577fce938af6f52253?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">amitoz</span>           
	                <span class="date">September 18, 2017 at 3:20 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435134" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435134">
				
				<p>Hey Adrian,</p>
<p>Once we have detected an object, how difficult you think will it be 
to segment it in real time using deep learning? Share ur insight pls.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435134" onclick='return addComment.moveForm( "comment-435134", "435134", "respond", "6092" )' aria-label="Reply to amitoz">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-435249"></a>
	      	
	      	<div id="li-comment-435249" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 20, 2017 at 7:26 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435249" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435249">
				
				<p>Object detection and object segmentation are two totally 
different techniques. You would need to use a deep learning network that
 was trained to perform object segmentation. Take a look at DeepMask.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435249" onclick='return addComment.moveForm( "comment-435249", "435249", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-435137"></a>
	      	
	      	<div id="li-comment-435137" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/e22c0e2a099540b8e60012bcf43ed43a.jpg" srcset="https://secure.gravatar.com/avatar/e22c0e2a099540b8e60012bcf43ed43a?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Kamel Rush</span>           
	                <span class="date">September 18, 2017 at 3:46 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435137" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435137">
				
				<p>Hi,</p>
<p>I tried to run the code, but got this: </p>
<p>File “C:\ProgramData\Miniconda33\lib\site-packages\imutils\convenience.py”, line 69, in resize<br>
    (h, w) = image.shape[:2]<br>
AttributeError: ‘NoneType’ object has no attribute ‘shape’</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435137" onclick='return addComment.moveForm( "comment-435137", "435137", "respond", "6092" )' aria-label="Reply to Kamel Rush">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-435248"></a>
	      	
	      	<div id="li-comment-435248" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 20, 2017 at 7:25 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435248" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435248">
				
				<p>It sounds like OpenCV cannot access your webcam. I detail common causes for NoneType errors in <a target="blank" href="https://www.pyimagesearch.com/2016/12/26/opencv-resolving-nonetype-errors/">this blog post</a>.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435248" onclick='return addComment.moveForm( "comment-435248", "435248", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment even depth-2 parent">
	    
	    	<a name="comment-435274"></a>
	      	
	      	<div id="li-comment-435274" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/6740fe9cb0ca896520ecca1a2caf0004.jpg" srcset="https://secure.gravatar.com/avatar/6740fe9cb0ca896520ecca1a2caf0004?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Leopard Li</span>           
	                <span class="date">September 20, 2017 at 9:06 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435274" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435274">
				
				<p>Hi,  have you resolved this problem? I got this problem too.<br>
But when I changed src=1 to src=0 in line “vs = VideoStream(src=1).start()”, it just worked!<br>
Hope this could be helpful to you if it still bothers you.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435274" onclick='return addComment.moveForm( "comment-435274", "435274", "respond", "6092" )' aria-label="Reply to Leopard Li">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-3">
	    
	    	<a name="comment-435300"></a>
	      	
	      	<div id="li-comment-435300" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 21, 2017 at 7:14 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435300" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435300">
				
				<p>Thank you for mentioning this. I used <code>src=1</code> because I have two webcams hooked up to my system. Most people should be using <code>src=0</code> as they likely only have one webcam. I will update the blog post.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435300" onclick='return addComment.moveForm( "comment-435300", "435300", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even depth-2 parent">
	    
	    	<a name="comment-435915"></a>
	      	
	      	<div id="li-comment-435915" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/faf55e7e9667bb88147676995ec8b477.jpg" srcset="https://secure.gravatar.com/avatar/faf55e7e9667bb88147676995ec8b477?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Enjoy</span>           
	                <span class="date">September 28, 2017 at 9:02 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435915" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435915">
				
				<p>you can try change Line35 :vs = VideoStream(src=0).start()  to vs = VideoStream(usePiCamera=args[“picamera”] &gt; 0).start()  </p>
<p>and add ap.add_argument(“-pi”, “–picamera”, type=int, default=-1,<br>
	help=”whether or not the Raspberry Pi camera should be used”)  after Line 14 </p>
<p>it‘s work for me</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435915" onclick='return addComment.moveForm( "comment-435915", "435915", "respond", "6092" )' aria-label="Reply to Enjoy">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-3 parent">
	    
	    	<a name="comment-436152"></a>
	      	
	      	<div id="li-comment-436152" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/b67b4d92b76c5d7a3923c9aa78872368.jpg" srcset="https://secure.gravatar.com/avatar/b67b4d92b76c5d7a3923c9aa78872368?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Abhi</span>           
	                <span class="date">October 1, 2017 at 12:34 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-436152" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-436152">
				
				<p>I get the AttributeError: ‘NoneType’ object has no attribute 
‘shape error as well and I tried the solution recommended by Enjoy 
(since I am getting this error with src=0) but the code does not run on 
my pi3. Every time run this code the OS crashes and pi reboots. Not sure
 what I am doing wrong here. Any help is appreciated.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-436152" onclick='return addComment.moveForm( "comment-436152", "436152", "respond", "6092" )' aria-label="Reply to Abhi">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-4 parent">
	    
	    	<a name="comment-436244"></a>
	      	
	      	<div id="li-comment-436244" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">October 2, 2017 at 9:47 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-436244" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-436244">
				
				<p>Are you using a USB camera or the Raspberry Pi camera module? 
Please make sure OpenCV can access your webcam. I detail these types of 
NoneType errors and why they occur in <a target="blank" href="https://www.pyimagesearch.com/2016/12/26/opencv-resolving-nonetype-errors/">this post</a>.</p>
<p>I’ll also be doing a deep learning object detection + Raspberry Pi post later this month.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-436244" onclick='return addComment.moveForm( "comment-436244", "436244", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-5">
	    
	    	<a name="comment-436488"></a>
	      	
	      	<div id="li-comment-436488" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/b67b4d92b76c5d7a3923c9aa78872368.jpg" srcset="https://secure.gravatar.com/avatar/b67b4d92b76c5d7a3923c9aa78872368?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Abhi</span>           
	                <span class="date">October 4, 2017 at 8:35 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-436488" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-436488">
				
				<p>I am using the raspberry pi camera. And I can access the camera fine, since I tested it with your pi home surveillance code.</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment even depth-5">
	    
	    	<a name="comment-436491"></a>
	      	
	      	<div id="li-comment-436491" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/b67b4d92b76c5d7a3923c9aa78872368.jpg" srcset="https://secure.gravatar.com/avatar/b67b4d92b76c5d7a3923c9aa78872368?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Abhi</span>           
	                <span class="date">October 4, 2017 at 9:16 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-436491" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-436491">
				
				<p>Also I forgot to mention that I tried the following from your 
unifying pi camera and cv2 video capture post with the appropriate 
argument.</p>
<p># initialize the video stream and allow the cammera sensor to warmup<br>
vs = VideoStream(usePiCamera=args[“picamera”] &gt; 0).start()</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-5">
	    
	    	<a name="comment-436649"></a>
	      	
	      	<div id="li-comment-436649" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">October 6, 2017 at 5:12 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-436649" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-436649">
				
				<p>Hi Abhi — thank you for the additional comments. Unfortunately, 
without direct access to your Raspberry Pi I’m not sure what the exact 
issue is. I’ll be covering object detection using deep learning on the 
Raspberry Pi the week of October 16th. I would suggest checking the code
 once I post the tutorial and see if you have the same error.</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even depth-3 parent">
	    
	    	<a name="comment-436841"></a>
	      	
	      	<div id="li-comment-436841" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/dd9ed546b1903b6e0fae2fd6d7704f3c.jpg" srcset="https://secure.gravatar.com/avatar/dd9ed546b1903b6e0fae2fd6d7704f3c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">DreamChaser</span>           
	                <span class="date">October 8, 2017 at 11:36 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-436841" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-436841">
				
				<p>Thanks for the post! I was having the same ‘NoneType’ error. I 
changed the camera source but that didn’t fix it. I added your argument 
update, along with adding –pi=1 to the command line and it worked. 
Thanks to the author (and everyone else who have posted) – it’s great to
 have help when you start.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-436841" onclick='return addComment.moveForm( "comment-436841", "436841", "respond", "6092" )' aria-label="Reply to DreamChaser">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-4">
	    
	    	<a name="comment-436942"></a>
	      	
	      	<div id="li-comment-436942" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">October 9, 2017 at 12:18 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-436942" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-436942">
				
				<p>Thanks for the comment. I’ll be covering how to perform real-time
 object detection with the Raspberry Pi here on the PyImageSearch blog 
in the next couple of weeks.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-436942" onclick='return addComment.moveForm( "comment-436942", "436942", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment even depth-4">
	    
	    	<a name="comment-447902"></a>
	      	
	      	<div id="li-comment-447902" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/c0fee2f86eadfc60cb63571fe9cab76c.jpg" srcset="https://secure.gravatar.com/avatar/c0fee2f86eadfc60cb63571fe9cab76c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Deepak</span>           
	                <span class="date">January 27, 2018 at 8:42 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-447902" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-447902">
				
				<p>can you please mention the modifications??</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-447902" onclick='return addComment.moveForm( "comment-447902", "447902", "respond", "6092" )' aria-label="Reply to Deepak">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt depth-2">
	    
	    	<a name="comment-453780"></a>
	      	
	      	<div id="li-comment-453780" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/29f96d3ae94bf095681b288b0cce0bcf.jpg" srcset="https://secure.gravatar.com/avatar/29f96d3ae94bf095681b288b0cce0bcf?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">zhenyuchen</span>           
	                <span class="date">March 21, 2018 at 2:00 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-453780" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-453780">
				
				<p>I also encountered this problem. Did you solve it? Can you exchange it? Thank you verymuch</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-453780" onclick='return addComment.moveForm( "comment-453780", "453780", "respond", "6092" )' aria-label="Reply to zhenyuchen">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-435138"></a>
	      	
	      	<div id="li-comment-435138" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/f7ed87d9b6d034db77f5ff1264403ff6.jpg" srcset="https://secure.gravatar.com/avatar/f7ed87d9b6d034db77f5ff1264403ff6?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href="http://hossein-zakizadeh.ir/" rel="external nofollow" class="url">zakizadeh</a></span>           
	                <span class="date">September 18, 2017 at 3:55 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435138" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435138">
				
				<p>hi .<br>
i want to get  position of Specified object in image .  all examples are
 about multi object detection . but i want to get position of only one 
object  . for example i want to get position of a book in image , not 
all object in image . only one of them . how can i do that ?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435138" onclick='return addComment.moveForm( "comment-435138", "435138", "respond", "6092" )' aria-label="Reply to zakizadeh">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-435246"></a>
	      	
	      	<div id="li-comment-435246" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 20, 2017 at 7:23 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435246" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435246">
				
				<p>First, you would want to ensure that your model has been trained 
to detect books. Then you can simply ignore all classes except the book 
class by checking only the index and probability associated with the 
book class. Alternatively you could fine-tune your network to apply 
detect books.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435246" onclick='return addComment.moveForm( "comment-435246", "435246", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-435163"></a>
	      	
	      	<div id="li-comment-435163" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/32f23dae49371952f2a564b937cd2989.jpg" srcset="https://secure.gravatar.com/avatar/32f23dae49371952f2a564b937cd2989?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Kevin Lee</span>           
	                <span class="date">September 19, 2017 at 1:19 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435163" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435163">
				
				<p>Thanks for great tutorial.</p>
<p>Is it running on the cpu? If so, is there a parameter we can change to gpu mode?</p>
<p>kevin</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435163" onclick='return addComment.moveForm( "comment-435163", "435163", "respond", "6092" )' aria-label="Reply to Kevin Lee">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-435244"></a>
	      	
	      	<div id="li-comment-435244" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 20, 2017 at 7:19 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435244" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435244">
				
				<p>This runs on the CPU. I don’t believe it’s possible to access the
 GPU via the Python bindings. I would suggest checking the OpenCV 
documentation for the C++ bindings.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435244" onclick='return addComment.moveForm( "comment-435244", "435244", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-435165"></a>
	      	
	      	<div id="li-comment-435165" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/aef54175c6b440da440dc8429e47b797.jpg" srcset="https://secure.gravatar.com/avatar/aef54175c6b440da440dc8429e47b797?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Arvind Gautam</span>           
	                <span class="date">September 19, 2017 at 1:27 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435165" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435165">
				
				<p>Hi Adrian  .</p>
<p>Its really a great tutorial .You are the Rock star of Computer Vision .</p>
<p>I have also implemented  a Faster-RCNN  with VGG16 and ZF network on 
my own Sports videos to detect logos in the video.I am getting good 
accuracy with both the networks,but I am able to processed only 7-8 
frames/sec with VGG16 and 14-15 frames/sec with ZF network .To process 
the video in real time,I am skipping every 5th frame. I have compared 
the results in both the cases (without skipping frames and skipping 
every 5th frame) having almost same accuracy .Can you guide me that I am
 doing right thing or not ? What can be the optimal value of skipping 
the frame to process in real time without  hurting  the accuracy.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435165" onclick='return addComment.moveForm( "comment-435165", "435165", "respond", "6092" )' aria-label="Reply to Arvind Gautam">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2 parent">
	    
	    	<a name="comment-435242"></a>
	      	
	      	<div id="li-comment-435242" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 20, 2017 at 7:17 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435242" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435242">
				
				<p>There is no real “optimal” number of frames to skip — you are 
doing the skip frames correctly. You normally tune the number of skip 
frames to give you the desired frame processing rate without sacrificing
 accuracy. This is normally done experimentally.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435242" onclick='return addComment.moveForm( "comment-435242", "435242", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-3">
	    
	    	<a name="comment-485731"></a>
	      	
	      	<div id="li-comment-485731" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/2d78e3d8a128ca7ae1ba1ef0e179a58a.jpg" srcset="https://secure.gravatar.com/avatar/2d78e3d8a128ca7ae1ba1ef0e179a58a?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">sophia</span>           
	                <span class="date">November 6, 2018 at 11:02 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-485731" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-485731">
				
				<p>Hi Adrian, how do you modify the code (from lines 39-54) to skip every nth frame? thanks,</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-485731" onclick='return addComment.moveForm( "comment-485731", "485731", "respond", "6092" )' aria-label="Reply to sophia">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt depth-2">
	    
	    	<a name="comment-453009"></a>
	      	
	      	<div id="li-comment-453009" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/5d82bf45134f7b66a1f99b8df35e243f.jpg" srcset="https://secure.gravatar.com/avatar/5d82bf45134f7b66a1f99b8df35e243f?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Cong</span>           
	                <span class="date">March 14, 2018 at 3:30 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-453009" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-453009">
				
				<p>Hi Arvind,</p>
<p>I have replaced the zf_test.prototxt and ZF_faster_rcnn_final.caffemodel files for use with ZF, but I can’t get it working. </p>
<p>Can you teach me how to change the code to get it working like tutorial above (Real-time object detection) ?</p>
<p>Thx !</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-453009" onclick='return addComment.moveForm( "comment-453009", "453009", "respond", "6092" )' aria-label="Reply to Cong">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-435168"></a>
	      	
	      	<div id="li-comment-435168" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/e4aad324d500c6de4e2a7765aeec6bae.jpg" srcset="https://secure.gravatar.com/avatar/e4aad324d500c6de4e2a7765aeec6bae?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Luke Cheng</span>           
	                <span class="date">September 19, 2017 at 2:32 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435168" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435168">
				
				<p>Hi I’m just curious how you trained your caffe model because I 
feel like the training process you used could be really good. thanks!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435168" onclick='return addComment.moveForm( "comment-435168", "435168", "respond", "6092" )' aria-label="Reply to Luke Cheng">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-435241"></a>
	      	
	      	<div id="li-comment-435241" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 20, 2017 at 7:16 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435241" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435241">
				
				<p>Please see my reply to “Thang”.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435241" onclick='return addComment.moveForm( "comment-435241", "435241", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-435182"></a>
	      	
	      	<div id="li-comment-435182" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/06674289c6b1beab439f648f45a1f21d.jpg" srcset="https://secure.gravatar.com/avatar/06674289c6b1beab439f648f45a1f21d?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">David Killen</span>           
	                <span class="date">September 19, 2017 at 8:34 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435182" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435182">
				
				<p>This is very interesting, thank you. Unless I missed it, you 
aren’t using prior and posterior probabilities across frames at all. I 
appreciate that if an object doesn’t move then there is no more 
information to be extracted but if it were to move slightly but change 
because of rotation or some other movement then there is some 
independence and the information can be combined. We can see this when 
you turn the swivel-chair; the software loses track of it when it’s face
 on (t=28 to t=30). Is this something that can be done or is it too 
difficult?</p>
<p>PS Can you explain why the human-identification is centred correctly 
at the start of the full video but badly off at the end please? It’s 
almost as if the swivel chair on the left of the picture is pushing the 
human-box off to the right, but I can’t see why it would do that.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435182" onclick='return addComment.moveForm( "comment-435182", "435182", "respond", "6092" )' aria-label="Reply to David Killen">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-435239"></a>
	      	
	      	<div id="li-comment-435239" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 20, 2017 at 7:13 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435239" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435239">
				
				<p>I’m only performing object detection in this post, not object 
tracking. You could apply object tracking to detected objects and 
achieve a smoother tracking. Take a look at correlation tracking 
methods.</p>
<p>As for the “goodness” of a detection this is based on the anchor 
points of the detection. I can’t explain the entire Single Shot Detector
 (SSD) framework in a comment, but I would suggest reading the original 
paper to understand how the framework is used. Please see the <a target="blank" href="https://www.pyimagesearch.com/2017/09/11/object-detection-with-deep-learning-and-opencv/">first blog post in the series</a> for more information.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435239" onclick='return addComment.moveForm( "comment-435239", "435239", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-435192"></a>
	      	
	      	<div id="li-comment-435192" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/4daee2e06f78de30b3de948b1e472756.jpg" srcset="https://secure.gravatar.com/avatar/4daee2e06f78de30b3de948b1e472756?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Jacques</span>           
	                <span class="date">September 19, 2017 at 2:53 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435192" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435192">
				
				<p>I ran it on my Pi3 last night.  works nicely!  Each frame takes a
 little over a second to classify.  The rate is quite acceptable.  Cool 
work and looking forward to any optimisations that you think will work..</p>
<p>How much do you think rewriting the app in C++ will increase the 
performance on the Pi?  I know CV is C/C++, but I am keen to profile the
 diff in a purely compiled language.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435192" onclick='return addComment.moveForm( "comment-435192", "435192", "respond", "6092" )' aria-label="Reply to Jacques">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-435237"></a>
	      	
	      	<div id="li-comment-435237" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 20, 2017 at 7:09 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435237" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435237">
				
				<p>In general you can expect some performance increases when using 
C/C++. Exactly how much depends on the algorithms that are being 
executed. Since we are already using compiled OpenCV functions the 
primary overhead is the function call from Python. I would expect a C++ 
program to execute faster but I don’t think it will make a substantial 
difference.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435237" onclick='return addComment.moveForm( "comment-435237", "435237", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-435203"></a>
	      	
	      	<div id="li-comment-435203" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/139cf1d95a5bdd41553b759d175a6fb2.jpg" srcset="https://secure.gravatar.com/avatar/139cf1d95a5bdd41553b759d175a6fb2?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Hubert de Lassus</span>           
	                <span class="date">September 19, 2017 at 8:45 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435203" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435203">
				
				<p>Great example code! Thank you. How would you modify the code to read an mp4 file instead of the camera?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435203" onclick='return addComment.moveForm( "comment-435203", "435203", "respond", "6092" )' aria-label="Reply to Hubert de Lassus">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2 parent">
	    
	    	<a name="comment-435233"></a>
	      	
	      	<div id="li-comment-435233" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 20, 2017 at 7:00 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435233" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435233">
				
				<p>You would swap out the VideoStream class for a <a target="blank" href="https://www.pyimagesearch.com/2017/02/06/faster-video-file-fps-with-cv2-videocapture-and-opencv/">FileVideoStream</a>.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435233" onclick='return addComment.moveForm( "comment-435233", "435233", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-3 parent">
	    
	    	<a name="comment-446111"></a>
	      	
	      	<div id="li-comment-446111" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/c07b0b0ff896f5a31d2a4bd6d10472fc.jpg" srcset="https://secure.gravatar.com/avatar/c07b0b0ff896f5a31d2a4bd6d10472fc?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Rohit Thakur</span>           
	                <span class="date">January 10, 2018 at 2:50 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-446111" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-446111">
				
				<p>Can you please explain a little what do you mean by swap out the 
VideoStream class? As i was trying to use this code for mp4 file and got
 an error. Please take a look:</p>
<p>[INFO] loading model…<br>
[INFO] starting video stream…<br>
Traceback (most recent call last):<br>
  File “new.py”, line 49, in<br>
    frame = imutils.resize(frame, width=400)<br>
…<br>
    (h, w) = image.shape[:2]<br>
AttributeError: ‘tuple’ object has no attribute ‘shape’</p>
<p>If possible can you tell me where i have to modify the code ?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-446111" onclick='return addComment.moveForm( "comment-446111", "446111", "respond", "6092" )' aria-label="Reply to Rohit Thakur">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-4">
	    
	    	<a name="comment-446150"></a>
	      	
	      	<div id="li-comment-446150" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 10, 2018 at 12:48 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-446150" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-446150">
				
				<p>By “swapping out” the VideoStream class I mean either:</p>
<p>1. Editing the videostream.py classes and subclasses in your site-packages directory after installing imutils<br>
2. Or more easily, copying the code and storing it in your project and 
then importing your own implementation of VideoStream rather than the 
one from imutils</p>
<p>Looking at your error, it appears your call to .read() of VideoStream
 is returning tuple, not an image. You would need to debug your code to 
resolve this. Using “print” statements can he helpful here.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-446150" onclick='return addComment.moveForm( "comment-446150", "446150", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-435216"></a>
	      	
	      	<div id="li-comment-435216" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/4761fd02787ac87ea2168293378fef15.jpg" srcset="https://secure.gravatar.com/avatar/4761fd02787ac87ea2168293378fef15?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Thang</span>           
	                <span class="date">September 20, 2017 at 2:49 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435216" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435216">
				
				<p>Many thanks, but can you show me how to program trained file as in your project you used MobileNetSSD_deploy.caffemodel file.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435216" onclick='return addComment.moveForm( "comment-435216", "435216", "respond", "6092" )' aria-label="Reply to Thang">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-435229"></a>
	      	
	      	<div id="li-comment-435229" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 20, 2017 at 6:58 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435229" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435229">
				
				<p>As I mention in the <a target="blank" href="https://www.pyimagesearch.com/2017/09/11/object-detection-with-deep-learning-and-opencv/">previous post</a>
 the MobileNet SSD was pre-trained. If you’re interested in training 
your own deep learning models, in particular object detectors, you’ll 
want to go through the ImageNet Bundle of <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python</a>.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435229" onclick='return addComment.moveForm( "comment-435229", "435229", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-435225"></a>
	      	
	      	<div id="li-comment-435225" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/be4b2f8132e159da7a3f6fab1db12ad7.jpg" srcset="https://secure.gravatar.com/avatar/be4b2f8132e159da7a3f6fab1db12ad7?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">memeka</span>           
	                <span class="date">September 20, 2017 at 5:55 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435225" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435225">
				
				<p>Hi Adrian,</p>
<p>Thanks for the great series of articles.<br>
I’ve tried this on an Odroid XU4 (which is more powerful than the RPi – 
better CPU, better GPU, USB3) – with OpenCV compiled with NEON 
optimizations and OpenCL enabled (Odroid XU4 has OpenCL working, and GPU
 in theory should reach 60GFlops).</p>
<p>Do you know if OpenCL is actually used by net.forward()? It would be 
interesting to benchmark GPU vs GPU if OpenCL is indeed used.</p>
<p>I was able to run detection at 3fps (3.01 fps to be exact :D) with no
 optimizations and 640×480 resolution (no resize in the code), but I am 
confident I can reach &gt;5fps with some optimizations, because:<br>
* I have my board underclocked to 1.7Ghz (stock is 2 Ghz, but I can try overclocking up to 2.2 Ghz)<br>
* I think I/O was the bottleneck, since even underclocked, CPU cores 
were used ~60%; adding some threading and buffering to the input should 
speed things up<br>
* to remove some delay from GTK, I used gstreamer output to tcpsink, and
 viewed the stream with VLC. This would also work great in the “security
 camera” scenario, where you want to see a stream remotely over the web.<br>
(PS: with gstreamer – from command line – I can actually use the hw h264
 encoder in the odroid; but the exact same pipeline – well, except the 
appsink detour – is not working in opencv python; this would be useful 
to save the CPU for detection and still have h264 streaming, IF I can 
make it work…)</p>
<p>I can’t wait to see your optimizations for the RPi, I’ll keep you posted with the framerate I can get on my Odroid 🙂</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435225" onclick='return addComment.moveForm( "comment-435225", "435225", "respond", "6092" )' aria-label="Reply to memeka">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2 parent">
	    
	    	<a name="comment-435227"></a>
	      	
	      	<div id="li-comment-435227" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 20, 2017 at 6:56 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435227" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435227">
				
				<p>I’m not sure if OpenCL is enabled by default, that’s a good 
question. And thanks for sharing your current setup! I’ll be doing a 
similar blog post as this one for the Raspberry Pi in the future — I’ll 
be sure to read through your comments and share optimizations and 
discuss which ones did or did not work (along with an explanation as to 
why). Thanks again!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435227" onclick='return addComment.moveForm( "comment-435227", "435227", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-3 parent">
	    
	    	<a name="comment-435251"></a>
	      	
	      	<div id="li-comment-435251" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/be4b2f8132e159da7a3f6fab1db12ad7.jpg" srcset="https://secure.gravatar.com/avatar/be4b2f8132e159da7a3f6fab1db12ad7?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">memeka</span>           
	                <span class="date">September 20, 2017 at 9:02 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435251" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435251">
				
				<p>So I was wrong – webcam was not the bottleneck. Even with 
threading, I still get 3fps max. I timed and indeed net.forward() takes 
300ms. So the only way I may speed this up is getting the CPU to 2 or 
2.2Ghz, and trying to write it in C++…</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435251" onclick='return addComment.moveForm( "comment-435251", "435251", "respond", "6092" )' aria-label="Reply to memeka">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-4 parent">
	    
	    	<a name="comment-441115"></a>
	      	
	      	<div id="li-comment-441115" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/56ff9cc9cff20e9c1fd8762e1a9cf0d3.jpg" srcset="https://secure.gravatar.com/avatar/56ff9cc9cff20e9c1fd8762e1a9cf0d3?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href="http://feedback.us/" rel="external nofollow" class="url">Mark</a></span>           
	                <span class="date">November 20, 2017 at 6:27 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-441115" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-441115">
				
				<p>FYI, When I switched my face tracking/detector code on RPi3 from 
Python to C++, I got more than 300% extra FPS improvement, now with 
multiple faces tracked and resolution 640×480 I easily maintain 10-15FPS
 on an optimised OpenCV 3.3.1.<br>
Now I’m exploring how to use Movidious stick VPU 12 Shaves to boost the 
performance further and get similar FPS with much higher resolutions…</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-441115" onclick='return addComment.moveForm( "comment-441115", "441115", "respond", "6092" )' aria-label="Reply to Mark">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-5">
	    
	    	<a name="comment-445669"></a>
	      	
	      	<div id="li-comment-445669" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/57d8587a6bef15f7d54b2aaad0f806e0.jpg" srcset="https://secure.gravatar.com/avatar/57d8587a6bef15f7d54b2aaad0f806e0?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Peter</span>           
	                <span class="date">January 4, 2018 at 10:39 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-445669" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-445669">
				
				<p>Could you share your C++ code? I want to make a benchmark on TX2 with opencv3.4 compared to python bindings.</p>
<p>Thanks</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt depth-3 parent">
	    
	    	<a name="comment-435323"></a>
	      	
	      	<div id="li-comment-435323" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/8c316822dbbf26b4106f5e0ce6db5768.jpg" srcset="https://secure.gravatar.com/avatar/8c316822dbbf26b4106f5e0ce6db5768?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Tom</span>           
	                <span class="date">September 21, 2017 at 4:21 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435323" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435323">
				
				<p>For comparison:<br>
Running the script from this blog post gave 0.4 fps on Raspberry Pi 3.<br>
Demo that comes with Movidius Compute Stick running SqueezeNet gives 3 
fps, though having inference in separate thread from video frames 
display assures a nice smooth experience. Just mind that it does not 
support Raspbian Stretch yet, so use archived card img’s (that’s due to 
built in Python 3.4 vs 3.5).</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435323" onclick='return addComment.moveForm( "comment-435323", "435323", "respond", "6092" )' aria-label="Reply to Tom">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-4">
	    
	    	<a name="comment-435370"></a>
	      	
	      	<div id="li-comment-435370" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 22, 2017 at 8:57 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435370" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435370">
				
				<p>Thanks for sharing Tom!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435370" onclick='return addComment.moveForm( "comment-435370", "435370", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1">
	    
	    	<a name="comment-435283"></a>
	      	
	      	<div id="li-comment-435283" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/be4b2f8132e159da7a3f6fab1db12ad7.jpg" srcset="https://secure.gravatar.com/avatar/be4b2f8132e159da7a3f6fab1db12ad7?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">memeka</span>           
	                <span class="date">September 21, 2017 at 2:08 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435283" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435283">
				
				<p>With C++, as expected, performance is very similar.<br>
I’ve tried using Halide dnn, but CPU target didn’t really get an output 
(I lost patience after &gt;10s), and OpenCL target resulted in a crash 
due to some missing function in some library… </p>
<p>So 3 fps is as best as I could get in the end.</p>
<p>With CPU at 2GHz, it scales it down to 1.8Ghz due to heat.<br>
But still, cores don’t get used 100% – any idea why? As you can see from here: <a href="https://imgur.com/a/D9tdp" rel="nofollow">https://imgur.com/a/D9tdp</a>
 max usage stays just below 300% from the max 400%, and no core gets 
used more than 80% – do you know if this is an OpenCV thing?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435283" onclick='return addComment.moveForm( "comment-435283", "435283", "respond", "6092" )' aria-label="Reply to memeka">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-435341"></a>
	      	
	      	<div id="li-comment-435341" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/7a01ed74d41a4835030a9dd877635f64.jpg" srcset="https://secure.gravatar.com/avatar/7a01ed74d41a4835030a9dd877635f64?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Ldw</span>           
	                <span class="date">September 21, 2017 at 10:40 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435341" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435341">
				
				<p>Hi Adrian, I tried running the code and got this : AttributeError: ‘module’ object has no attribute ‘dnn’<br>
Any ideas what’s the issue? Thanks in advance!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435341" onclick='return addComment.moveForm( "comment-435341", "435341", "respond", "6092" )' aria-label="Reply to Ldw">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-2 parent">
	    
	    	<a name="comment-435343"></a>
	      	
	      	<div id="li-comment-435343" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/7a01ed74d41a4835030a9dd877635f64.jpg" srcset="https://secure.gravatar.com/avatar/7a01ed74d41a4835030a9dd877635f64?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Ldw</span>           
	                <span class="date">September 21, 2017 at 11:29 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435343" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435343">
				
				<p>Just to add on I’ve downloaded OpenCV 3.3’s zip file here. Did i 
download at the wrong place, or did i download it the wrong way? What i 
did was just download the zip file from that website and added into my 
Home from the archive manager. Sorry for bothering!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435343" onclick='return addComment.moveForm( "comment-435343", "435343", "respond", "6092" )' aria-label="Reply to Ldw">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-3 parent">
	    
	    	<a name="comment-435368"></a>
	      	
	      	<div id="li-comment-435368" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 22, 2017 at 8:55 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435368" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435368">
				
				<p>Once you download OpenCV 3.3 you still need to compile and 
install it. Simply downloading the .zip files is not enough. Please see <a target="blank" href="https://www.pyimagesearch.com/opencv-tutorials-resources-guides/">this page</a> for OpenCV install instructions on your system.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435368" onclick='return addComment.moveForm( "comment-435368", "435368", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-4 parent">
	    
	    	<a name="comment-442609"></a>
	      	
	      	<div id="li-comment-442609" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/c271d3a213d280c9b79772548e4b9928.jpg" srcset="https://secure.gravatar.com/avatar/c271d3a213d280c9b79772548e4b9928?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Nermion</span>           
	                <span class="date">December 7, 2017 at 7:40 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-442609" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-442609">
				
				<p>hi adrian since you have no instructions for how to run this on 
windows platform, does that mean opencv and this tutorial is not 
compatible with windows platform? If it is possible, got any links where
 they talk how to set it up, so I can finish this tutorial? Thanks 🙂</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-442609" onclick='return addComment.moveForm( "comment-442609", "442609", "respond", "6092" )' aria-label="Reply to Nermion">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-5">
	    
	    	<a name="comment-442705"></a>
	      	
	      	<div id="li-comment-442705" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">December 8, 2017 at 4:49 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-442705" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-442705">
				
				<p>I don’t support Windows here PyImageSearch blog, I really recommend Unix-based systems for computer vision and <em>especially</em> deep learning. That said, if you have OpenCV 3.3 installed on your Windows machine this tutorial will work. The official <a target="blank" href="https://opencv.org/" rel="nofollow">OpenCV website</a> provides Windows install instructions.</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-435356"></a>
	      	
	      	<div id="li-comment-435356" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/881b6b3461a820e914e4b8b5a2966fbf.jpg" srcset="https://secure.gravatar.com/avatar/881b6b3461a820e914e4b8b5a2966fbf?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Roberto Maurizzi</span>           
	                <span class="date">September 22, 2017 at 4:02 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435356" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435356">
				
				<p>Hi Adrian, thanks for your many interesting and useful posts!</p>
<p>I missed this post and I did try to adapt your previous post to do 
what you did here by myself, searching docs and more examples, to read 
frames from a stream coming from an ONVIF surveillance camera that 
streams rtsp h264 video.</p>
<p>I’m having trouble with rtsp part: on Windows I get warnings from the
 cv2.VideoCapture() call ([rtsp @ 000001c517212180] Nonmatching 
transport in server reply – same from your imutils.VideoStream), on 
linux I get nothing but the capture isn’t detected as open.</p>
<p>Any advice about this? I already tried to check my ffmpeg 
installation, copied it to the same folder from which my python’s 
loading opencv dlls and if I try ffplay it can stream from the camera 
(after a few warnings: “‘circular_buffer_size’ option was set but it is 
not supported on this build (pthread support is required)” )</p>
<p>I was able to use ffserver to convert the rtsp stream from rtsp/h264 
to a mjpeg stream, but it consumes more CPU than running the dnn… any 
advice?</p>
<p>Roberto</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435356" onclick='return addComment.moveForm( "comment-435356", "435356", "respond", "6092" )' aria-label="Reply to Roberto Maurizzi">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-2 parent">
	    
	    	<a name="comment-435358"></a>
	      	
	      	<div id="li-comment-435358" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/881b6b3461a820e914e4b8b5a2966fbf.jpg" srcset="https://secure.gravatar.com/avatar/881b6b3461a820e914e4b8b5a2966fbf?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Roberto Maurizzi</span>           
	                <span class="date">September 22, 2017 at 4:36 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435358" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435358">
				
				<p>Update: I suspect the reason is explained here: <a href="http://answers.opencv.org/question/120699/can-opencv-310-be-set-to-capture-an-rtsp-stream-over-udp/" rel="nofollow">http://answers.opencv.org/question/120699/can-opencv-310-be-set-to-capture-an-rtsp-stream-over-udp/</a></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435358" onclick='return addComment.moveForm( "comment-435358", "435358", "respond", "6092" )' aria-label="Reply to Roberto Maurizzi">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-3 parent">
	    
	    	<a name="comment-435365"></a>
	      	
	      	<div id="li-comment-435365" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 22, 2017 at 8:52 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435365" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435365">
				
				<p>It’s been a long time since I’ve tried RTSP. I’ve made a note to cover this in a future blog post. Thanks for the comments!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435365" onclick='return addComment.moveForm( "comment-435365", "435365", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-4 parent">
	    
	    	<a name="comment-435375"></a>
	      	
	      	<div id="li-comment-435375" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/881b6b3461a820e914e4b8b5a2966fbf.jpg" srcset="https://secure.gravatar.com/avatar/881b6b3461a820e914e4b8b5a2966fbf?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Roberto Maurizzi</span>           
	                <span class="date">September 22, 2017 at 10:21 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435375" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435375">
				
				<p>I continued my research on a solution or workaround and found OpenCVmerged this patch about 3 days ago: <a href="https://github.com/opencv/opencv/pull/9292/files" rel="nofollow">https://github.com/opencv/opencv/pull/9292/files</a><br>
I’ll have to find some nightly builds and test it again 🙂</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435375" onclick='return addComment.moveForm( "comment-435375", "435375", "respond", "6092" )' aria-label="Reply to Roberto Maurizzi">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-5">
	    
	    	<a name="comment-435381"></a>
	      	
	      	<div id="li-comment-435381" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 22, 2017 at 11:29 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435381" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435381">
				
				<p>Thanks for sharing, Roberto!</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-435359"></a>
	      	
	      	<div id="li-comment-435359" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/91f9f46238f489437f847224554e7f16.jpg" srcset="https://secure.gravatar.com/avatar/91f9f46238f489437f847224554e7f16?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Lin</span>           
	                <span class="date">September 22, 2017 at 5:06 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435359" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435359">
				
				<p>Hi Adrian,</p>
<p>Yesterday I leave a reply about the error like:</p>
<p>AttributeError: ‘NoneType’ object has no attribute ‘shape’</p>
<p>But today I read the board carefully, found that someone has encountered the same problem.<br>
 And I already resolve the problem .</p>
<p>Thanks.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435359" onclick='return addComment.moveForm( "comment-435359", "435359", "respond", "6092" )' aria-label="Reply to Lin">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-435364"></a>
	      	
	      	<div id="li-comment-435364" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 22, 2017 at 8:51 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435364" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435364">
				
				<p>Thanks for the update, Lin!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435364" onclick='return addComment.moveForm( "comment-435364", "435364", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-435371"></a>
	      	
	      	<div id="li-comment-435371" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 22, 2017 at 8:58 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435371" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435371">
				
				<p>Change <code>src=0</code> and then <a target="blank" href="https://www.pyimagesearch.com/2016/12/26/opencv-resolving-nonetype-errors/">read this post</a> on NoneType errors.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435371" onclick='return addComment.moveForm( "comment-435371", "435371", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-435515"></a>
	      	
	      	<div id="li-comment-435515" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/72aea8dcf4dfbdc96b81ecf73c8244f5.jpg" srcset="https://secure.gravatar.com/avatar/72aea8dcf4dfbdc96b81ecf73c8244f5?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Jorge</span>           
	                <span class="date">September 23, 2017 at 10:48 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435515" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435515">
				
				<p>Hi Adrian. Thanks for your great job. Im thinking about the 
possibility of applying the recognition only for people in real time on 
the video stream of four security cameras in mosaic. It would be like 
having someone watching four cameras at a time and triggering alerts if 
people are detected in x consecutive frames. Maybe send an email with 
the pix.  What do you think about this and how can be implemented?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435515" onclick='return addComment.moveForm( "comment-435515", "435515", "respond", "6092" )' aria-label="Reply to Jorge">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2 parent">
	    
	    	<a name="comment-435549"></a>
	      	
	      	<div id="li-comment-435549" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 24, 2017 at 8:43 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435549" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435549">
				
				<p>You would need to have four video cameras around the area you 
want to monitor. Depending on how they are setup you could stream the 
frames over the network, although this would include a lot of I/O 
latency. You might want to use a Raspberry Pi on each camera to do local
 on-board processing, although I haven’t had a chance to investigate how
 fast this code would run on the Raspberry Pi. You also might want to 
consider doing <a target="blank" href="https://www.pyimagesearch.com/2015/06/01/home-surveillance-and-motion-detection-with-the-raspberry-pi-python-and-opencv/">basic motion detection</a> as a first step.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435549" onclick='return addComment.moveForm( "comment-435549", "435549", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-3 parent">
	    
	    	<a name="comment-435554"></a>
	      	
	      	<div id="li-comment-435554" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/72aea8dcf4dfbdc96b81ecf73c8244f5.jpg" srcset="https://secure.gravatar.com/avatar/72aea8dcf4dfbdc96b81ecf73c8244f5?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Jorge</span>           
	                <span class="date">September 24, 2017 at 9:38 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435554" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435554">
				
				<p>I was referring to using the mosaic of the four cameras as a 
single image and running the CNN detector of this post on that image 
only for the person category. Do you think it would be possible? And 
what observation or suggestion would you make?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435554" onclick='return addComment.moveForm( "comment-435554", "435554", "respond", "6092" )' aria-label="Reply to Jorge">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-4 parent">
	    
	    	<a name="comment-435557"></a>
	      	
	      	<div id="li-comment-435557" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 24, 2017 at 10:03 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435557" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435557">
				
				<p>Ah, got it. I understand now.</p>
<p>Yes, that is certainly possible and would likely work. You might get a
 few false detections from time to time, such as if there are parts of a
 person moving in each of the four corners and a classification is 
applied across the borders of the detections. But that is easily 
remedied since you’ll be constructing the mosaic yourself and you can 
filter out detections that are on the borders.</p>
<p>So yes, this approach should work.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435557" onclick='return addComment.moveForm( "comment-435557", "435557", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-5">
	    
	    	<a name="comment-435559"></a>
	      	
	      	<div id="li-comment-435559" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/72aea8dcf4dfbdc96b81ecf73c8244f5.jpg" srcset="https://secure.gravatar.com/avatar/72aea8dcf4dfbdc96b81ecf73c8244f5?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Jorge</span>           
	                <span class="date">September 24, 2017 at 10:18 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435559" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435559">
				
				<p>Thanks for the feedback Adrian!!!</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-435518"></a>
	      	
	      	<div id="li-comment-435518" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/6125a46805d17089feddd750a9af30cb.jpg" srcset="https://secure.gravatar.com/avatar/6125a46805d17089feddd750a9af30cb?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Enjoy</span>           
	                <span class="date">September 24, 2017 at 12:56 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435518" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435518">
				
				<p>WHY ?</p>
<p>Traceback (most recent call last):<br>
…<br>
    (h, w) = image.shape[:2]<br>
AttributeError: ‘NoneType’ object has no attribute ‘shape’</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435518" onclick='return addComment.moveForm( "comment-435518", "435518", "respond", "6092" )' aria-label="Reply to Enjoy">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-435547"></a>
	      	
	      	<div id="li-comment-435547" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 24, 2017 at 8:41 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435547" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435547">
				
				<p>Please see my reply to “Lin” above. Change <code>src=0</code> in the <code>VideoStream</code> class. I’ve also updated the blog post to reflect this change.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435547" onclick='return addComment.moveForm( "comment-435547", "435547", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-435525"></a>
	      	
	      	<div id="li-comment-435525" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/3238b7681a90b451bc0d56e34e0c8546.jpg" srcset="https://secure.gravatar.com/avatar/3238b7681a90b451bc0d56e34e0c8546?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href="https://github.com/arrybn" rel="external nofollow" class="url">Aleksandr Rybnikov</a></span>           
	                <span class="date">September 24, 2017 at 4:06 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435525" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435525">
				
				<p>Hi Adrian!<br>
Thanks for the another great post and tutorial!<br>
As you’ve maybe noticed, bounding boxes are inaccurate – they’re very 
wide comparing to the real size of object. It happens due to the 
following thing: you’re using blobFromImage finction, but it takes a 
central crop from the frame. And this central crop goes to the ssd 
model. But later you multiply unit box coordinates by full frame size. 
To fix it you can simply pass cv.resize(frame, (300,300)) as first 
parameter of blobFromImage() and all will be ok</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435525" onclick='return addComment.moveForm( "comment-435525", "435525", "respond", "6092" )' aria-label="Reply to Aleksandr Rybnikov">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-435546"></a>
	      	
	      	<div id="li-comment-435546" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 24, 2017 at 8:41 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435546" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435546">
				
				<p>Thank you for pointing this out, Aleksandr! I’ve updated the code
 in the blog post. I’ll also make sure to do a tutorial dedicated to the
 parameters of <code>cv2.blobFromImage</code> (and how it works) so other readers will not run into this issue as well. Thanks again!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435546" onclick='return addComment.moveForm( "comment-435546", "435546", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-435561"></a>
	      	
	      	<div id="li-comment-435561" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/6125a46805d17089feddd750a9af30cb.jpg" srcset="https://secure.gravatar.com/avatar/6125a46805d17089feddd750a9af30cb?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Enjoy</span>           
	                <span class="date">September 24, 2017 at 10:44 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435561" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435561">
				
				<p>OpenCV: out device of bound (0-0): 1<br>
OpenCV: camera failed to properly initialize!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435561" onclick='return addComment.moveForm( "comment-435561", "435561", "respond", "6092" )' aria-label="Reply to Enjoy">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-435568"></a>
	      	
	      	<div id="li-comment-435568" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 24, 2017 at 12:26 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435568" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435568">
				
				<p>Please double-check that you can access your webcam/USB camera 
via OpenCV. Based on your error messages you might have compiled OpenCV 
without video support.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435568" onclick='return addComment.moveForm( "comment-435568", "435568", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-435593"></a>
	      	
	      	<div id="li-comment-435593" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/1d3810ee50d15b43803d67eb3c0c1914.jpg" srcset="https://secure.gravatar.com/avatar/1d3810ee50d15b43803d67eb3c0c1914?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">RicardoGomes</span>           
	                <span class="date">September 24, 2017 at 9:46 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435593" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435593">
				
				<p>Nice tutorial, I managed to make it run in rpi but it detects 
objects with error, my television appeared as a sofa and the fan like 
chair. What could it be?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435593" onclick='return addComment.moveForm( "comment-435593", "435593", "respond", "6092" )' aria-label="Reply to RicardoGomes">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-2 parent">
	    
	    	<a name="comment-435594"></a>
	      	
	      	<div id="li-comment-435594" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/1d3810ee50d15b43803d67eb3c0c1914.jpg" srcset="https://secure.gravatar.com/avatar/1d3810ee50d15b43803d67eb3c0c1914?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">RicardoGomes</span>           
	                <span class="date">September 24, 2017 at 9:48 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435594" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435594">
				
				<p>In rpi it was very slow, would it need some kind of optimization?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435594" onclick='return addComment.moveForm( "comment-435594", "435594", "respond", "6092" )' aria-label="Reply to RicardoGomes">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-3">
	    
	    	<a name="comment-435736"></a>
	      	
	      	<div id="li-comment-435736" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 26, 2017 at 8:32 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435736" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435736">
				
				<p>I’ll be covering deep learning-based object detection using the Raspberry Pi in the next two blog posts. Stay tuned!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435736" onclick='return addComment.moveForm( "comment-435736", "435736", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-435604"></a>
	      	
	      	<div id="li-comment-435604" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/3327c1f60bd681b06091f86ef64ab4ae.jpg" srcset="https://secure.gravatar.com/avatar/3327c1f60bd681b06091f86ef64ab4ae?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Henry</span>           
	                <span class="date">September 25, 2017 at 2:27 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435604" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435604">
				
				<p>Hi Adrian,</p>
<p>Nice tutorial, thank you so much.</p>
<p>Besides, can the same code accept rtsp/rtmp video stream?<br>
If the answer is “No”, do you know any python module that can support rtsp/rtmp as video stream input? Many thanks.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435604" onclick='return addComment.moveForm( "comment-435604", "435604", "respond", "6092" )' aria-label="Reply to Henry">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-435733"></a>
	      	
	      	<div id="li-comment-435733" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 26, 2017 at 8:29 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435733" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435733">
				
				<p>This exact code couldn’t be used, but you could explore using the <code>cv2.VideoCapture</code> function for this.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435733" onclick='return addComment.moveForm( "comment-435733", "435733", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-435749"></a>
	      	
	      	<div id="li-comment-435749" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/607c89e546b0e233a9e84a48182c9ff9.jpg" srcset="https://secure.gravatar.com/avatar/607c89e546b0e233a9e84a48182c9ff9?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href="http://mrsydneym.com/" rel="external nofollow" class="url">Sydney</a></span>           
	                <span class="date">September 26, 2017 at 11:16 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435749" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435749">
				
				<p>Hie Adrian. Any pointers on how i can implement this as a web based application?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435749" onclick='return addComment.moveForm( "comment-435749", "435749", "respond", "6092" )' aria-label="Reply to Sydney">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2 parent">
	    
	    	<a name="comment-435935"></a>
	      	
	      	<div id="li-comment-435935" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 28, 2017 at 9:28 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435935" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435935">
				
				<p>Are you trying to build this as a REST API? Or trying to build a 
system that can access a user’s webcam through the browser and then 
apply object detection to the frame read from the webcam?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435935" onclick='return addComment.moveForm( "comment-435935", "435935", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-3 parent">
	    
	    	<a name="comment-435950"></a>
	      	
	      	<div id="li-comment-435950" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/607c89e546b0e233a9e84a48182c9ff9.jpg" srcset="https://secure.gravatar.com/avatar/607c89e546b0e233a9e84a48182c9ff9?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href="http://mrsydneym.com/" rel="external nofollow" class="url">Sydney</a></span>           
	                <span class="date">September 28, 2017 at 12:14 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435950" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435950">
				
				<p>I want to be able to upload a video using a web interface, then 
perform object detection on the uploaded video showing results on the 
webpage.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435950" onclick='return addComment.moveForm( "comment-435950", "435950", "respond", "6092" )' aria-label="Reply to Sydney">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-4 parent">
	    
	    	<a name="comment-435952"></a>
	      	
	      	<div id="li-comment-435952" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 28, 2017 at 12:29 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435952" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435952">
				
				<p>Can you elaborate on what you mean by “showing the results”? Do 
you plan on processing the video in the background and then once it’s 
done show the output video to the user? If you can explain a little more
 of what exactly you’re trying to accomplish and what your end goal is 
myself and others can try to provide suggestions.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435952" onclick='return addComment.moveForm( "comment-435952", "435952", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-5">
	    
	    	<a name="comment-436104"></a>
	      	
	      	<div id="li-comment-436104" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/607c89e546b0e233a9e84a48182c9ff9.jpg" srcset="https://secure.gravatar.com/avatar/607c89e546b0e233a9e84a48182c9ff9?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">sydney</span>           
	                <span class="date">September 30, 2017 at 10:45 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-436104" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-436104">
				
				<p>Ok. I need to run the application on google cloud platform and provide an interface for users to upload their own videos.</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-5">
	    
	    	<a name="comment-436251"></a>
	      	
	      	<div id="li-comment-436251" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">October 2, 2017 at 9:57 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-436251" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-436251">
				
				<p>Have users upload the videos and then bulk process the videos in 
the background and save the annotations. You can either then (1) draw 
the bounding boxes on the resulting images or (2) generate a new video 
via <a target="blank" href="https://www.pyimagesearch.com/2016/02/22/writing-to-video-with-opencv/">cv2.VideoWriter</a> with the bounding boxes drawn on top of them.</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-435789"></a>
	      	
	      	<div id="li-comment-435789" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/be4b2f8132e159da7a3f6fab1db12ad7.jpg" srcset="https://secure.gravatar.com/avatar/be4b2f8132e159da7a3f6fab1db12ad7?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">memeka</span>           
	                <span class="date">September 27, 2017 at 12:55 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435789" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435789">
				
				<p>Hi Adrian,</p>
<p>As mentioned above, I am getting 3fps on detection (~330ms in 
net.forward()), and I’m saving the output via a gstreamer pipeline 
(convert to h264, then either store in file, or realtime streaming with 
hls).</p>
<p>In order to improve the output fps, I decided to read a batch of 5 
frames, do detection on the first, then apply the boxes and text to all 5
 before sending them to the gst pipeline.</p>
<p>Using cv2.VideoCapture, I end up with around the half the previous 
framerate (so an extra 300-350ms spent in 4xVideoCapture.read()), which I
 am not very happy with.</p>
<p>So I decided to modify imutils.WebcamVideoStream to do 5 reads, and I
 have (f1, f2, f3, f4, f5) = MyWebcamVideoStream.read() – using this 
approach I only lose ~50ms and I can get close to 15fps output. However,
 the problem here is that the resulting video has frames out of order. I
 tried having the 5 read() protected by a Lock, but without much 
success.</p>
<p>Any suggestion on how I can keep the correct frame order with threaded WebcamVideoStream?</p>
<p>Thanks.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435789" onclick='return addComment.moveForm( "comment-435789", "435789", "respond", "6092" )' aria-label="Reply to memeka">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2 parent">
	    
	    	<a name="comment-435807"></a>
	      	
	      	<div id="li-comment-435807" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 27, 2017 at 6:40 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435807" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435807">
				
				<p>The <code>WebcamVideoStream</code> class is threaded so I would suggest using a thread-safe data structure to store the frames. Something like Python’s <code>Queue</code> class would be a really good start.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435807" onclick='return addComment.moveForm( "comment-435807", "435807", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-3 parent">
	    
	    	<a name="comment-435829"></a>
	      	
	      	<div id="li-comment-435829" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/be4b2f8132e159da7a3f6fab1db12ad7.jpg" srcset="https://secure.gravatar.com/avatar/be4b2f8132e159da7a3f6fab1db12ad7?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">memeka</span>           
	                <span class="date">September 27, 2017 at 8:28 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435829" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435829">
				
				<p>Thanks Adrian,<br>
I figured out what the problem was: reading 5 frames was actually taking
 longer than net.forward(), so WebcamVideoStream was returning the same 5
 frames as before; by reducing the batch to 4 frames, and also 
synchronising  the threads, I managed to get 2.5 fps detected + extra 3 
frames for each detection for a total of 10fps webcam input/ pipeline 
output.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435829" onclick='return addComment.moveForm( "comment-435829", "435829", "respond", "6092" )' aria-label="Reply to memeka">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-4 parent">
	    
	    	<a name="comment-435831"></a>
	      	
	      	<div id="li-comment-435831" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 27, 2017 at 8:49 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435831" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435831">
				
				<p>Congrats on resolving the issue! The speed your getting is very 
impressive, I’ll have to play around with the Odroid in the future 🙂</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435831" onclick='return addComment.moveForm( "comment-435831", "435831", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-5">
	    
	    	<a name="comment-435885"></a>
	      	
	      	<div id="li-comment-435885" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/be4b2f8132e159da7a3f6fab1db12ad7.jpg" srcset="https://secure.gravatar.com/avatar/be4b2f8132e159da7a3f6fab1db12ad7?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">memeka</span>           
	                <span class="date">September 28, 2017 at 4:58 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435885" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435885">
				
				<p>Thanks Adrian</p>
<p>Since there are many here who, like me, would like to use this for a 
security camera, I would like to share my end script, maybe somebody 
else would find it useful: <a href="http://paste.debian.net/988135/" rel="nofollow">http://paste.debian.net/988135/</a><br>
It reads the input from a .json file, such as: <a href="http://paste.debian.net/988136/" rel="nofollow">http://paste.debian.net/988136/</a></p>
<p>* gst_input defines the source (doesn’t actually have to be gst, “0” will work for /dev/video0 webcam)<br>
* gst_output defines the output<br>
* batch_size defines the number of frames read at once. On my system, 4 
was optimal (reading 4 frames took similar amount of time to detection 
on 1 frame)<br>
* base_confidence defines the minimum confidence for an object to be considered<br>
* detect_classes contains “class_name”:”confidence” that you want to 
track (e.g. ‘person’). Note that confidence here can be lower than 
“base_confidence”<br>
* detect_timeout defines a time (in s) since a class is considered 
“detected” again. E.g. if detect_time = 10s, and same class was detected
 2s ago, it won’t be considered “detected” again<br>
* detect_action contains a script to be executed on detection. Script 
needs to have as input “class”, “confidence”, and “filename”</p>
<p>The output video (e.g. the HLS stream in the json example above) 
contains all classes detected w/ surrounding boxes and labels. Of 
course, detection is done only on the 1st frame out of batch_size, but 
all frames have the boxes and labels.<br>
On detecting a class specified in “detect_classes”, the script saves the
 image in a ‘detected’ folder (in the format timestamp_classname.jpg), 
then executes the action specified.<br>
In my case, I can always watch the stream online and see what the camera
 detects, but I can choose to have an action taken (e.g. send 
email/notification with a picture) when certain objects are detected.<br>
With ~330ms net.forward() and a batch of 4, I can achieve reliably 10fps output.</p>
<p>If somebody has suggestions on how I can improve this, please leave a comment 🙂</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-5">
	    
	    	<a name="comment-435910"></a>
	      	
	      	<div id="li-comment-435910" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 28, 2017 at 8:58 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435910" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435910">
				
				<p>Awesome, thanks for sharing memeka!</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-435848"></a>
	      	
	      	<div id="li-comment-435848" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/96e07190d9d5f9617139888918525435.jpg" srcset="https://secure.gravatar.com/avatar/96e07190d9d5f9617139888918525435?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Ying</span>           
	                <span class="date">September 27, 2017 at 12:34 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435848" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435848">
				
				<p>hi Adrian, </p>
<p>thank you so much for your tutorial!  I am a big fan!</p>
<p>I was wondering can I use pre recorded video clips instead of live 
camera to feed the video stream? Could you suggest how I can achieve 
this please?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435848" onclick='return addComment.moveForm( "comment-435848", "435848", "respond", "6092" )' aria-label="Reply to Ying">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-435924"></a>
	      	
	      	<div id="li-comment-435924" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 28, 2017 at 9:12 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435924" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435924">
				
				<p>Yes. Please see my reply to “Hubert de Lassus”.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435924" onclick='return addComment.moveForm( "comment-435924", "435924", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-435862"></a>
	      	
	      	<div id="li-comment-435862" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/11f22513ac2639c461d3b73ec7259511.jpg" srcset="https://secure.gravatar.com/avatar/11f22513ac2639c461d3b73ec7259511?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">tiago</span>           
	                <span class="date">September 27, 2017 at 4:36 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435862" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435862">
				
				<p>How can I provide the –prototxt and –model direct argument in source code?</p>
<p>args = vars(ap.parse_args())</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435862" onclick='return addComment.moveForm( "comment-435862", "435862", "respond", "6092" )' aria-label="Reply to tiago">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-435919"></a>
	      	
	      	<div id="li-comment-435919" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 28, 2017 at 9:06 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-435919" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-435919">
				
				<p>Please read up on <a target="blank" href="https://www.pyimagesearch.com/2018/03/12/python-argparse-command-line-arguments/" rel="nofollow">command line arguments</a>.
 You need to execute the script via the command line — that is where you
 supply the arguments. The code DOES NOT have to be edited.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-435919" onclick='return addComment.moveForm( "comment-435919", "435919", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-436201"></a>
	      	
	      	<div id="li-comment-436201" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/004c33017ccda750060020ee19d03bbd.jpg" srcset="https://secure.gravatar.com/avatar/004c33017ccda750060020ee19d03bbd?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Foobar</span>           
	                <span class="date">October 1, 2017 at 8:30 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-436201" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-436201">
				
				<p>When the network was trained did the training data have bounding 
boxes in it? Or was it trained without and OpenCV can just get the 
bounding boxes by itself?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-436201" onclick='return addComment.moveForm( "comment-436201", "436201", "respond", "6092" )' aria-label="Reply to Foobar">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2 parent">
	    
	    	<a name="comment-436234"></a>
	      	
	      	<div id="li-comment-436234" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">October 2, 2017 at 9:37 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-436234" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-436234">
				
				<p>When you train an object detector you need the class labels + the
 bounding boxes. OpenCV cannot generate the bounding boxes itself.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-436234" onclick='return addComment.moveForm( "comment-436234", "436234", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-3 parent">
	    
	    	<a name="comment-436318"></a>
	      	
	      	<div id="li-comment-436318" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/004c33017ccda750060020ee19d03bbd.jpg" srcset="https://secure.gravatar.com/avatar/004c33017ccda750060020ee19d03bbd?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Foobar</span>           
	                <span class="date">October 2, 2017 at 8:22 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-436318" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-436318">
				
				<p>Are the bounding boxes drawn on the training data or is there some other method of doing it?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-436318" onclick='return addComment.moveForm( "comment-436318", "436318", "respond", "6092" )' aria-label="Reply to Foobar">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-4 parent">
	    
	    	<a name="comment-436364"></a>
	      	
	      	<div id="li-comment-436364" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">October 3, 2017 at 11:05 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-436364" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-436364">
				
				<p>The bounding boxes are not actually drawn on the raw image. The 
bounding box (x, y)-coordinates are saved in a separate file, such as a 
.txt, .json, or .xml file.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-436364" onclick='return addComment.moveForm( "comment-436364", "436364", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-5">
	    
	    	<a name="comment-436382"></a>
	      	
	      	<div id="li-comment-436382" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/78a5e68383943e9a29288f522f970233.jpg" srcset="https://secure.gravatar.com/avatar/78a5e68383943e9a29288f522f970233?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Foobar</span>           
	                <span class="date">October 3, 2017 at 4:26 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-436382" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-436382">
				
				<p>Thank you Adrian for your help.</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1">
	    
	    	<a name="comment-436506"></a>
	      	
	      	<div id="li-comment-436506" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/fb9d5a7f54d6a8bc4cd62e8598a1d59f.jpg" srcset="https://secure.gravatar.com/avatar/fb9d5a7f54d6a8bc4cd62e8598a1d59f?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Jussi Wright</span>           
	                <span class="date">October 5, 2017 at 4:38 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-436506" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-436506">
				
				<p>Hi, </p>
<p>I got the detector to work on the video with the help of your another blog (<a href="https://www.pyimagesearch.com/2017/02/06/faster-video-file-fps-with-cv2-videocapture-and-opencv/" rel="nofollow">https://www.pyimagesearch.com/2017/02/06/faster-video-file-fps-with-cv2-videocapture-and-opencv/</a>). </p>
<p>But I have a couble of supplementary questions.<br>
1. How can I easily get a saved video where recognizations are displayed (Can I use cv2.imwrite)?<br>
2. How can I remove the unnecessary labels I do not need (cat, bottle etc). Removing only the label name produces an error code.<br>
3. How do I adjust the code so that only the detections with an accuracy of more than 70-80% are displayed.<br>
4. Do you know ready models for identifying road signs, for example?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-436506" onclick='return addComment.moveForm( "comment-436506", "436506", "respond", "6092" )' aria-label="Reply to Jussi Wright">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-436508"></a>
	      	
	      	<div id="li-comment-436508" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/fb9d5a7f54d6a8bc4cd62e8598a1d59f.jpg" srcset="https://secure.gravatar.com/avatar/fb9d5a7f54d6a8bc4cd62e8598a1d59f?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Jussi</span>           
	                <span class="date">October 5, 2017 at 6:18 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-436508" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-436508">
				
				<p>Ok, I found a point for adjusting the accuracy of the detection: 
ap.add_argument(“-c”, “–confidence”, type=float, default=0.2 &lt;—</p>
<p>Also I found your blog (<a href="https://www.pyimagesearch.com/2016/02/22/writing-to-video-with-opencv/" rel="nofollow">https://www.pyimagesearch.com/2016/02/22/writing-to-video-with-opencv/</a>), but I could not find the right settings for me… I get error:<br>
…argument -c/–codec: conflicting option string: -c</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-436508" onclick='return addComment.moveForm( "comment-436508", "436508", "respond", "6092" )' aria-label="Reply to Jussi">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-436642"></a>
	      	
	      	<div id="li-comment-436642" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">October 6, 2017 at 5:06 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-436642" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-436642">
				
				<p>You need to update your command line arguments. If you have 
conflicting options, change the key for the command line arguments. I 
would suggest reading up on <a target="blank" href="https://www.pyimagesearch.com/2018/03/12/python-argparse-command-line-arguments/" rel="nofollow">command line arguments</a> before continuing.</p>
<p>To address your other questions:</p>
<p>1. Answered from your comment.<br>
2. You cannot remove just the label name. Check the index of the label (i.e., <code>idx</code>) and ignore all that you are uninterested in.<br>
3. Provide <code>--confidence 0.7</code> as a command line arguments.<br>
4. It really depends on the road signs. Most road signs are different in various countries.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-436642" onclick='return addComment.moveForm( "comment-436642", "436642", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-436568"></a>
	      	
	      	<div id="li-comment-436568" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/68ca4abb9de14bab1655a11b9673afea.jpg" srcset="https://secure.gravatar.com/avatar/68ca4abb9de14bab1655a11b9673afea?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">chetan j</span>           
	                <span class="date">October 6, 2017 at 3:55 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-436568" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-436568">
				
				<p>hi,<br>
great work, nice tutorial</p>
<p>just one question, i tried to run this code in my system, it works nice but have delay 5 to 8 sec to detect objects.</p>
<p>how to overcome this problem.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-436568" onclick='return addComment.moveForm( "comment-436568", "436568", "respond", "6092" )' aria-label="Reply to chetan j">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2 parent">
	    
	    	<a name="comment-436635"></a>
	      	
	      	<div id="li-comment-436635" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">October 6, 2017 at 4:54 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-436635" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-436635">
				
				<p>What are the specs of your system? 5-8 seconds is a huge delay. It sounds like your install of OpenCV may not be optimized.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-436635" onclick='return addComment.moveForm( "comment-436635", "436635", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-3 parent">
	    
	    	<a name="comment-436867"></a>
	      	
	      	<div id="li-comment-436867" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/68ca4abb9de14bab1655a11b9673afea.jpg" srcset="https://secure.gravatar.com/avatar/68ca4abb9de14bab1655a11b9673afea?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">chetan j</span>           
	                <span class="date">October 9, 2017 at 3:15 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-436867" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-436867">
				
				<p>hi,<br>
im using reaspbeyy pi 3- code runs fine but have delay of 5 to 8 sec.</p>
<p>how to resolve this problem</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-436867" onclick='return addComment.moveForm( "comment-436867", "436867", "respond", "6092" )' aria-label="Reply to chetan j">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-4">
	    
	    	<a name="comment-436937"></a>
	      	
	      	<div id="li-comment-436937" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">October 9, 2017 at 12:14 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-436937" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-436937">
				
				<p>I will be discussing optimizations and how to improve the frames 
per second object detection rate on the Raspberry Pi in future posts. I 
would suggest <a target="blank" href="https://www.pyimagesearch.com/2017/10/09/optimizing-opencv-on-the-raspberry-pi/">starting here</a> with a discussion on how to optimize your OpenCV + Raspberry Pi install.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-436937" onclick='return addComment.moveForm( "comment-436937", "436937", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt depth-3 parent">
	    
	    	<a name="comment-437679"></a>
	      	
	      	<div id="li-comment-437679" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/8f1cece4a263de6261f2ba1c2f76c109.jpg" srcset="https://secure.gravatar.com/avatar/8f1cece4a263de6261f2ba1c2f76c109?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href="https://github.com/inayatkh" rel="external nofollow" class="url">inayatullah</a></span>           
	                <span class="date">October 16, 2017 at 3:44 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-437679" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-437679">
				
				<p>I have reimplemented the same, but with using sddcaffe for 
python.When i detector is applied on every second frame then on my 
system I can get 12 to 14 frames per second. My code is available here</p>
<p><a href="https://github.com/inayatkh/realTimeObjectDetection" rel="nofollow">https://github.com/inayatkh/realTimeObjectDetection</a></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-437679" onclick='return addComment.moveForm( "comment-437679", "437679", "respond", "6092" )' aria-label="Reply to inayatullah">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-4">
	    
	    	<a name="comment-437741"></a>
	      	
	      	<div id="li-comment-437741" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">October 16, 2017 at 12:19 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-437741" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-437741">
				
				<p>Thanks for sharing, Inayatullah!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-437741" onclick='return addComment.moveForm( "comment-437741", "437741", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1">
	    
	    	<a name="comment-436698"></a>
	      	
	      	<div id="li-comment-436698" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/68ca4abb9de14bab1655a11b9673afea.jpg" srcset="https://secure.gravatar.com/avatar/68ca4abb9de14bab1655a11b9673afea?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Chetan J</span>           
	                <span class="date">October 7, 2017 at 9:51 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-436698" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-436698">
				
				<p>I’m using Raspberry Pi 3,<br>
Code runs fine but slower operation</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-436698" onclick='return addComment.moveForm( "comment-436698", "436698", "respond", "6092" )' aria-label="Reply to Chetan J">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-437008"></a>
	      	
	      	<div id="li-comment-437008" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/369c47eb159b036eaa57c5bc9c536c09.jpg" srcset="https://secure.gravatar.com/avatar/369c47eb159b036eaa57c5bc9c536c09?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">vinu</span>           
	                <span class="date">October 9, 2017 at 7:29 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-437008" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-437008">
				
				<p>hi adrin<br>
 how can i assign a unique id number to each and every  human object</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-437008" onclick='return addComment.moveForm( "comment-437008", "437008", "respond", "6092" )' aria-label="Reply to vinu">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-437412"></a>
	      	
	      	<div id="li-comment-437412" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">October 13, 2017 at 9:16 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-437412" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-437412">
				
				<p>What you’re referring to is called “object tracking”. Once you 
detect a particular object you can track it. I would suggest researching
 correlation trackers. Centroid-based tracking would be the easiest to 
implement.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-437412" onclick='return addComment.moveForm( "comment-437412", "437412", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-437024"></a>
	      	
	      	<div id="li-comment-437024" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/b62a51f47897dd294fba073164292afd.jpg" srcset="https://secure.gravatar.com/avatar/b62a51f47897dd294fba073164292afd?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Justin</span>           
	                <span class="date">October 9, 2017 at 10:19 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-437024" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-437024">
				
				<p>Hi Adrian.<br>
Thank you for this post.<br>
I followed you and made it with Rpi3<br>
But too slow…<br>
How can I fix it?</p>
<p>and when I started real_time_~.py<br>
I got this message.<br>
[INFO] loading model…<br>
[INFO]starting video stream…</p>
<p>** (Frame:3570): WARNING **: Error retrieving accessibility bus 
address: org.freedesktop.DBus.Error.ServiceUnknown: The name 
org.a11y.Bus was not provided by any .service files</p>
<p>what should I do??</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-437024" onclick='return addComment.moveForm( "comment-437024", "437024", "respond", "6092" )' aria-label="Reply to Justin">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2 parent">
	    
	    	<a name="comment-437410"></a>
	      	
	      	<div id="li-comment-437410" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">October 13, 2017 at 9:12 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-437410" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-437410">
				
				<p>Please see <a target="blank" href="https://www.pyimagesearch.com/2017/10/09/optimizing-opencv-on-the-raspberry-pi/">this post</a> on optimizing the Raspberry Pi for OpenCV. The commenter “jsmith” also has a solution.</p>
<p>For what it’s worth, this is NOT an error message. It’s just a warning from the GUI library and it can be ignored.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-437410" onclick='return addComment.moveForm( "comment-437410", "437410", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-3 parent">
	    
	    	<a name="comment-461390"></a>
	      	
	      	<div id="li-comment-461390" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/2662bea53cd15440036ad7e8dc56add7.jpg" srcset="https://secure.gravatar.com/avatar/2662bea53cd15440036ad7e8dc56add7?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Stevie t.</span>           
	                <span class="date">May 13, 2018 at 6:42 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-461390" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-461390">
				
				<p>I don’t get it. I have the same error and the page didn’t say 
anything. Can you tell me a command I can put in to bypass it if it is 
not a real error.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-461390" onclick='return addComment.moveForm( "comment-461390", "461390", "respond", "6092" )' aria-label="Reply to Stevie t.">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-4">
	    
	    	<a name="comment-461542"></a>
	      	
	      	<div id="li-comment-461542" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">May 14, 2018 at 11:55 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-461542" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-461542">
				
				<p><a target="blank" href="https://www.pyimagesearch.com/2017/10/09/optimizing-opencv-on-the-raspberry-pi/#comment-437270">Here is a direct link to the comment</a> I am referring to. Give the solution a try and let us know if it works. I am curious myself.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-461542" onclick='return addComment.moveForm( "comment-461542", "461542", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-437043"></a>
	      	
	      	<div id="li-comment-437043" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/0a5072b56a59ae1c148246527bf38380.jpg" srcset="https://secure.gravatar.com/avatar/0a5072b56a59ae1c148246527bf38380?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Dim</span>           
	                <span class="date">October 10, 2017 at 1:25 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-437043" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-437043">
				
				<p>First of all – thank you forbthia tutorial – very informative. 
Maybe i missed this but do you have any tutorials on real time custom 
object detection? I want to add additinal object that is not included in
 the trained model…</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-437043" onclick='return addComment.moveForm( "comment-437043", "437043", "respond", "6092" )' aria-label="Reply to Dim">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-437409"></a>
	      	
	      	<div id="li-comment-437409" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">October 13, 2017 at 9:11 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-437409" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-437409">
				
				<p>Hi Dim — I cover object detection in detail inside the <a target="blank" href="https://www.pyimagesearch.com/pyimagesearch-gurus/">PyImageSearch Gurus course</a>. I would suggest starting there.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-437409" onclick='return addComment.moveForm( "comment-437409", "437409", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-437177"></a>
	      	
	      	<div id="li-comment-437177" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/e80a9fec73afe1d57871738e8521f159.jpg" srcset="https://secure.gravatar.com/avatar/e80a9fec73afe1d57871738e8521f159?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Mindfreak</span>           
	                <span class="date">October 11, 2017 at 9:59 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-437177" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-437177">
				
				<p>Great work sir.<br>
but while I am trying to run code it gives me error:</p>
<p>AttributeError: module ‘cv2’ has no attribute ‘dnn’</p>
<p>how to solve this error?<br>
I am using OpenCV 3.2.0 version.<br>
Thanks in advance..</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-437177" onclick='return addComment.moveForm( "comment-437177", "437177", "respond", "6092" )' aria-label="Reply to Mindfreak">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-437389"></a>
	      	
	      	<div id="li-comment-437389" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">October 13, 2017 at 8:56 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-437389" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-437389">
				
				<p>The <code>dnn</code> module is only available in <strong>OpenCV 3.3</strong> and newer. Please upgrade to OpenCV 3.3 and you’ll be able to run the code.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-437389" onclick='return addComment.moveForm( "comment-437389", "437389", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-437263"></a>
	      	
	      	<div id="li-comment-437263" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/6a0203cb8b88007e0b98a1d7c80cab5f.jpg" srcset="https://secure.gravatar.com/avatar/6a0203cb8b88007e0b98a1d7c80cab5f?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Mahsa</span>           
	                <span class="date">October 12, 2017 at 8:32 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-437263" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-437263">
				
				<p>Thank you for this awesome tutorial, this works quite nice on my 
laptop computer whereas it has too much delay on odroid (which I might 
try out the optimized opencv you’ve posted)</p>
<p>but Is there a way to retrain the exact model but with fewer classes?? since I only need two of those classes.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-437263" onclick='return addComment.moveForm( "comment-437263", "437263", "respond", "6092" )' aria-label="Reply to Mahsa">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-437376"></a>
	      	
	      	<div id="li-comment-437376" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">October 13, 2017 at 8:45 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-437376" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-437376">
				
				<p>You would need to apply fine-tuning to reduce the number of 
classes or you can just ignore the indexes of classes you don’t care 
about. However, keep in mind that the total number of classes isn’t 
going to significantly slow down the network. Yes, less classes means 
less computation — but there is a ton of computation and depth earlier 
in the network.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-437376" onclick='return addComment.moveForm( "comment-437376", "437376", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-437449"></a>
	      	
	      	<div id="li-comment-437449" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/b6f36c2398286bde7b8518cd295f6d12.jpg" srcset="https://secure.gravatar.com/avatar/b6f36c2398286bde7b8518cd295f6d12?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Shenghui Yang</span>           
	                <span class="date">October 13, 2017 at 3:53 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-437449" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-437449">
				
				<p>Hi Adrian</p>
<p>Thanks for the wonderful tutorial. I have a small question. I got an error when running codes:</p>
<p>AttributeError: ‘module’ object has no attribute ‘dnn’</p>
<p>I have installed the opencv3.3.0, and it works. How can I deal with it?</p>
<p>Thank you.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-437449" onclick='return addComment.moveForm( "comment-437449", "437449", "respond", "6092" )' aria-label="Reply to Shenghui Yang">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-437563"></a>
	      	
	      	<div id="li-comment-437563" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">October 14, 2017 at 10:38 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-437563" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-437563">
				
				<p>Hmm, I know you mentioned having OpenCV 3.3 installed but it 
sounds like you may not have it properly installed. What is the output 
o:</p>
<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93d90792ccb218805932" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft">$ python
&gt;&gt;&gt; import cv2
&gt;&gt;&gt; cv2.__version__</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93d90792ccb218805932-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d90792ccb218805932-2">2</div><div class="crayon-num" data-line="crayon-5c93d90792ccb218805932-3">3</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93d90792ccb218805932-1"><span class="crayon-sy">$</span><span class="crayon-h"> </span><span class="crayon-v">python</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d90792ccb218805932-2"><span class="crayon-o">&gt;&gt;&gt;</span><span class="crayon-h"> </span><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span></div><div class="crayon-line" id="crayon-5c93d90792ccb218805932-3"><span class="crayon-o">&gt;&gt;&gt;</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-v">__version__</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0007 seconds] -->
<p></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-437563" onclick='return addComment.moveForm( "comment-437563", "437563", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-437759"></a>
	      	
	      	<div id="li-comment-437759" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/550c37ef4a82c70305369e8a31c52b64.jpg" srcset="https://secure.gravatar.com/avatar/550c37ef4a82c70305369e8a31c52b64?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href="https://gettocode.com/" rel="external nofollow" class="url">Andrey</a></span>           
	                <span class="date">October 16, 2017 at 12:37 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-437759" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-437759">
				
				<p>This is very motivational post to try this technique. Thank you Adrian.<br>
How difficult it would be to switch to TensorFlow instead?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-437759" onclick='return addComment.moveForm( "comment-437759", "437759", "respond", "6092" )' aria-label="Reply to Andrey">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2 parent">
	    
	    	<a name="comment-437760"></a>
	      	
	      	<div id="li-comment-437760" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">October 16, 2017 at 12:54 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-437760" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-437760">
				
				<p>TensorFlow instead of Caffe? That depends on the model. You would
 need a TensorFlow-based model trained for object detection. As far as I
 understand, the OpenCV loading capabilities of pre-trained TensorFlow 
models is still in heavy development and not as good as the Caffe ones 
(yet). For what it’s worth, I’ll be demonstrating how to train your own 
custom deep learning object detectors and then deploy them inside <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python</a>.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-437760" onclick='return addComment.moveForm( "comment-437760", "437760", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-3">
	    
	    	<a name="comment-437824"></a>
	      	
	      	<div id="li-comment-437824" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/550c37ef4a82c70305369e8a31c52b64.jpg" srcset="https://secure.gravatar.com/avatar/550c37ef4a82c70305369e8a31c52b64?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href="https://gettocode.com/" rel="external nofollow" class="url">Andrey Cheremskuy</a></span>           
	                <span class="date">October 17, 2017 at 9:04 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-437824" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-437824">
				
				<p>Thank you.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-437824" onclick='return addComment.moveForm( "comment-437824", "437824", "respond", "6092" )' aria-label="Reply to Andrey Cheremskuy">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-437949"></a>
	      	
	      	<div id="li-comment-437949" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/b42b12cffd99501e11eb8977174e7d7b.jpg" srcset="https://secure.gravatar.com/avatar/b42b12cffd99501e11eb8977174e7d7b?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adel</span>           
	                <span class="date">October 18, 2017 at 6:32 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-437949" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-437949">
				
				<p>thanks very much for the tutorial … how train the SSD for custome data like hand detection ?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-437949" onclick='return addComment.moveForm( "comment-437949", "437949", "respond", "6092" )' aria-label="Reply to Adel">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-438052"></a>
	      	
	      	<div id="li-comment-438052" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">October 19, 2017 at 4:45 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-438052" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-438052">
				
				<p>I am covering how to train your own custom deep learning object detectors (such as Faster R-CNN and SSD) inside my book, <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python</a>.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-438052" onclick='return addComment.moveForm( "comment-438052", "438052", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-438014"></a>
	      	
	      	<div id="li-comment-438014" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/861de53b1ead4c66c91964ffd0ca1b79.jpg" srcset="https://secure.gravatar.com/avatar/861de53b1ead4c66c91964ffd0ca1b79?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Sunil Badak</span>           
	                <span class="date">October 19, 2017 at 11:42 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-438014" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-438014">
				
				<p>hi Adrian,<br>
we are doing a final year B.E project in which we need to give the 
movement to the Robot depending upon the object that Robot has detected ,
 in such way that that Robot will approach the detected object. Any Idea
 how to achieve this?. Thanks</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-438014" onclick='return addComment.moveForm( "comment-438014", "438014", "respond", "6092" )' aria-label="Reply to Sunil Badak">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-438048"></a>
	      	
	      	<div id="li-comment-438048" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">October 19, 2017 at 4:42 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-438048" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-438048">
				
				<p>Congrats on doing your final B.E. project, that’s very exciting. 
Exactly how you achieve this project is really dependent on your robot 
and associated libraries. Are you using a Raspberry Pi? If so, take a 
look at the GPIO libraries to help you get started.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-438048" onclick='return addComment.moveForm( "comment-438048", "438048", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-438173"></a>
	      	
	      	<div id="li-comment-438173" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/51406ea25c98033f29b4d30551501c7e.jpg" srcset="https://secure.gravatar.com/avatar/51406ea25c98033f29b4d30551501c7e?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">John McDonald</span>           
	                <span class="date">October 20, 2017 at 9:17 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-438173" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-438173">
				
				<p>Adrian, this is amazing. But what if we want to detect something else besides a chair etc. How could we make our own detector?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-438173" onclick='return addComment.moveForm( "comment-438173", "438173", "respond", "6092" )' aria-label="Reply to John McDonald">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-438283"></a>
	      	
	      	<div id="li-comment-438283" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">October 22, 2017 at 8:36 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-438283" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-438283">
				
				<p>Hi John — I’m actually covering how to train your own deep learning-based object detectors inside <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python</a>. Be sure to take a look!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-438283" onclick='return addComment.moveForm( "comment-438283", "438283", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-438270"></a>
	      	
	      	<div id="li-comment-438270" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/613872fbe8ea78e555d6b557d9383e65.jpg" srcset="https://secure.gravatar.com/avatar/613872fbe8ea78e555d6b557d9383e65?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Darren</span>           
	                <span class="date">October 22, 2017 at 7:13 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-438270" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-438270">
				
				<p>will this work on mobile phones? because im currently working with object detection also but im using mobile phones for it</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-438270" onclick='return addComment.moveForm( "comment-438270", "438270", "respond", "6092" )' aria-label="Reply to Darren">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-438272"></a>
	      	
	      	<div id="li-comment-438272" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">October 22, 2017 at 8:22 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-438272" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-438272">
				
				<p>This code is for Python so you would need to translate it to the 
OpenCV bindings for the programming language associated with your phone,
 typically Java, Swift, or Objective-C.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-438272" onclick='return addComment.moveForm( "comment-438272", "438272", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-438408"></a>
	      	
	      	<div id="li-comment-438408" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/96e07190d9d5f9617139888918525435.jpg" srcset="https://secure.gravatar.com/avatar/96e07190d9d5f9617139888918525435?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Ying</span>           
	                <span class="date">October 23, 2017 at 11:47 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-438408" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-438408">
				
				<p>Hi Adrian, </p>
<p>Can I use other caffe model to run this python code?  e.g. yolov2, etc?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-438408" onclick='return addComment.moveForm( "comment-438408", "438408", "respond", "6092" )' aria-label="Reply to Ying">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-438414"></a>
	      	
	      	<div id="li-comment-438414" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">October 23, 2017 at 12:20 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-438414" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-438414">
				
				<p>OpenCV 3.3’s “dnn” module is still pretty new and not all Caffe 
models/layers are supported; however, a good many are. You’ll need to 
test with each model you are interested in.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-438414" onclick='return addComment.moveForm( "comment-438414", "438414", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-438412"></a>
	      	
	      	<div id="li-comment-438412" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/b62a51f47897dd294fba073164292afd.jpg" srcset="https://secure.gravatar.com/avatar/b62a51f47897dd294fba073164292afd?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Justin</span>           
	                <span class="date">October 23, 2017 at 12:15 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-438412" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-438412">
				
				<p>Hi Adrian! I’m back!<br>
Thank you for the answer again.<br>
Now, I’m trying to use this program for my school project.<br>
I want to make a sushi detection machine.<br>
So I need to have the pre-trained data(sushi images caffemodel).<br>
How can I get it? How can I train and get my own data?<br>
please let me know. Thank you<br>
Have a good day.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-438412" onclick='return addComment.moveForm( "comment-438412", "438412", "respond", "6092" )' aria-label="Reply to Justin">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-438413"></a>
	      	
	      	<div id="li-comment-438413" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">October 23, 2017 at 12:18 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-438413" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-438413">
				
				<p>Hi Justin — I would like to refer you over to my book, <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python</a> where I discuss how to train your own custom deep learning classifiers in detail.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-438413" onclick='return addComment.moveForm( "comment-438413", "438413", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-438538"></a>
	      	
	      	<div id="li-comment-438538" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/613872fbe8ea78e555d6b557d9383e65.jpg" srcset="https://secure.gravatar.com/avatar/613872fbe8ea78e555d6b557d9383e65?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Win</span>           
	                <span class="date">October 24, 2017 at 11:30 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-438538" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-438538">
				
				<p>Hi i just want to ask what are the possible algorithms that you’ve used in doing it THANKS</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-438538" onclick='return addComment.moveForm( "comment-438538", "438538", "respond", "6092" )' aria-label="Reply to Win">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrianr even depth-2 parent">
	    
	    	<a name="comment-438553"></a>
	      	
	      	<div id="li-comment-438553" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/770b7b7f983d2829a836d9d48af8117c.jpg" srcset="https://secure.gravatar.com/avatar/770b7b7f983d2829a836d9d48af8117c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">October 24, 2017 at 2:49 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-438553" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-438553">
				
				<p>Hi Win — this blog post was part of a two part series and I 
detailed MobileNet Single Shot Detectors (the algorithm used) in the 
prior week’s blog post.  You can access that blog post here: <a href="https://www.pyimagesearch.com/2017/09/11/object-detection-with-deep-learning-and-opencv/">Object detection with deep learning and OpenCV</a>.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-438553" onclick='return addComment.moveForm( "comment-438553", "438553", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-3">
	    
	    	<a name="comment-445665"></a>
	      	
	      	<div id="li-comment-445665" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/57d8587a6bef15f7d54b2aaad0f806e0.jpg" srcset="https://secure.gravatar.com/avatar/57d8587a6bef15f7d54b2aaad0f806e0?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Peter</span>           
	                <span class="date">January 4, 2018 at 9:37 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-445665" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-445665">
				
				<p>Hello Adrian,</p>
<p>I saw the latest openCV version 3.4 was released. An in the release 
note, it says that ” In particular, MobileNet-SSD networks now run ~7 
times faster than in OpenCV 3.3.1. ”<br>
So I thought if I use the opencv3.4 for your 
real_time_object_detection.py code, the fps will increase a lot. But in 
fact, it seems that there no significantly improvement with 3.4.<br>
1. I used the TX2 platform for the test, one is for opencv3.3 binding 
with python3.5. the other test is opencv3.4 binding with opencv3.4 with 
CUDA support (<a href="http://www.jetsonhacks.com/2017/04/05/build-opencv-nvidia-jetson-tx2/" rel="nofollow">http://www.jetsonhacks.com/2017/04/05/build-opencv-nvidia-jetson-tx2/</a>)</p>
<p>Do you know where is the problem? </p>
<p>2. My goal is to reach the 24 fps  for object detection on an 
embedded platform,  Now I am trying mobilenet-ssd on tx2 with opencv dnn
 lib, but seems there is a big gap. Do you have any suggestions?</p>
<p>Thanks very much. waiting for your replay….</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-445665" onclick='return addComment.moveForm( "comment-445665", "445665", "respond", "6092" )' aria-label="Reply to Peter">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment even depth-3">
	    
	    	<a name="comment-445667"></a>
	      	
	      	<div id="li-comment-445667" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/57d8587a6bef15f7d54b2aaad0f806e0.jpg" srcset="https://secure.gravatar.com/avatar/57d8587a6bef15f7d54b2aaad0f806e0?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Peter</span>           
	                <span class="date">January 4, 2018 at 10:03 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-445667" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-445667">
				
				<p>on TX2 with opencv3.4 with CUDA support, only ~5fps for 400*400</p>
<p>nvidia@tegra-ubuntu:~/Downloads/real-time-object-detection$ python 
real_time_object_detection.py –prototxt MobileNetSSD_deploy.prototxt.txt
 –model MobileNetSSD_deploy.caffemodel<br>
[INFO] loading model…<br>
[INFO] starting video stream…<br>
[INFO] elapsed time: 64.09<br>
[INFO] approx. FPS: 5.30</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-445667" onclick='return addComment.moveForm( "comment-445667", "445667", "respond", "6092" )' aria-label="Reply to Peter">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-439294"></a>
	      	
	      	<div id="li-comment-439294" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/c94877c4d87f88095feede4a753d97d0.jpg" srcset="https://secure.gravatar.com/avatar/c94877c4d87f88095feede4a753d97d0?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Ife Ade</span>           
	                <span class="date">October 31, 2017 at 9:48 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-439294" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-439294">
				
				<p>Hi, please i was wondering if there is a way I could count the 
number of detection in any image that is passed through the network. 
Thansk</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-439294" onclick='return addComment.moveForm( "comment-439294", "439294", "respond", "6092" )' aria-label="Reply to Ife Ade">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2 parent">
	    
	    	<a name="comment-439495"></a>
	      	
	      	<div id="li-comment-439495" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 2, 2017 at 2:46 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-439495" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-439495">
				
				<p>Count the number of detections per object? Or for all objects?</p>
<p>In either case I would use a Python dictionary with the object index 
as the key and the count as the value. You can then loop over the 
detections, check to see if the detection passes the threshold, and if 
so, update the dictionary.</p>
<p>At the end of the loop you’ll have the object counts. To obtain the 
number of ALL objects in the image just sum the values of the 
dictionary.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-439495" onclick='return addComment.moveForm( "comment-439495", "439495", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-3 parent">
	    
	    	<a name="comment-459637"></a>
	      	
	      	<div id="li-comment-459637" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/22680f3d6822528385913f297fc58650.png" srcset="https://secure.gravatar.com/avatar/22680f3d6822528385913f297fc58650?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Yadullah Abidi</span>           
	                <span class="date">May 2, 2018 at 11:29 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-459637" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-459637">
				
				<p>Hey Adrian, I was trying this approach of yours but it doesn’t 
work. For eg. I open my webcam the am the only person (and object) 
detected. The confidence is above 90% and the counter just keeps going 
up. Let’s say there are 4 people in the video stream I am passing to the
 dnn. I’ve implemented if (CLASSES[idx]==”person”): so that only humans 
get marked. Now in this case as soon as a person is detected with a 90% 
confidence, the counter just keeps going up.</p>
<p>How do I solve this?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-459637" onclick='return addComment.moveForm( "comment-459637", "459637", "respond", "6092" )' aria-label="Reply to Yadullah Abidi">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-4 parent">
	    
	    	<a name="comment-459745"></a>
	      	
	      	<div id="li-comment-459745" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">May 3, 2018 at 9:32 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-459745" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-459745">
				
				<p>You nee to reset your dictionary at the end of your loop. I 
assume you are counting on a per-frame basis, right? If you do not reset
 your dictionary, then yes, the counter will keep going up.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-459745" onclick='return addComment.moveForm( "comment-459745", "459745", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-5">
	    
	    	<a name="comment-459848"></a>
	      	
	      	<div id="li-comment-459848" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/22680f3d6822528385913f297fc58650.png" srcset="https://secure.gravatar.com/avatar/22680f3d6822528385913f297fc58650?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Yadullah Abidi</span>           
	                <span class="date">May 4, 2018 at 2:43 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-459848" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-459848">
				
				<p>I assume by resetting my dictionary you are referring to the 
dict.clear() method which just empties the whole dictionary. I don’t see
 how does that help me in a video stream. I need to count the number of 
detections and show them on the output screen at all times which means I
 need to save them in a variable.</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-5">
	    
	    	<a name="comment-460693"></a>
	      	
	      	<div id="li-comment-460693" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">May 9, 2018 at 10:33 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-460693" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-460693">
				
				<p>In that case you would need to apply object tracking methods so 
you don’t accidentally “recount” objects that were already counted. Be 
sure to take a look at object tracking algorithms such as “centroid 
tracking” and “Correlation tracking”.</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-440167"></a>
	      	
	      	<div id="li-comment-440167" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/98541fd356b636c91048dc99172867ad.jpg" srcset="https://secure.gravatar.com/avatar/98541fd356b636c91048dc99172867ad?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">olivia</span>           
	                <span class="date">November 10, 2017 at 7:51 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-440167" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-440167">
				
				<p>Hallo adrian,<br>
i have an project to detect an object from ycbcr video streaming and cropping the object.<br>
do you have a tutorial that can help me? thanks a lot adrian..</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-440167" onclick='return addComment.moveForm( "comment-440167", "440167", "respond", "6092" )' aria-label="Reply to olivia">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-440478"></a>
	      	
	      	<div id="li-comment-440478" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 13, 2017 at 2:12 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-440478" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-440478">
				
				<p>I would suggest basic <a target="blank" href="https://www.pyimagesearch.com/2015/01/26/multi-scale-template-matching-using-python-opencv/">template matching</a> to get you started.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-440478" onclick='return addComment.moveForm( "comment-440478", "440478", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-441111"></a>
	      	
	      	<div id="li-comment-441111" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/9471c13a1892df61a406d28329ec9406.jpg" srcset="https://secure.gravatar.com/avatar/9471c13a1892df61a406d28329ec9406?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">apollo</span>           
	                <span class="date">November 20, 2017 at 5:46 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-441111" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-441111">
				
				<p>Thank you for your great help. Could you explain how we can count passenger with bus embed overhead camera</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-441111" onclick='return addComment.moveForm( "comment-441111", "441111", "respond", "6092" )' aria-label="Reply to apollo">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-441162"></a>
	      	
	      	<div id="li-comment-441162" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 20, 2017 at 3:48 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-441162" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-441162">
				
				<p>I would start with <a target="blank" href="https://www.pyimagesearch.com/2015/06/01/home-surveillance-and-motion-detection-with-the-raspberry-pi-python-and-opencv/">simple motion detection</a> as a starter. From there you might want to consider <a target="blank" href="https://www.pyimagesearch.com/2014/11/10/histogram-oriented-gradients-object-detection/">training an object detector</a> for overhead views of people.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-441162" onclick='return addComment.moveForm( "comment-441162", "441162", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1">
	    
	    	<a name="comment-441246"></a>
	      	
	      	<div id="li-comment-441246" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/0e1816781cb76a897d242df6ae989639.jpg" srcset="https://secure.gravatar.com/avatar/0e1816781cb76a897d242df6ae989639?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">chandiran</span>           
	                <span class="date">November 21, 2017 at 7:30 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-441246" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-441246">
				
				<p>Hi sir,<br>
I would like detect whether in webcam mobile phone is showing or 
not..whether this program will help me or not sir..If it so how can i do
 it?help me sir.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-441246" onclick='return addComment.moveForm( "comment-441246", "441246", "respond", "6092" )' aria-label="Reply to chandiran">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-441279"></a>
	      	
	      	<div id="li-comment-441279" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/82a37dd04621bf0be8514fc742004d6a.jpg" srcset="https://secure.gravatar.com/avatar/82a37dd04621bf0be8514fc742004d6a?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Rocky</span>           
	                <span class="date">November 21, 2017 at 8:22 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-441279" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-441279">
				
				<p>I stumbled upon your website. This is just awesome and thank you 
for the detailed description. I am getting some ideas on how I can apply
 your iconcepts/code to other areas 🙂</p>
<p>I am thinking to apply this on my project which is to highlight text 
on a computer screen. The idea is simple an user points his mouse to a 
text which may be in a word document or pdf or picture on his computer 
screen. If there exists a same word across his screen that will be 
highlighted. I know this is different but this still using the real time
 screen recording video stream and tracking the highlighted words. Do 
you think this can be achieved or do you have any good ideas ? Thanks 
again</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-441279" onclick='return addComment.moveForm( "comment-441279", "441279", "respond", "6092" )' aria-label="Reply to Rocky">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-441345"></a>
	      	
	      	<div id="li-comment-441345" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 22, 2017 at 9:58 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-441345" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-441345">
				
				<p>This seems doable, especially if the fonts are the same. There 
are many ways to approach this problem but if you’re just getting 
started I would use <a target="blank" href="https://www.pyimagesearch.com/2015/01/26/multi-scale-template-matching-using-python-opencv/">multi-scale template matching</a>. More advanced solutions would attempt to <a target="blank" href="https://www.pyimagesearch.com/2017/07/10/using-tesseract-ocr-python/">OCR both texts</a> and compare words.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-441345" onclick='return addComment.moveForm( "comment-441345", "441345", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-441523"></a>
	      	
	      	<div id="li-comment-441523" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/0c53cb2d8e4bf4ddb86dc87a245025f0.jpg" srcset="https://secure.gravatar.com/avatar/0c53cb2d8e4bf4ddb86dc87a245025f0?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Sagar</span>           
	                <span class="date">November 24, 2017 at 9:20 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-441523" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-441523">
				
				<p>I am trying to use this code for googlenet. But it is not working
 and i can’t find the changes. Can you please  suggest me some changes 
in the code for implement bvlc_googlenet.caffemodel and 
bvcl_googlenet.prototxt .</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-441523" onclick='return addComment.moveForm( "comment-441523", "441523", "respond", "6092" )' aria-label="Reply to Sagar">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-441595"></a>
	      	
	      	<div id="li-comment-441595" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 25, 2017 at 12:24 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-441595" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-441595">
				
				<p>Hi Sagar — I’m not sure what you mean by “it’s not working and I can’t find the changes”. Could you elaborate?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-441595" onclick='return addComment.moveForm( "comment-441595", "441595", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-441540"></a>
	      	
	      	<div id="li-comment-441540" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/06121f7dc40a099813f75cb22196f1c3.jpg" srcset="https://secure.gravatar.com/avatar/06121f7dc40a099813f75cb22196f1c3?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Jacqueline</span>           
	                <span class="date">November 24, 2017 at 5:10 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-441540" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-441540">
				
				<p>I am using my MacBook Pro and within VirtualBox Ubuntu doing all 
of the tutorials.  For some reason, I keep getting the message: “no 
module named imutils.video.”  Any idea why this may be?  I did the 
tutorial on drawing the box around the red game and that worked.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-441540" onclick='return addComment.moveForm( "comment-441540", "441540", "respond", "6092" )' aria-label="Reply to Jacqueline">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-441590"></a>
	      	
	      	<div id="li-comment-441590" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 25, 2017 at 12:19 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-441590" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-441590">
				
				<p>Make sure you install imutils into your Python virtual environment:</p>
<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93d907924a9188300206" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft">$ workon your_env_name
$ pip install imutils</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93d907924a9188300206-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d907924a9188300206-2">2</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93d907924a9188300206-1"><span class="crayon-sy">$</span><span class="crayon-h"> </span><span class="crayon-e">workon </span><span class="crayon-v">your_env</span><span class="crayon-sy">_</span>name</div><div class="crayon-line crayon-striped-line" id="crayon-5c93d907924a9188300206-2"><span class="crayon-sy">$</span><span class="crayon-h"> </span><span class="crayon-e">pip </span><span class="crayon-e">install </span><span class="crayon-v">imutils</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0006 seconds] -->
<p></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-441590" onclick='return addComment.moveForm( "comment-441590", "441590", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-442155"></a>
	      	
	      	<div id="li-comment-442155" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/ebad64f120b88b488fcfc07d47e0944e.jpg" srcset="https://secure.gravatar.com/avatar/ebad64f120b88b488fcfc07d47e0944e?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Jaitun</span>           
	                <span class="date">December 2, 2017 at 6:53 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-442155" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-442155">
				
				<p>Hey Adrian! The code is just wonderful, but i have one question. 
Once we have tracked these objects how could be track them? I saw your 
blog for tracking a ball but how will we track so many detected objects 
from their coordinates.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-442155" onclick='return addComment.moveForm( "comment-442155", "442155", "respond", "6092" )' aria-label="Reply to Jaitun">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-442157"></a>
	      	
	      	<div id="li-comment-442157" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">December 2, 2017 at 7:16 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-442157" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-442157">
				
				<p>Once you have an object detected you can apply a dedicated 
tracking algorithm. I’ll be covering tracking algorithms here on the 
PyImageSearch blog, but in the meantime take a look at “correlation 
tracking” and “centroid tracking”. Centroid tracking is by far the 
easiest to implement. I hope that helps!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-442157" onclick='return addComment.moveForm( "comment-442157", "442157", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-442179"></a>
	      	
	      	<div id="li-comment-442179" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/989f88412deb4999d33bad2889e0c0f5.jpg" srcset="https://secure.gravatar.com/avatar/989f88412deb4999d33bad2889e0c0f5?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Zaira Zafar</span>           
	                <span class="date">December 2, 2017 at 9:34 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-442179" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-442179">
				
				<p>I tried calling the protext and model through file system. But it
 gives me an error on reading the model file. Can you please guide me on
 how to read the files through file system, instead of passing them as 
arguements?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-442179" onclick='return addComment.moveForm( "comment-442179", "442179", "respond", "6092" )' aria-label="Reply to Zaira Zafar">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2 parent">
	    
	    	<a name="comment-442443"></a>
	      	
	      	<div id="li-comment-442443" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">December 5, 2017 at 7:55 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-442443" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-442443">
				
				<p>If you do not want to parse command line arguments you can 
hardcode the paths in your script. You’ll want to delete all code used 
for command line arguments and then create variables such as:</p>
<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93d9079232a659078995" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft">PROTOTXT_PATH = "MobileNetSSD_deploy.prototxt.txt"
MODEL_PATH = "model MobileNetSSD_deploy.caffemodel"</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93d9079232a659078995-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9079232a659078995-2">2</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93d9079232a659078995-1"><span class="crayon-v">PROTOTXT_PATH</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"MobileNetSSD_deploy.prototxt.txt"</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9079232a659078995-2"><span class="crayon-v">MODEL_PATH</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"model MobileNetSSD_deploy.caffemodel"</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0004 seconds] -->
<p></p>
<p>And from there use the hardcoded paths.</p>
<p>This is really overkill though and if you <a target="blank" href="https://www.pyimagesearch.com/2018/03/12/python-argparse-command-line-arguments/" rel="nofollow">read up on command line arguments</a> you’ll be able to get the script up and running without modifying the code.</p>
<p>It might also be helpful to see the command you are trying to execute.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-442443" onclick='return addComment.moveForm( "comment-442443", "442443", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-3 parent">
	    
	    	<a name="comment-442767"></a>
	      	
	      	<div id="li-comment-442767" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/989f88412deb4999d33bad2889e0c0f5.jpg" srcset="https://secure.gravatar.com/avatar/989f88412deb4999d33bad2889e0c0f5?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Zaira Zafar</span>           
	                <span class="date">December 9, 2017 at 7:12 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-442767" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-442767">
				
				<p>It’s a user oriented application, like snapchat uses learning. I 
can’t have user passing parameters, user needs to remain ignorant of 
what is happening in the code.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-442767" onclick='return addComment.moveForm( "comment-442767", "442767", "respond", "6092" )' aria-label="Reply to Zaira Zafar">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-4">
	    
	    	<a name="comment-442768"></a>
	      	
	      	<div id="li-comment-442768" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">December 9, 2017 at 7:20 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-442768" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-442768">
				
				<p>In that case you should hardcode the parameters. How you package 
up and distribute the project is up to you but a configuration file or 
hardcoded values are your best bet.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-442768" onclick='return addComment.moveForm( "comment-442768", "442768", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even depth-2">
	    
	    	<a name="comment-445598"></a>
	      	
	      	<div id="li-comment-445598" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/fce1318dd6c600e6f3948b469091b14e.jpg" srcset="https://secure.gravatar.com/avatar/fce1318dd6c600e6f3948b469091b14e?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Wajeeha</span>           
	                <span class="date">January 4, 2018 at 5:46 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-445598" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-445598">
				
				<p>Dear Zaira, I am facing same issue. can you please guide me how you run this code after getting this isuue.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-445598" onclick='return addComment.moveForm( "comment-445598", "445598", "respond", "6092" )' aria-label="Reply to Wajeeha">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-442857"></a>
	      	
	      	<div id="li-comment-442857" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/6315d72e8ea851f5cdd824c495e9d3f3.jpg" srcset="https://secure.gravatar.com/avatar/6315d72e8ea851f5cdd824c495e9d3f3?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Fardan</span>           
	                <span class="date">December 11, 2017 at 2:45 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-442857" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-442857">
				
				<p>hello ardian, i’m wondering, how does the SSD doing the image 
pre-processing step? So they can detect the region proposal. sorry for 
my fool question</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-442857" onclick='return addComment.moveForm( "comment-442857", "442857", "respond", "6092" )' aria-label="Reply to Fardan">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-442957"></a>
	      	
	      	<div id="li-comment-442957" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">December 12, 2017 at 9:13 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-442957" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-442957">
				
				<p>Which pre-processing step are you referring to? Calling <code>cv2.dnn.blobFromImage</code> on the input frame pre-processes the frame and prepares it for prediction.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-442957" onclick='return addComment.moveForm( "comment-442957", "442957", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-443641"></a>
	      	
	      	<div id="li-comment-443641" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/80cfd3dc400f9e2dccd275dc54d3e92b.jpg" srcset="https://secure.gravatar.com/avatar/80cfd3dc400f9e2dccd275dc54d3e92b?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Tarik</span>           
	                <span class="date">December 18, 2017 at 3:08 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-443641" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-443641">
				
				<p>Hello Adrian,</p>
<p>Thanks for great tutorial. I have a question regarding the number of 
classes. Is there any model from Caffe that we can use for more classes?
 If so, can you please point me where I can download use in a way that 
described in this tutorial. Thanks!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-443641" onclick='return addComment.moveForm( "comment-443641", "443641", "respond", "6092" )' aria-label="Reply to Tarik">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-443805"></a>
	      	
	      	<div id="li-comment-443805" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">December 19, 2017 at 4:18 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-443805" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-443805">
				
				<p>Hey Tarik — what you are referring to is “transfer learning”, in 
particular “fine-tuning”. I cover these methods in detail inside <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python</a>.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-443805" onclick='return addComment.moveForm( "comment-443805", "443805", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-444296"></a>
	      	
	      	<div id="li-comment-444296" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/d24eb3a417b5683f0a6903087025a6a3.png" srcset="https://secure.gravatar.com/avatar/d24eb3a417b5683f0a6903087025a6a3?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Nicolas</span>           
	                <span class="date">December 23, 2017 at 3:25 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-444296" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-444296">
				
				<p>How can I train new objects? I do not see the image database!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-444296" onclick='return addComment.moveForm( "comment-444296", "444296", "respond", "6092" )' aria-label="Reply to Nicolas">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-444723"></a>
	      	
	      	<div id="li-comment-444723" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">December 26, 2017 at 4:36 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-444723" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-444723">
				
				<p>For training networks for your own custom objects please take a look at <a target="blank" href="https://github.com/chuanqi305/MobileNet-SSD" rel="nofollow">this GitHub repo</a>.
 The model used in this blog post was pre-trained by the author of the 
GitHub I just linked to. If you’re interested in training your own 
custom object detectors from scratch I would also refer you to <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python</a>.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-444723" onclick='return addComment.moveForm( "comment-444723", "444723", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-444594"></a>
	      	
	      	<div id="li-comment-444594" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/bafa310f8a53f5e3bd076801ad266cd3.jpg" srcset="https://secure.gravatar.com/avatar/bafa310f8a53f5e3bd076801ad266cd3?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Huzzi</span>           
	                <span class="date">December 25, 2017 at 4:19 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-444594" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-444594">
				
				<p>Hey! This was pretty neat and I am looking forward to taking it further from here. </p>
<p>I have a few things to clarify: entering <code>q</code> in the console doesn’t seem to quit the program. I believe entering <code>q</code> is supposed to break out of the <code>While</code> loop but it doesn’t seem to do so.<br>
Also, out of curiosity, did you develop algorithms for MobileNet SSD? 
And is it only trained for specific objects as mentioned when defining a
 class?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-444594" onclick='return addComment.moveForm( "comment-444594", "444594", "respond", "6092" )' aria-label="Reply to Huzzi">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2 parent">
	    
	    	<a name="comment-444702"></a>
	      	
	      	<div id="li-comment-444702" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">December 26, 2017 at 3:58 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-444702" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-444702">
				
				<p>You need to click on the active window opened by OpenCV and then hit the <code>q</code> key. This will close the window.</p>
<p>I did not train this particular MobileNet SSD. A network can only 
predict objects that it was trained on. However, I do train SSDs (and 
other deep learning object detection algorithms) inside <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python</a>.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-444702" onclick='return addComment.moveForm( "comment-444702", "444702", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-3 parent">
	    
	    	<a name="comment-446058"></a>
	      	
	      	<div id="li-comment-446058" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/bafa310f8a53f5e3bd076801ad266cd3.jpg" srcset="https://secure.gravatar.com/avatar/bafa310f8a53f5e3bd076801ad266cd3?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Huzzi</span>           
	                <span class="date">January 9, 2018 at 1:00 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-446058" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-446058">
				
				<p>For autonomous RC car, I might need a model that detects 
STOP/START etc signs. Wondering if you know of any existing model that I
 could use?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-446058" onclick='return addComment.moveForm( "comment-446058", "446058", "respond", "6092" )' aria-label="Reply to Huzzi">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-4 parent">
	    
	    	<a name="comment-446155"></a>
	      	
	      	<div id="li-comment-446155" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 10, 2018 at 12:53 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-446155" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-446155">
				
				<p>I don’t know of a pre-trained model off the top of my head. And 
realistically, the accuracy of the model will depend on your own 
stop/start signs. You will likely need to train your model from scratch.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-446155" onclick='return addComment.moveForm( "comment-446155", "446155", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-5">
	    
	    	<a name="comment-446214"></a>
	      	
	      	<div id="li-comment-446214" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/bafa310f8a53f5e3bd076801ad266cd3.jpg" srcset="https://secure.gravatar.com/avatar/bafa310f8a53f5e3bd076801ad266cd3?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Huzaifa Asif</span>           
	                <span class="date">January 11, 2018 at 7:13 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-446214" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-446214">
				
				<p>The issue I dont have any experience in machine learning. Do you have any guide for beginners?</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-5">
	    
	    	<a name="comment-446225"></a>
	      	
	      	<div id="li-comment-446225" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 11, 2018 at 7:31 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-446225" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-446225">
				
				<p>If you are brand new to computer vision and deep learning I would recommend the <a target="blank" href="https://www.pyimagesearch.com/pyimagesearch-gurus/">PyImageSearch Gurus course</a> to help you get up to speed. If you have prior Python experience I would recommend <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python</a> where I start by discussing the fundamentals of machine learning and then work to more advanced deep learning examples. </p>
<p>I hope that helps!</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-444928"></a>
	      	
	      	<div id="li-comment-444928" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/44fa973e39c2fd9e88dd7e230ce4b7ce.jpg" srcset="https://secure.gravatar.com/avatar/44fa973e39c2fd9e88dd7e230ce4b7ce?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Akshra</span>           
	                <span class="date">December 28, 2017 at 12:25 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-444928" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-444928">
				
				<p>im very new to this. Im attempting to detect multiple objects and
 find their distance from the camera of a moving vehicle. Where do you 
suggest i start?<br>
Also, the error im getting when i run the above code is “error:the following arguments are required: – p/–prototxt, -m/–model<br>
How do i enter those?<br>
Thanks</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-444928" onclick='return addComment.moveForm( "comment-444928", "444928", "respond", "6092" )' aria-label="Reply to Akshra">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2 parent">
	    
	    	<a name="comment-444935"></a>
	      	
	      	<div id="li-comment-444935" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">December 28, 2017 at 2:05 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-444935" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-444935">
				
				<p>The reason you are getting this error is because you are not 
supplying the command line arguments. Please see the blog post for 
examples on how to execute the script. I would also suggest reading up 
on <a target="blank" href="https://www.pyimagesearch.com/2018/03/12/python-argparse-command-line-arguments/" rel="nofollow">command line arguments</a>.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-444935" onclick='return addComment.moveForm( "comment-444935", "444935", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-3 parent">
	    
	    	<a name="comment-444959"></a>
	      	
	      	<div id="li-comment-444959" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/44fa973e39c2fd9e88dd7e230ce4b7ce.jpg" srcset="https://secure.gravatar.com/avatar/44fa973e39c2fd9e88dd7e230ce4b7ce?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">akshra</span>           
	                <span class="date">December 28, 2017 at 10:21 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-444959" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-444959">
				
				<p>thanks. I got it to work. HOw can I use this for a moving camera if it is, say, attached to a vehicle?<br>
Im attempting to detect multiple objects and find their distance from the camera of a moving vehicle.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-444959" onclick='return addComment.moveForm( "comment-444959", "444959", "respond", "6092" )' aria-label="Reply to akshra">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-4">
	    
	    	<a name="comment-446457"></a>
	      	
	      	<div id="li-comment-446457" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/ea017e98204b1c5fcf23a4dfe3cfb3e9.jpg" srcset="https://secure.gravatar.com/avatar/ea017e98204b1c5fcf23a4dfe3cfb3e9?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Andre</span>           
	                <span class="date">January 14, 2018 at 7:39 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-446457" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-446457">
				
				<p>May I know how did you solve it? I’ve read the command line arguments page and can’t get any clue.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-446457" onclick='return addComment.moveForm( "comment-446457", "446457", "respond", "6092" )' aria-label="Reply to Andre">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt depth-2">
	    
	    	<a name="comment-470842"></a>
	      	
	      	<div id="li-comment-470842" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/e24d12b5c32de43a33e54dfad15335fc.jpg" srcset="https://secure.gravatar.com/avatar/e24d12b5c32de43a33e54dfad15335fc?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">zahra</span>           
	                <span class="date">July 12, 2018 at 8:40 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-470842" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-470842">
				
				<p>thank you for this question. if did you resolve it, can you tell me how ? ( the distance )</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-470842" onclick='return addComment.moveForm( "comment-470842", "470842", "respond", "6092" )' aria-label="Reply to zahra">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-444963"></a>
	      	
	      	<div id="li-comment-444963" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/44fa973e39c2fd9e88dd7e230ce4b7ce.jpg" srcset="https://secure.gravatar.com/avatar/44fa973e39c2fd9e88dd7e230ce4b7ce?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">latha</span>           
	                <span class="date">December 28, 2017 at 11:25 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-444963" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-444963">
				
				<p>if I want to change the size of the class ( i want to detect only
 person and cat), what would I have to change to get rid of this error?<br>
label = “{}: {:.2f}%”.format(CLASSES[idx],<br>
				confidence * 100)<br>
list index out of range</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-444963" onclick='return addComment.moveForm( "comment-444963", "444963", "respond", "6092" )' aria-label="Reply to latha">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2 parent">
	    
	    	<a name="comment-445260"></a>
	      	
	      	<div id="li-comment-445260" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">December 31, 2017 at 9:55 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-445260" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-445260">
				
				<p>There are a few ways to do this. If you want to truthfully 
recognize only “person” and “cat” you should consider fine-tuning your 
network. This will require re-training the network. If you instead want 
to ignore all classes other than “person” and “cat” you can check <code>CLASSES[idxs]</code> and see if the predicted label is “person” or “cat”.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-445260" onclick='return addComment.moveForm( "comment-445260", "445260", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-3 parent">
	    
	    	<a name="comment-445303"></a>
	      	
	      	<div id="li-comment-445303" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/44fa973e39c2fd9e88dd7e230ce4b7ce.jpg" srcset="https://secure.gravatar.com/avatar/44fa973e39c2fd9e88dd7e230ce4b7ce?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">latha</span>           
	                <span class="date">January 1, 2018 at 1:47 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-445303" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-445303">
				
				<p>thank you so much. This works.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-445303" onclick='return addComment.moveForm( "comment-445303", "445303", "respond", "6092" )' aria-label="Reply to latha">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-4">
	    
	    	<a name="comment-452850"></a>
	      	
	      	<div id="li-comment-452850" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/8df0a6da2121924bf558c0d60f2e2ebc.jpg" srcset="https://secure.gravatar.com/avatar/8df0a6da2121924bf558c0d60f2e2ebc?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">FanWah</span>           
	                <span class="date">March 12, 2018 at 1:13 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-452850" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-452850">
				
				<p>hi latha, can you tell me which part of the coding did u change? Can you show me?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-452850" onclick='return addComment.moveForm( "comment-452850", "452850", "respond", "6092" )' aria-label="Reply to FanWah">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-445127"></a>
	      	
	      	<div id="li-comment-445127" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/44fa973e39c2fd9e88dd7e230ce4b7ce.jpg" srcset="https://secure.gravatar.com/avatar/44fa973e39c2fd9e88dd7e230ce4b7ce?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">akshra</span>           
	                <span class="date">December 30, 2017 at 11:38 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-445127" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-445127">
				
				<p>if I want to get the x and y coordinates of the detected object, how can I do it?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-445127" onclick='return addComment.moveForm( "comment-445127", "445127", "respond", "6092" )' aria-label="Reply to akshra">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-445246"></a>
	      	
	      	<div id="li-comment-445246" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">December 31, 2017 at 9:40 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-445246" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-445246">
				
				<p>Please see Line 69 where the starting and ending (x, y)-coordinates of the bounding box are computed.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-445246" onclick='return addComment.moveForm( "comment-445246", "445246", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-445307"></a>
	      	
	      	<div id="li-comment-445307" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/44fa973e39c2fd9e88dd7e230ce4b7ce.jpg" srcset="https://secure.gravatar.com/avatar/44fa973e39c2fd9e88dd7e230ce4b7ce?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">ramky</span>           
	                <span class="date">January 1, 2018 at 2:49 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-445307" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-445307">
				
				<p>I gotta say this works amazingly. In fact, it even works to some 
extent on a dynamic camera if it’s attached to the front of a vehicle on
 a highway(if one reduces the confidence level)<br>
you’re a life saver.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-445307" onclick='return addComment.moveForm( "comment-445307", "445307", "respond", "6092" )' aria-label="Reply to ramky">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-445539"></a>
	      	
	      	<div id="li-comment-445539" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 3, 2018 at 1:16 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-445539" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-445539">
				
				<p>Thanks Ramky, I’m glad the script is working for you 🙂</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-445539" onclick='return addComment.moveForm( "comment-445539", "445539", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-445483"></a>
	      	
	      	<div id="li-comment-445483" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/bafa310f8a53f5e3bd076801ad266cd3.jpg" srcset="https://secure.gravatar.com/avatar/bafa310f8a53f5e3bd076801ad266cd3?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Huzzi</span>           
	                <span class="date">January 3, 2018 at 5:49 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-445483" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-445483">
				
				<p>Did anyone had any issue related to open cv? It ran the first 
time but since then I haven’t been able to run it as I keep getting this
 error:<br>
<code>ImportError: No module named cv2</code></p>
<p>Upon running <code>pip install python-opencv</code>, it gives the following error:<br>
<code> Could not find a version that satisfies the requirement python-opencv (from versions: )<br>
No matching distribution found for python-opencv</code></p>
<p>Anyone?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-445483" onclick='return addComment.moveForm( "comment-445483", "445483", "respond", "6092" )' aria-label="Reply to Huzzi">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2 parent">
	    
	    	<a name="comment-445512"></a>
	      	
	      	<div id="li-comment-445512" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 3, 2018 at 12:53 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-445512" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-445512">
				
				<p>Please follow <a target="blank" href="https://www.pyimagesearch.com/opencv-tutorials-resources-guides/">one of my tutorials for installing OpenCV</a>.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-445512" onclick='return addComment.moveForm( "comment-445512", "445512", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-3 parent">
	    
	    	<a name="comment-445902"></a>
	      	
	      	<div id="li-comment-445902" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/bafa310f8a53f5e3bd076801ad266cd3.jpg" srcset="https://secure.gravatar.com/avatar/bafa310f8a53f5e3bd076801ad266cd3?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Huzzi</span>           
	                <span class="date">January 8, 2018 at 8:02 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-445902" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-445902">
				
				<p>I did and I got the this error:<br>
<code>real_time_object_detection_OLD.py: error: the following arguments are required: -p/--prototxt, -m/--model</code></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-445902" onclick='return addComment.moveForm( "comment-445902", "445902", "respond", "6092" )' aria-label="Reply to Huzzi">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-4">
	    
	    	<a name="comment-445940"></a>
	      	
	      	<div id="li-comment-445940" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 8, 2018 at 2:35 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-445940" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-445940">
				
				<p>Pleas see my reply to Akshra on December 28, 2017. You need to supply the command line arguments to the script.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-445940" onclick='return addComment.moveForm( "comment-445940", "445940", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-445590"></a>
	      	
	      	<div id="li-comment-445590" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/e571fcb5a6e5009d587d6d4a1f603723.jpg" srcset="https://secure.gravatar.com/avatar/e571fcb5a6e5009d587d6d4a1f603723?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href="http://cweihang.cn/" rel="external nofollow" class="url">ahangchen</a></span>           
	                <span class="date">January 4, 2018 at 4:43 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-445590" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-445590">
				
				<p>When we use cv2.dnn.blobFromImage to convert a image array to a 
blob, 0.007843 means the multiplier on the image, why this value so 
small? I found that default value is 1.0.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-445590" onclick='return addComment.moveForm( "comment-445590", "445590", "respond", "6092" )' aria-label="Reply to ahangchen">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-445728"></a>
	      	
	      	<div id="li-comment-445728" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 5, 2018 at 1:35 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-445728" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-445728">
				
				<p>Take a look at <a target="blank" href="https://www.pyimagesearch.com/2017/11/06/deep-learning-opencvs-blobfromimage-works/">this blog post</a> where I discuss the parameters to cv2.dnn.blobFromImage, what they mean, and how they are used.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-445728" onclick='return addComment.moveForm( "comment-445728", "445728", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-445613"></a>
	      	
	      	<div id="li-comment-445613" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/cf7ebe8aba2c16eb1dcc95dc89c41989.jpg" srcset="https://secure.gravatar.com/avatar/cf7ebe8aba2c16eb1dcc95dc89c41989?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Reece</span>           
	                <span class="date">January 4, 2018 at 7:22 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-445613" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-445613">
				
				<p>Hello Adrian,</p>
<p>Is it possible to use a different model instead of MobileSSD? I find 
it’s very bad at detecting cars, trucks and the likes using footage from
 a dash cam.</p>
<p>As per the tutorial, I would like to track the object whilst 
providing a label and bounding box, and be able to apply better 
detection algorithms/methods.</p>
<p>Any suggestions on which tools to use and how?</p>
<p>Thanks.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-445613" onclick='return addComment.moveForm( "comment-445613", "445613", "respond", "6092" )' aria-label="Reply to Reece">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2 parent">
	    
	    	<a name="comment-445727"></a>
	      	
	      	<div id="li-comment-445727" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 5, 2018 at 1:34 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-445727" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-445727">
				
				<p>Right now this is the primary, pre-trained model provided by 
OpenCV. You cannot take a network trained using MobileNet + SSD and then
 swap in Faster R-CNN. You would need to re-train the network. Again, I 
cover this inside <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python</a>.</p>
<p>As for tracking, please see my reply to “Eng.AAA” on September 18, 2017.</p>
<p>I hope that helps!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-445727" onclick='return addComment.moveForm( "comment-445727", "445727", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-3 parent">
	    
	    	<a name="comment-445843"></a>
	      	
	      	<div id="li-comment-445843" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/cf7ebe8aba2c16eb1dcc95dc89c41989.jpg" srcset="https://secure.gravatar.com/avatar/cf7ebe8aba2c16eb1dcc95dc89c41989?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Reece</span>           
	                <span class="date">January 7, 2018 at 8:10 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-445843" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-445843">
				
				<p>I would like to replace the MobileNet architecture with the VGG16
 network architecture. Is this a possible cause in that I would be able 
to detect objects in a video at a better mAP?</p>
<p>I have replaced the protobuf files for use with VGG16, but I can’t 
get it working. Does your book detail how I could use this network to 
get it working like your tutorial above, but as I had said, to a better 
precision rate?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-445843" onclick='return addComment.moveForm( "comment-445843", "445843", "respond", "6092" )' aria-label="Reply to Reece">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-4">
	    
	    	<a name="comment-445950"></a>
	      	
	      	<div id="li-comment-445950" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 8, 2018 at 2:47 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-445950" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-445950">
				
				<p>I wouldn’t recommend swapping in VGG, instead use a variant of 
ResNet. From there you will need to retrain the entire network. You 
cannot hot-swap the architectures. My book details how to train custom 
object detectors from scratch on your own datasets. This enables you to 
create scripts like the one covered in this blog post.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-445950" onclick='return addComment.moveForm( "comment-445950", "445950", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-445659"></a>
	      	
	      	<div id="li-comment-445659" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/e8f752880d1593403d5260e04718a544.jpg" srcset="https://secure.gravatar.com/avatar/e8f752880d1593403d5260e04718a544?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Stefan</span>           
	                <span class="date">January 4, 2018 at 7:37 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-445659" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-445659">
				
				<p>Hello there! Loving the tutorial ! I just have one question. When i run the code you sent me via email, i get this error:<br>
AttributeError : ‘NoneType’  object has no attribute ‘shape’<br>
Any help would be appreciative! Thank you!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-445659" onclick='return addComment.moveForm( "comment-445659", "445659", "respond", "6092" )' aria-label="Reply to Stefan">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-445725"></a>
	      	
	      	<div id="li-comment-445725" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 5, 2018 at 1:31 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-445725" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-445725">
				
				<p>If you’re getting an error related to “NoneType” I’m assuming the
 traceback points to where the image is read from your camera sensor. 
Please take a look at <a target="blank" href="https://www.pyimagesearch.com/2016/12/26/opencv-resolving-nonetype-errors/">this blog post</a> on NoneType errors and how to resolve them.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-445725" onclick='return addComment.moveForm( "comment-445725", "445725", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-445678"></a>
	      	
	      	<div id="li-comment-445678" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/b86842f1073fb2c2ddcae01b027b5ef5.jpg" srcset="https://secure.gravatar.com/avatar/b86842f1073fb2c2ddcae01b027b5ef5?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Mulia</span>           
	                <span class="date">January 5, 2018 at 1:58 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-445678" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-445678">
				
				<p>Hi Adrian…..<br>
Thank You for sharing this wonderful knowledge. I tried the code above 
and execute the command accordingly. But I got this reply on my command 
line:</p>
<p>[INFO] loading model<br>
…<br>
    net = cv2.dnn.readNetFromCaffe(args[“prototxt”], args[“model”])<br>
cv2.error: 
/home/pi/opencv-3.3.0/modules/dnn/src/caffe/caffe_io.cpp:1113: error: 
(-2) FAILED: fs.is_open(). Can’t open “MobileNetSSD_deploy.prototxt.txt”
 in function ReadProtoFromTextFile</p>
<p>Help me with this problem Sir…<br>
Thank You.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-445678" onclick='return addComment.moveForm( "comment-445678", "445678", "respond", "6092" )' aria-label="Reply to Mulia">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-445720"></a>
	      	
	      	<div id="li-comment-445720" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 5, 2018 at 1:26 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-445720" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-445720">
				
				<p>Double-check your path to the input prototxt and model weights 
(and make sure you use the “Downloads” section of this blog post to 
download the code + additional files). The problem here is that your 
input paths are incorrect.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-445720" onclick='return addComment.moveForm( "comment-445720", "445720", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-446130"></a>
	      	
	      	<div id="li-comment-446130" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/0c9bb6929365ea4ce3e343f7ab2f4932.jpg" srcset="https://secure.gravatar.com/avatar/0c9bb6929365ea4ce3e343f7ab2f4932?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Dan</span>           
	                <span class="date">January 10, 2018 at 8:15 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-446130" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-446130">
				
				<p>Hi Adrian, may i know how do i create/tained my own caffe model 
file? let say for example, i would like to create a new set of pills for
 hospitality. How can i do it? The second thing would be if there was a 
new set of pills that comes in, do i have to recreate a whole new caffee
 model file or i can use the same one?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-446130" onclick='return addComment.moveForm( "comment-446130", "446130", "respond", "6092" )' aria-label="Reply to Dan">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2 parent">
	    
	    	<a name="comment-446149"></a>
	      	
	      	<div id="li-comment-446149" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 10, 2018 at 12:45 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-446149" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-446149">
				
				<p>Hey Dan, great questions.</p>
<p>1. If you want to train your own object detectors you can either (1) see <a target="blank" href="https://github.com/chuanqi305/MobileNet-SSD" rel="nofollow">this GitHub repo</a> of the developer who trained the model used in this example or (2) take a look at my book, <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python</a> where I discuss training your own custom object detectors in detail.</p>
<p>2. If you want to add new objects that you want to recognize/detect 
you would need to either re-train from scratch or apply transfer 
learning.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-446149" onclick='return addComment.moveForm( "comment-446149", "446149", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-3 parent">
	    
	    	<a name="comment-446362"></a>
	      	
	      	<div id="li-comment-446362" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/0c9bb6929365ea4ce3e343f7ab2f4932.jpg" srcset="https://secure.gravatar.com/avatar/0c9bb6929365ea4ce3e343f7ab2f4932?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">dan</span>           
	                <span class="date">January 12, 2018 at 2:03 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-446362" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-446362">
				
				<p>hi, honestly i dont mind ordering the book however I feel that 
its kind of wasted for me to spent so much because i would only be using
 it once as its more of like a school project. Once its over, i wont 
have to do this anymore.<br>
Is there anyway that I am able to get the content on training my own custom object detectors only? Thankyou</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-446362" onclick='return addComment.moveForm( "comment-446362", "446362", "respond", "6092" )' aria-label="Reply to dan">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-4">
	    
	    	<a name="comment-446539"></a>
	      	
	      	<div id="li-comment-446539" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 15, 2018 at 9:29 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-446539" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-446539">
				
				<p>If you’re using it for a one-off school project than DL4CV might 
not be the best fit for you. Training your own custom CNN-based object 
detectors can be challenging and requires knowledge of a large number of
 deep learning concepts (all of which the book covers). If you want to 
share a bit more about your school project and your experience with 
machine learning/deep learning. I can continue to let you know if the 
book would be a good fit for you. Or in the absolute worst case I can 
let you know if your school project is feasible.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-446539" onclick='return addComment.moveForm( "comment-446539", "446539", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-446303"></a>
	      	
	      	<div id="li-comment-446303" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/c07b0b0ff896f5a31d2a4bd6d10472fc.jpg" srcset="https://secure.gravatar.com/avatar/c07b0b0ff896f5a31d2a4bd6d10472fc?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Rohit Thakur</span>           
	                <span class="date">January 11, 2018 at 11:56 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-446303" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-446303">
				
				<p>Hi Adrian,</p>
<p>I want to ask you a simple question. It may sounds.<br>
How can we save the detected result as video file like .mp4 or .avi. As i
 know we can use cv2.VideoWriter function for this with different codes.
 Can you help if possible with an example ?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-446303" onclick='return addComment.moveForm( "comment-446303", "446303", "respond", "6092" )' aria-label="Reply to Rohit Thakur">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-446330"></a>
	      	
	      	<div id="li-comment-446330" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 12, 2018 at 5:27 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-446330" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-446330">
				
				<p>I have two tutorials on using cv2.VideoWriter to write video to 
disk. You can use them to modify this script to save your video. Take a 
look at <a target="blank" href="https://www.pyimagesearch.com/2016/02/22/writing-to-video-with-opencv/">this tutorial</a> to get started. Then from there read <a target="blank" href="https://www.pyimagesearch.com/2016/02/29/saving-key-event-video-clips-with-opencv/">this one</a> on only saving specific clips.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-446330" onclick='return addComment.moveForm( "comment-446330", "446330", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-446393"></a>
	      	
	      	<div id="li-comment-446393" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/a882abbcb063faceae76bd5568297e1f.jpg" srcset="https://secure.gravatar.com/avatar/a882abbcb063faceae76bd5568297e1f?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Atul Soni</span>           
	                <span class="date">January 13, 2018 at 5:46 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-446393" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-446393">
				
				<p>Hello ,<br>
After running the command I am getting this </p>
<p>python real_time_object_detection.py \<br>
&gt; –prototxt MobileNetSSD_deploy.prototxt.txt \<br>
&gt; –model MobileNetSSD_deploy.caffemodel</p>
<p>[INFO] loading model…<br>
[INFO] starting video stream…</p>
<p>VIDEOIO ERROR: V4L2: Pixel format of incoming image is unsupported by OpenCV<br>
Unable to stop the stream: Device or resource busy<br>
…<br>
(h, w) = image.shape[:2]<br>
AttributeError: ‘NoneType’ object has no attribute ‘shape’</p>
<p>So what this error means ?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-446393" onclick='return addComment.moveForm( "comment-446393", "446393", "respond", "6092" )' aria-label="Reply to Atul Soni">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-446537"></a>
	      	
	      	<div id="li-comment-446537" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 15, 2018 at 9:25 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-446537" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-446537">
				
				<p>It sounds like OpenCV cannot access your webcam. When you try to 
read a frame from the webcam it is returning “None”. You can read more 
about NoneType errors <a target="blank" href="https://www.pyimagesearch.com/2016/12/26/opencv-resolving-nonetype-errors/">here</a>.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-446537" onclick='return addComment.moveForm( "comment-446537", "446537", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-446498"></a>
	      	
	      	<div id="li-comment-446498" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/a882abbcb063faceae76bd5568297e1f.jpg" srcset="https://secure.gravatar.com/avatar/a882abbcb063faceae76bd5568297e1f?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Atul Soni</span>           
	                <span class="date">January 15, 2018 at 1:27 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-446498" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-446498">
				
				<p>Hello Adrian,<br>
I tried this tutorial and its working very well.<br>
But can you please tell me what I need to do If a want to add more 
objects like watch , wallet so in short how can I provide my own trained
 model ?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-446498" onclick='return addComment.moveForm( "comment-446498", "446498", "respond", "6092" )' aria-label="Reply to Atul Soni">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2 parent">
	    
	    	<a name="comment-446525"></a>
	      	
	      	<div id="li-comment-446525" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 15, 2018 at 9:12 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-446525" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-446525">
				
				<p>Hey Atul — you would need to:</p>
<p>1. Gather images of objects you want to detect<br>
2. Either train your model from scratch or apply transfer learning, such as fine-tuning</p>
<p>I discuss easy methods to gather your own training dataset <a target="blank" href="https://www.pyimagesearch.com/2017/12/04/how-to-create-a-deep-learning-dataset-using-google-images/">here</a>. I then discuss training your own deep learning-based object detectors inside <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python</a><a></a>.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-446525" onclick='return addComment.moveForm( "comment-446525", "446525", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-3 parent">
	    
	    	<a name="comment-446581"></a>
	      	
	      	<div id="li-comment-446581" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/a882abbcb063faceae76bd5568297e1f.jpg" srcset="https://secure.gravatar.com/avatar/a882abbcb063faceae76bd5568297e1f?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Atul Soni</span>           
	                <span class="date">January 16, 2018 at 1:40 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-446581" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-446581">
				
				<p>Can you please guide me how can I train my own model from scratch or applytransfer learning ?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-446581" onclick='return addComment.moveForm( "comment-446581", "446581", "respond", "6092" )' aria-label="Reply to Atul Soni">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-4">
	    
	    	<a name="comment-446623"></a>
	      	
	      	<div id="li-comment-446623" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 16, 2018 at 12:50 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-446623" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-446623">
				
				<p>Hi Atul — please see my previous comment. Training your own models from scratch is covered inside <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python</a>.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-446623" onclick='return addComment.moveForm( "comment-446623", "446623", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-446557"></a>
	      	
	      	<div id="li-comment-446557" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/c3c695c3004844bfcad68366e232ce76.jpg" srcset="https://secure.gravatar.com/avatar/c3c695c3004844bfcad68366e232ce76?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Marta</span>           
	                <span class="date">January 15, 2018 at 3:39 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-446557" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-446557">
				
				<p>Hi Adrian,</p>
<p>This might look like a really simple question, but I can’t figure it out:</p>
<p>$ python3 real_time_object_detection.py \ –prototxt MobileNetSSD_deploy.prototxt-txt \ –model MobileNetSSD_deploy.caffemodel<br>
usage: real_time_object_detection.py [-h] -p PROTOTXT -m MODEL [-c CONFIDENCE]<br>
real_time_object_detection.py: error: the following arguments are required: -p/–prototxt, -m/–model</p>
<p>I get this error when I try to run it on the terminal, I don’t 
understand it because supposedly I define those arguments when I run it,
 why is this happening?</p>
<p>Thanks so much,</p>
<p>Marta.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-446557" onclick='return addComment.moveForm( "comment-446557", "446557", "respond", "6092" )' aria-label="Reply to Marta">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-446629"></a>
	      	
	      	<div id="li-comment-446629" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 16, 2018 at 1:01 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-446629" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-446629">
				
				<p>It looks like you have properly passed in the command line 
arguments so I’m not actually sure why this is happening. Can you try 
replacing <code>--prototxt</code> with <code>-p</code> and <code>--model</code> with <code>-m</code> and see if that helps? Again, the command line arguments look okay to me so I’m not sure why you are getting that error.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-446629" onclick='return addComment.moveForm( "comment-446629", "446629", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-446575"></a>
	      	
	      	<div id="li-comment-446575" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/65f47e109007ecb8ffbcfc0f97d144c8.jpg" srcset="https://secure.gravatar.com/avatar/65f47e109007ecb8ffbcfc0f97d144c8?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">ope</span>           
	                <span class="date">January 15, 2018 at 10:27 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-446575" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-446575">
				
				<p>i keep getting this error thanks.<br>
usage: deep_learning_object_detection.py [-h] -i IMAGE -p PROTOTXT -m MODEL<br>
                                         [-c CONFIDENCE]<br>
deep_learning_object_detection.py: error: the following arguments are required: -i/–image, -p/–prototxt, -m/–model<br>
[Finished in 7.0s]</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-446575" onclick='return addComment.moveForm( "comment-446575", "446575", "respond", "6092" )' aria-label="Reply to ope">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-446626"></a>
	      	
	      	<div id="li-comment-446626" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 16, 2018 at 12:54 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-446626" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-446626">
				
				<p>Hey Ope, I have covered in this in a few different replies. 
Please ctrl + f and search the comments for your error message. See my 
reply to “Akshra” on December 28, 2017 for the solution.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-446626" onclick='return addComment.moveForm( "comment-446626", "446626", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-446576"></a>
	      	
	      	<div id="li-comment-446576" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/6d1ee09f48e6e83e5b98237c14dc175a.jpg" srcset="https://secure.gravatar.com/avatar/6d1ee09f48e6e83e5b98237c14dc175a?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Mario Kristanto</span>           
	                <span class="date">January 15, 2018 at 10:41 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-446576" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-446576">
				
				<p>Hello Adrian,<br>
This tutorial is amazing.<br>
But is it possible to using this code for a video that i have?<br>
How to change it so it can working with the video not my webcam?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-446576" onclick='return addComment.moveForm( "comment-446576", "446576", "respond", "6092" )' aria-label="Reply to Mario Kristanto">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-446625"></a>
	      	
	      	<div id="li-comment-446625" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 16, 2018 at 12:53 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-446625" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-446625">
				
				<p>There are a number of ways to accomplish this. You can use the <a target="blank" href="https://www.pyimagesearch.com/2017/02/06/faster-video-file-fps-with-cv2-videocapture-and-opencv/">FileVideoStream class I implemented</a> or you can use a non-thread version using cv2.VideoCapture (also discussed in the post I linked to).</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-446625" onclick='return addComment.moveForm( "comment-446625", "446625", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-446583"></a>
	      	
	      	<div id="li-comment-446583" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/f6afc4088d197fea194d57f544d1eb34.jpg" srcset="https://secure.gravatar.com/avatar/f6afc4088d197fea194d57f544d1eb34?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Amit</span>           
	                <span class="date">January 16, 2018 at 3:08 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-446583" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-446583">
				
				<p>Hi Adrian,</p>
<p>Here in this tutorial, we have used a pre-trained caffee model. What 
about we want to train the model according to our requirement? Is there 
any tutorial which explains how to train the caffee model according to 
our own requirement? You response will be very useful.</p>
<p>Thanks!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-446583" onclick='return addComment.moveForm( "comment-446583", "446583", "respond", "6092" )' aria-label="Reply to Amit">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-446622"></a>
	      	
	      	<div id="li-comment-446622" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 16, 2018 at 12:48 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-446622" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-446622">
				
				<p>Hey Amit, thanks for the comment. If you want to train your own custom deep learning-based object detector please refer to the <a target="blank" href="https://github.com/chuanqi305/MobileNet-SSD" rel="nofollow">GitHub</a> of the author who trained the network. Otherwise, I cover how to train your own custom deep learning object detectors inside <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python</a>.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-446622" onclick='return addComment.moveForm( "comment-446622", "446622", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-446971"></a>
	      	
	      	<div id="li-comment-446971" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/bbd4faae0c705dc4dbe960a13dd6bdff.jpg" srcset="https://secure.gravatar.com/avatar/bbd4faae0c705dc4dbe960a13dd6bdff?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">hashir</span>           
	                <span class="date">January 19, 2018 at 10:19 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-446971" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-446971">
				
				<p>how much time will be take to complete this process on raspberry pi 3<br>
python real_time_object_detection.py –prototxt MobileNetSSD_deploy.prototxt.txt –model MobileNetSSD_deploy.caffemodel<br>
[INFO] loading model…<br>
[INFO] starting video stream…</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-446971" onclick='return addComment.moveForm( "comment-446971", "446971", "respond", "6092" )' aria-label="Reply to hashir">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-447246"></a>
	      	
	      	<div id="li-comment-447246" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 22, 2018 at 6:42 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-447246" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-447246">
				
				<p>I have provided benchmarks and timings of the code used here over in <a target="blank" href="https://www.pyimagesearch.com/2017/10/16/raspberry-pi-deep-learning-object-detection-with-opencv/">this blog post</a>.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-447246" onclick='return addComment.moveForm( "comment-447246", "447246", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-447885"></a>
	      	
	      	<div id="li-comment-447885" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/c0fee2f86eadfc60cb63571fe9cab76c.jpg" srcset="https://secure.gravatar.com/avatar/c0fee2f86eadfc60cb63571fe9cab76c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Deepak</span>           
	                <span class="date">January 27, 2018 at 3:07 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-447885" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-447885">
				
				<p>I am using PICam and I got tthe error like this</p>
<p>[INFO] loading model…<br>
[INFO] starting video stream…<br>
Traceback (most recent call last):<br>
  File “real_time_object_detection.py”, line 47, in<br>
    frame = imutils.resize(frame, width=400)<br>
  File “/home/pi/.virtualenvs/cv/lib/python3.5/site-packages/imutils/convenience.py”, line 69, in resize<br>
    (h, w) = image.shape[:2]<br>
AttributeError: ‘NoneType’ object has no attribute ‘shape’</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-447885" onclick='return addComment.moveForm( "comment-447885", "447885", "respond", "6092" )' aria-label="Reply to Deepak">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-448251"></a>
	      	
	      	<div id="li-comment-448251" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 30, 2018 at 10:39 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-448251" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-448251">
				
				<p>Hey Deepak — make sure you read the comments and/or do a ctrl + f
 and search the page for your error. I have addressed this question a 
number of times in the comments section. See my reply to “Atul Soni” on 
January 13, 2018 to start. Thanks!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-448251" onclick='return addComment.moveForm( "comment-448251", "448251", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment even depth-2">
	    
	    	<a name="comment-476351"></a>
	      	
	      	<div id="li-comment-476351" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/fae2108e9127bcd16b0351c4f851cded.jpg" srcset="https://secure.gravatar.com/avatar/fae2108e9127bcd16b0351c4f851cded?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Dz</span>           
	                <span class="date">September 2, 2018 at 10:17 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-476351" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-476351">
				
				<p>hey Deepak, you found a solution for this error?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-476351" onclick='return addComment.moveForm( "comment-476351", "476351", "respond", "6092" )' aria-label="Reply to Dz">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-447916"></a>
	      	
	      	<div id="li-comment-447916" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/6528af1ee4941eef454070dd76d9e164.jpg" srcset="https://secure.gravatar.com/avatar/6528af1ee4941eef454070dd76d9e164?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Justin</span>           
	                <span class="date">January 27, 2018 at 1:06 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-447916" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-447916">
				
				<p>Hey Adrian,</p>
<p>Do you have any pre-trained models for detecting drones outside?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-447916" onclick='return addComment.moveForm( "comment-447916", "447916", "respond", "6092" )' aria-label="Reply to Justin">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-448246"></a>
	      	
	      	<div id="li-comment-448246" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 30, 2018 at 10:33 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-448246" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-448246">
				
				<p>Sorry, I do not.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-448246" onclick='return addComment.moveForm( "comment-448246", "448246", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-448303"></a>
	      	
	      	<div id="li-comment-448303" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/81456b3136206ad612d76d83faa00a53.jpg" srcset="https://secure.gravatar.com/avatar/81456b3136206ad612d76d83faa00a53?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Matthew</span>           
	                <span class="date">January 30, 2018 at 5:27 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-448303" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-448303">
				
				<p>Do you know how I can take the data that I get from tracking 
objects and use that towards another program? For example, I want to try
 and do find open parking spaces at my school and I want to be able to 
track cars to find if there is an open space or not.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-448303" onclick='return addComment.moveForm( "comment-448303", "448303", "respond", "6092" )' aria-label="Reply to Matthew">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-448375"></a>
	      	
	      	<div id="li-comment-448375" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 31, 2018 at 6:42 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-448375" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-448375">
				
				<p>I think that depends on what you mean by “use that towards 
another program”? The computer vision/deep learning aspect of this would
 be detecting the open parking spaces. Once you detect an open parking 
spot it’s up to you what you do with the data. You could send it to 
mobile devices who have downloaded your parking monitor app. You could 
send it to a server. It’s pretty arbitrary at that point. I would 
suggest focusing on training a model to recognize open parking spots to 
get started.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-448375" onclick='return addComment.moveForm( "comment-448375", "448375", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-448339"></a>
	      	
	      	<div id="li-comment-448339" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/3a7b9a87ca174c4617745f49d51f0d00.jpg" srcset="https://secure.gravatar.com/avatar/3a7b9a87ca174c4617745f49d51f0d00?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">AMRUDESH BALAKRISHNAN</span>           
	                <span class="date">January 31, 2018 at 1:02 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-448339" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-448339">
				
				<p>Im getting the following error :<br>
usage: real_time_object_detection.py [-h] -p PROTOTXT -m MODEL [-c CONFIDENCE]<br>
real_time_object_detection.py: error: the following arguments are required: -p/–prototxt, -m/–model</p>
<p>what can i do</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-448339" onclick='return addComment.moveForm( "comment-448339", "448339", "respond", "6092" )' aria-label="Reply to AMRUDESH BALAKRISHNAN">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-448371"></a>
	      	
	      	<div id="li-comment-448371" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 31, 2018 at 6:37 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-448371" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-448371">
				
				<p>To start I would suggest going back to the “Real-time deep 
learning object detection results” section of this post where I 
demonstrate how to execute the script. You need to supply the command 
line arguments to the script when you execute it. If you’re new to 
command line arguments I would encourage you to <a target="blank" href="https://www.pyimagesearch.com/2018/03/12/python-argparse-command-line-arguments/" rel="nofollow">read up on them</a> before continuing.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-448371" onclick='return addComment.moveForm( "comment-448371", "448371", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-448414"></a>
	      	
	      	<div id="li-comment-448414" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/c3c10101f532edd535cb0ab80f4cef92.jpg" srcset="https://secure.gravatar.com/avatar/c3c10101f532edd535cb0ab80f4cef92?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Jimmy</span>           
	                <span class="date">January 31, 2018 at 11:20 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-448414" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-448414">
				
				<p>Hi Adrian! Good job on this tutorial. I have a question. How can I
 remove the other Classes, for example I only want to detect the Chair. 
If it is possible how can I do it. I’m receiving error and freezes the 
frame when i try to remove the other classes on Line 22 
real_time_object_detection.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-448414" onclick='return addComment.moveForm( "comment-448414", "448414", "respond", "6092" )' aria-label="Reply to Jimmy">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2 parent">
	    
	    	<a name="comment-448421"></a>
	      	
	      	<div id="li-comment-448421" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 31, 2018 at 12:40 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-448421" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-448421">
				
				<p>Hey Jimmy — you don’t want to remove any of the classes in Line 
22. Instead, when you’re looping over the detected objects, use an “if” 
statement, such as</p>
<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93d90790d7d347524066" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft">if CLASSES[idx] == "chair":
    ... continue processing ...</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93d90790d7d347524066-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d90790d7d347524066-2">2</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93d90790d7d347524066-1"><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-v">CLASSES</span><span class="crayon-sy">[</span><span class="crayon-v">idx</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">==</span><span class="crayon-h"> </span><span class="crayon-s">"chair"</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d90790d7d347524066-2"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-h"> </span><span class="crayon-st">continue</span><span class="crayon-h"> </span><span class="crayon-i">processing</span><span class="crayon-h"> </span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0008 seconds] -->
<p></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-448421" onclick='return addComment.moveForm( "comment-448421", "448421", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-3 parent">
	    
	    	<a name="comment-449552"></a>
	      	
	      	<div id="li-comment-449552" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/c3c10101f532edd535cb0ab80f4cef92.jpg" srcset="https://secure.gravatar.com/avatar/c3c10101f532edd535cb0ab80f4cef92?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Jimmy</span>           
	                <span class="date">February 8, 2018 at 10:53 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-449552" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-449552">
				
				<p>Hi there! i tried using that statement under Line 70 but the other classes still appears when I run the code.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-449552" onclick='return addComment.moveForm( "comment-449552", "449552", "respond", "6092" )' aria-label="Reply to Jimmy">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-4">
	    
	    	<a name="comment-450137"></a>
	      	
	      	<div id="li-comment-450137" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">February 12, 2018 at 6:44 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-450137" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-450137">
				
				<p>Make sure you double-check your code. If you properly make the 
check you’ll only be examining “chair” objects — all others will be 
ignored.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-450137" onclick='return addComment.moveForm( "comment-450137", "450137", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-448578"></a>
	      	
	      	<div id="li-comment-448578" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/ab80b34d847d5de3424a35c9661fb10f.jpg" srcset="https://secure.gravatar.com/avatar/ab80b34d847d5de3424a35c9661fb10f?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Tinamore</span>           
	                <span class="date">February 2, 2018 at 12:05 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-448578" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-448578">
				
				<p>Hi, thanks for your great article.</p>
<p>If i input video with Pi camera, detection is very good. it works 
very well. I think because the image is very detailed, less noise.</p>
<p>But i input a stream HD camera CCTV. Most detection  is good, but sometime detection is wrong. This is url image wrong:</p>
<p><a href="https://imgur.com/7Q6ijy7" rel="nofollow">https://imgur.com/7Q6ijy7</a><br>
<a href="https://imgur.com/OOaJAqh" rel="nofollow">https://imgur.com/OOaJAqh</a></p>
<p>P/s: I have change code  line 48, 49 from 300 to 400. I test that if 
the 300 to only find the large person image. But i change to 400 then 
detection small image of person.</p>
<p>blob = cv2.dnn.blobFromImage (cv2.resize (frame, (400, 400)),<br>
0.007843, (400, 400), 127.5) </p>
<p>I do monitoring CCTV system with alert when detection person. But I was often falsely alarmed by the non-person detection</p>
<p>How to detection more accurately?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-448578" onclick='return addComment.moveForm( "comment-448578", "448578", "respond", "6092" )' aria-label="Reply to Tinamore">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-448830"></a>
	      	
	      	<div id="li-comment-448830" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">February 3, 2018 at 10:46 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-448830" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-448830">
				
				<p>There are a few things you can do here, such as increasing the 
minimum required confidence for a detection from 20% to 50% or even 75%.</p>
<p>Provided you have enough example data from your cameras you may want 
to try (1) training a MobileNet + SSD from scratch or (2) fine-tuning 
the network.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-448830" onclick='return addComment.moveForm( "comment-448830", "448830", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1">
	    
	    	<a name="comment-449044"></a>
	      	
	      	<div id="li-comment-449044" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/ab80b34d847d5de3424a35c9661fb10f.jpg" srcset="https://secure.gravatar.com/avatar/ab80b34d847d5de3424a35c9661fb10f?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">TinaMore</span>           
	                <span class="date">February 5, 2018 at 3:22 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-449044" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-449044">
				
				<p>Hi,</p>
<p>I think should output cv2.imshow(“Frame”, cv2.resize(frame, (300, 
300))) with frame same input dnn: cv2.resize(frame, (300, 300)).</p>
<p>Because if not then the dnn will look at the image with a different 
ratio not same real frame, For example, the image of a person will be 
pulled higher.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-449044" onclick='return addComment.moveForm( "comment-449044", "449044", "respond", "6092" )' aria-label="Reply to TinaMore">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-449065"></a>
	      	
	      	<div id="li-comment-449065" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/d0d0c00ed794d370626eb1c8483dfb25.jpg" srcset="https://secure.gravatar.com/avatar/d0d0c00ed794d370626eb1c8483dfb25?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Vijay</span>           
	                <span class="date">February 5, 2018 at 6:13 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-449065" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-449065">
				
				<p>When I used readNetFromDarknet method, the detection 
(=net.foward()) array is very different (with shape (845,6)) from that 
of Caffe model (which has shape (1,1,1,7)). Could you please guide me on
 how to proceed with the Darknet model detection array? Also, could you 
please provide some reference to have a deeper understanding of 
net.forward? Thanks!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-449065" onclick='return addComment.moveForm( "comment-449065", "449065", "respond", "6092" )' aria-label="Reply to Vijay">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-449252"></a>
	      	
	      	<div id="li-comment-449252" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">February 6, 2018 at 10:19 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-449252" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-449252">
				
				<p>Hey Vijay — I haven’t tried the readFromDarknet methdo so I’m not
 sure about the method. I’ll give it a try in the future and if need be,
 write a blog post on it. I discuss how deep learning object detection 
works inside <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python</a> — this will help you gain insight into what is going on inside a deep learning object detection model.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-449252" onclick='return addComment.moveForm( "comment-449252", "449252", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment even depth-2">
	    
	    	<a name="comment-485642"></a>
	      	
	      	<div id="li-comment-485642" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/79594a13ac4d1dd0bf2ab0ac1f6bfa5c.jpg" srcset="https://secure.gravatar.com/avatar/79594a13ac4d1dd0bf2ab0ac1f6bfa5c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Tukhtaev Sokhib</span>           
	                <span class="date">November 5, 2018 at 11:54 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-485642" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-485642">
				
				<p>Hi Vijay, did you fond a workaround for that dimension problem. 
I’ve been trying exactly the same thing for hours. I wish you could give
 some direction. Thank you!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-485642" onclick='return addComment.moveForm( "comment-485642", "485642", "respond", "6092" )' aria-label="Reply to Tukhtaev Sokhib">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-449103"></a>
	      	
	      	<div id="li-comment-449103" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/b2833a899a0929634cc71a677d95c5a0.jpg" srcset="https://secure.gravatar.com/avatar/b2833a899a0929634cc71a677d95c5a0?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Rahul</span>           
	                <span class="date">February 5, 2018 at 10:59 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-449103" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-449103">
				
				<p>Hello Adrian,</p>
<p>Thanks for the putting this great article.</p>
<p>I have one question here. If i want to detect the Tree and Buildings.
 How can i detect that? Is there any simple solution or it will take 
some efforts. </p>
<p>Could you please help me in this?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-449103" onclick='return addComment.moveForm( "comment-449103", "449103", "respond", "6092" )' aria-label="Reply to Rahul">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-449246"></a>
	      	
	      	<div id="li-comment-449246" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">February 6, 2018 at 10:13 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-449246" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-449246">
				
				<p>It will likely take a bit of effort as you’ll need to train an 
object detector to recognize trees and buildings. You might want to try a
 <a target="blank" href="https://www.pyimagesearch.com/2014/11/10/histogram-oriented-gradients-object-detection/">HOG + Linear SVM detector</a> or a deep learning-based object detector which I cover inside <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python</a>.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-449246" onclick='return addComment.moveForm( "comment-449246", "449246", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1">
	    
	    	<a name="comment-449178"></a>
	      	
	      	<div id="li-comment-449178" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/f6afc4088d197fea194d57f544d1eb34.jpg" srcset="https://secure.gravatar.com/avatar/f6afc4088d197fea194d57f544d1eb34?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Amit</span>           
	                <span class="date">February 6, 2018 at 3:37 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-449178" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-449178">
				
				<p>Hi Adrian,</p>
<p>Could you please suggest me some tutorial in which it has been explained how to create regression box for the detected objects.</p>
<p>Thanks,<br>
Amit</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-449178" onclick='return addComment.moveForm( "comment-449178", "449178", "respond", "6092" )' aria-label="Reply to Amit">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-449476"></a>
	      	
	      	<div id="li-comment-449476" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/1945cb93a4575231850ffa76bd321a0f.jpg" srcset="https://secure.gravatar.com/avatar/1945cb93a4575231850ffa76bd321a0f?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Valentin</span>           
	                <span class="date">February 8, 2018 at 4:07 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-449476" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-449476">
				
				<p>Hi.<br>
Great tutorial, I was able to make it work with not much trouble using a
 conda enviroment (install opencv using conda to avoid any problem).<br>
What do i need to do to:<br>
1) save the number of persons in the video stream (as a people counter)<br>
2) how to make it work with a previously recorded video?</p>
<p>Thanks!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-449476" onclick='return addComment.moveForm( "comment-449476", "449476", "respond", "6092" )' aria-label="Reply to Valentin">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-449507"></a>
	      	
	      	<div id="li-comment-449507" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">February 8, 2018 at 7:49 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-449507" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-449507">
				
				<p>1. To build a people counter you would want to apply a tracking 
algorithm so you do not double-count people. Take a look at correlation 
tracking or even centroid tracking.</p>
<p>2. You can use this with pre-recorded video by using the <code>cv2.VideoCapture</code> function or my <a target="blank" href="https://www.pyimagesearch.com/2017/02/06/faster-video-file-fps-with-cv2-videocapture-and-opencv/" rel="nofollow">FileVideoStream class</a>.</p>
<p>If you’re interested in learning more about the fundamentals of OpenCV, take a look at my book, <a target="blank" href="https://www.pyimagesearch.com/practical-python-opencv/">Practical Python and OpenCV</a>.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-449507" onclick='return addComment.moveForm( "comment-449507", "449507", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-450200"></a>
	      	
	      	<div id="li-comment-450200" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/bf9118e505b4b962e52870bf2b8b7f8c.jpg" srcset="https://secure.gravatar.com/avatar/bf9118e505b4b962e52870bf2b8b7f8c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Abhiraj Biswas</span>           
	                <span class="date">February 13, 2018 at 1:09 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-450200" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-450200">
				
				<p>How do we put another training set instead of the one you put on 
the code…pls hello me.. because it’s not recognizing every thing.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-450200" onclick='return addComment.moveForm( "comment-450200", "450200", "respond", "6092" )' aria-label="Reply to Abhiraj Biswas">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-450579"></a>
	      	
	      	<div id="li-comment-450579" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">February 18, 2018 at 10:21 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-450579" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-450579">
				
				<p>Unfortunately, it’s not that simple. You would need to train your
 own object detector from scratch or apply fine-tuning to an existing 
model.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-450579" onclick='return addComment.moveForm( "comment-450579", "450579", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-450235"></a>
	      	
	      	<div id="li-comment-450235" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/cdd018775ed71d8105efe0516aafcc1d.jpg" srcset="https://secure.gravatar.com/avatar/cdd018775ed71d8105efe0516aafcc1d?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">susanna js</span>           
	                <span class="date">February 14, 2018 at 1:31 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-450235" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-450235">
				
				<p>I have downloaded the code from your page. When I executed it in my raspberry pi, i got this error.</p>
<p>usage: real_time_object_detection.py [-h] -p PROTOTXT -m MODEL [-c CONFIDENCE]<br>
real_time_object_detection.py: error: argument -p/–prototxt is required</p>
<p>I don’t know how to proceed on further. Can you send me the procedure to detect objects?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-450235" onclick='return addComment.moveForm( "comment-450235", "450235", "respond", "6092" )' aria-label="Reply to susanna js">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-450571"></a>
	      	
	      	<div id="li-comment-450571" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">February 18, 2018 at 10:13 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-450571" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-450571">
				
				<p>I’ve addressed this question a handful of times in the comments. See my replies to Zaira Zafar, AMRUDESH, and tiago.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-450571" onclick='return addComment.moveForm( "comment-450571", "450571", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1">
	    
	    	<a name="comment-450247"></a>
	      	
	      	<div id="li-comment-450247" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/e604a42fa0f7e80de03772f353770fe0.jpg" srcset="https://secure.gravatar.com/avatar/e604a42fa0f7e80de03772f353770fe0?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Abhishek</span>           
	                <span class="date">February 14, 2018 at 4:36 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-450247" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-450247">
				
				<p>Hi Adrian,</p>
<p>I’d like to know how long it took to train your object pool in the 
real time object detection system. Also, what did you use for training? 
Also could you explain the caffe model file in it.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-450247" onclick='return addComment.moveForm( "comment-450247", "450247", "respond", "6092" )' aria-label="Reply to Abhishek">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-450252"></a>
	      	
	      	<div id="li-comment-450252" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/e604a42fa0f7e80de03772f353770fe0.jpg" srcset="https://secure.gravatar.com/avatar/e604a42fa0f7e80de03772f353770fe0?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Vineet</span>           
	                <span class="date">February 14, 2018 at 5:32 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-450252" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-450252">
				
				<p>What are the advantages of using a blob here?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-450252" onclick='return addComment.moveForm( "comment-450252", "450252", "respond", "6092" )' aria-label="Reply to Vineet">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-450569"></a>
	      	
	      	<div id="li-comment-450569" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">February 18, 2018 at 10:11 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-450569" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-450569">
				
				<p>The “blob” contains the frame we are passing through the deep 
neural network. OpenCV requires the “blob” to be in a specific format. 
You can learn more about it <a target="blank" href="https://www.pyimagesearch.com/2017/11/06/deep-learning-opencvs-blobfromimage-works/">here</a>.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-450569" onclick='return addComment.moveForm( "comment-450569", "450569", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-450381"></a>
	      	
	      	<div id="li-comment-450381" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/e604a42fa0f7e80de03772f353770fe0.jpg" srcset="https://secure.gravatar.com/avatar/e604a42fa0f7e80de03772f353770fe0?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Snair</span>           
	                <span class="date">February 15, 2018 at 9:59 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-450381" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-450381">
				
				<p>Hey how long did it take you to train the network? Also, what did u train it on?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-450381" onclick='return addComment.moveForm( "comment-450381", "450381", "respond", "6092" )' aria-label="Reply to Snair">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-450552"></a>
	      	
	      	<div id="li-comment-450552" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">February 18, 2018 at 9:54 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-450552" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-450552">
				
				<p>See my response to “Nicolas” on December 23, 2017.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-450552" onclick='return addComment.moveForm( "comment-450552", "450552", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-450430"></a>
	      	
	      	<div id="li-comment-450430" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/ce4f5bdfbc7f8d94d15042376497e7ba.jpg" srcset="https://secure.gravatar.com/avatar/ce4f5bdfbc7f8d94d15042376497e7ba?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href="http://gmail/" rel="external nofollow" class="url">owais</a></span>           
	                <span class="date">February 16, 2018 at 11:02 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-450430" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-450430">
				
				<p>hi Adrian i am your big fan and also follower i want to know can i
 detect my own object in real time using this program if yes please let 
me know</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-450430" onclick='return addComment.moveForm( "comment-450430", "450430", "respond", "6092" )' aria-label="Reply to owais">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-450546"></a>
	      	
	      	<div id="li-comment-450546" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">February 18, 2018 at 9:50 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-450546" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-450546">
				
				<p>What is “your own object”? Is it an object class that the SSD was
 already trained on? If so, yes. If not, you would need to train your 
own SSD from scratch or apply fine-tuning.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-450546" onclick='return addComment.moveForm( "comment-450546", "450546", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-450489"></a>
	      	
	      	<div id="li-comment-450489" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/7210289463f35b2f8f915830a5fec6ef.jpg" srcset="https://secure.gravatar.com/avatar/7210289463f35b2f8f915830a5fec6ef?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Tahirhan</span>           
	                <span class="date">February 17, 2018 at 10:17 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-450489" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-450489">
				
				<p>Can you make tutorial about how can we train our mobilenet_ssd with our dataset , thanks !</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-450489" onclick='return addComment.moveForm( "comment-450489", "450489", "respond", "6092" )' aria-label="Reply to Tahirhan">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-450535"></a>
	      	
	      	<div id="li-comment-450535" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">February 18, 2018 at 9:42 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-450535" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-450535">
				
				<p>Hey Tahirhan — I actually already cover how to train your own SSDs inside <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python</a>.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-450535" onclick='return addComment.moveForm( "comment-450535", "450535", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-450509"></a>
	      	
	      	<div id="li-comment-450509" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/b30576704c7a67899c827404cd499864.png" srcset="https://secure.gravatar.com/avatar/b30576704c7a67899c827404cd499864?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">safal bk</span>           
	                <span class="date">February 18, 2018 at 12:15 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-450509" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-450509">
				
				<p>i have one question sir<br>
how can i run<br>
python real_time_object_detection.py \<br>
	–prototxt MobileNetSSD_deploy.prototxt.txt \<br>
	–model MobileNetSSD_deploy.caffemodel<br>
this command in windows cmd</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-450509" onclick='return addComment.moveForm( "comment-450509", "450509", "respond", "6092" )' aria-label="Reply to safal bk">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-450531"></a>
	      	
	      	<div id="li-comment-450531" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">February 18, 2018 at 9:39 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-450531" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-450531">
				
				<p>The command should run just fine on the Windows command line. Did you try running it?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-450531" onclick='return addComment.moveForm( "comment-450531", "450531", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-450585"></a>
	      	
	      	<div id="li-comment-450585" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/1a6ace54b38426ea993d73f3ea435d3d.jpg" srcset="https://secure.gravatar.com/avatar/1a6ace54b38426ea993d73f3ea435d3d?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">ProjectForKids</span>           
	                <span class="date">February 18, 2018 at 11:03 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-450585" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-450585">
				
				<p>Dear Adrian,</p>
<p>I’m amazed by your example code.<br>
It took me less than 5min to demo real time object detection to my kids thanks to you!<br>
Thank you for that!</p>
<p>I’m running it on my laptop and it takes a bit of CPU.<br>
I have a NVIDIA GeForce GPU on my laptop.<br>
Is there a way to redirect some of the computation intensive task to this GPU to offload main CPU?</p>
<p>Wish you a good day</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-450585" onclick='return addComment.moveForm( "comment-450585", "450585", "respond", "6092" )' aria-label="Reply to ProjectForKids">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-450962"></a>
	      	
	      	<div id="li-comment-450962" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">February 22, 2018 at 9:34 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-450962" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-450962">
				
				<p>Congrats on getting up and running with real-time object 
detection so quickly, great job! The models used with OpenCV + Python 
are not meant to be used on the GPU (easily). This is a big feature 
request for OpenCV so I imagine it will come soon.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-450962" onclick='return addComment.moveForm( "comment-450962", "450962", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-450648"></a>
	      	
	      	<div id="li-comment-450648" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/fdd7f78242adec7f4a6f4f6abb83534a.jpg" srcset="https://secure.gravatar.com/avatar/fdd7f78242adec7f4a6f4f6abb83534a?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Richard</span>           
	                <span class="date">February 19, 2018 at 12:30 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-450648" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-450648">
				
				<p>Hi, I’m Richard. Is it possible to run your code in pycharm. I’m having these errors:</p>
<p>usage: real_time_object_detection.py [-h] -p MOBILENETSSD_DEPLOY.PROTOTXT -m<br>
                                     MOBILENETSSD_DEPLOY.CAFFEMODEL<br>
                                     [-c CONFIDENCE]<br>
real_time_object_detection.py: error: the following arguments are 
required: -p/–MobileNetSSD_deploy.prototxt, 
-m/–MobileNetSSD_deploy.caffemodel</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-450648" onclick='return addComment.moveForm( "comment-450648", "450648", "respond", "6092" )' aria-label="Reply to Richard">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-450956"></a>
	      	
	      	<div id="li-comment-450956" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">February 22, 2018 at 9:27 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-450956" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-450956">
				
				<p>You can use PyCharm to execute the code, but you’ll need to update the command line arguments in the project settings. See <a target="blank" href="https://stackoverflow.com/questions/33102272/pycharm-and-sys-argv-arguments" rel="nofollow">this StackOverflow thread</a> for more details.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-450956" onclick='return addComment.moveForm( "comment-450956", "450956", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-450804"></a>
	      	
	      	<div id="li-comment-450804" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/0a16058c9402c8166be5f2910c626f18.jpg" srcset="https://secure.gravatar.com/avatar/0a16058c9402c8166be5f2910c626f18?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">pooja g.</span>           
	                <span class="date">February 21, 2018 at 4:02 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-450804" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-450804">
				
				<p>sir,object detection demo can we do without using internet connection</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-450804" onclick='return addComment.moveForm( "comment-450804", "450804", "respond", "6092" )' aria-label="Reply to pooja g.">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-450829"></a>
	      	
	      	<div id="li-comment-450829" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">February 21, 2018 at 9:33 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-450829" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-450829">
				
				<p>Yes. Just download the code and run it. You don’t need an internet connection once the code is downloaded.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-450829" onclick='return addComment.moveForm( "comment-450829", "450829", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-451102"></a>
	      	
	      	<div id="li-comment-451102" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/9b5fdad25b62430b41cb780c8ea6cbeb.jpg" srcset="https://secure.gravatar.com/avatar/9b5fdad25b62430b41cb780c8ea6cbeb?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">neha</span>           
	                <span class="date">February 23, 2018 at 9:58 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-451102" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-451102">
				
				<p>can i use another model instead of caffe</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-451102" onclick='return addComment.moveForm( "comment-451102", "451102", "respond", "6092" )' aria-label="Reply to neha">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-451397"></a>
	      	
	      	<div id="li-comment-451397" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">February 26, 2018 at 2:07 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-451397" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-451397">
				
				<p>Right now the OpenCV bindings are most stable with Caffe models, but you can potentially use TensorFlow or Torch as well.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-451397" onclick='return addComment.moveForm( "comment-451397", "451397", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-451189"></a>
	      	
	      	<div id="li-comment-451189" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/92cea680431545d87276e090bda61289.jpg" srcset="https://secure.gravatar.com/avatar/92cea680431545d87276e090bda61289?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Gal</span>           
	                <span class="date">February 24, 2018 at 8:08 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-451189" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-451189">
				
				<p>Thanks Adrian, the tutorial is very easy and your explanation 
very helpful. However, the object detector has plenty of false negatives
 and false positives. Is there a way to improve the detection or to plug
 in a better model. I understand there are constraints. I look forward 
to hearing from you.</p>
<p>Gal</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-451189" onclick='return addComment.moveForm( "comment-451189", "451189", "respond", "6092" )' aria-label="Reply to Gal">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-451389"></a>
	      	
	      	<div id="li-comment-451389" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">February 26, 2018 at 2:00 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-451389" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-451389">
				
				<p>You may want to consider tuning the minimum confidence parameter 
to help filter out false negatives. Depending on your dataset and use 
case you may want to gather example images of classes you want to 
recognize from your own sensors (such as where the system will be 
deployed) and then fine-tune the model on these example images.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-451389" onclick='return addComment.moveForm( "comment-451389", "451389", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1">
	    
	    	<a name="comment-451315"></a>
	      	
	      	<div id="li-comment-451315" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/b463bc4f93f68ff5da48a0e287348d64.jpg" srcset="https://secure.gravatar.com/avatar/b463bc4f93f68ff5da48a0e287348d64?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Niladri</span>           
	                <span class="date">February 26, 2018 at 3:06 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-451315" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-451315">
				
				<p>Hi Adrian,</p>
<p>A big thanks for all your post, I follow them regularly..and you have
 done a superb work in deep learning. One Concept idea which I developed
 was using my voice message as a input, my drone search and reply me 
with a voice message for the detected object. Would like to share my 
drone video.(<a href="https://dms.licdn.com/playback/C5100AQGI8Yxgy8JTrg/442b93fc59874c00aae4de3480dcc90b/feedshare-mp4_500/1479932728445-v0ch3x?e=1519722000&amp;v=alpha&amp;t=vBxMhCBwvc9TLuesd-ME7keC2Plc-2iVCx-QlOS8lz8" rel="nofollow">https://dms.licdn.com/playback/C5100AQGI8Yxgy8JTrg/442b93fc59874c00aae4de3480dcc90b/feedshare-mp4_500/1479932728445-v0ch3x?e=1519722000&amp;v=alpha&amp;t=vBxMhCBwvc9TLuesd-ME7keC2Plc-2iVCx-QlOS8lz8</a>)</p>
<p>Keep up the good work.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-451315" onclick='return addComment.moveForm( "comment-451315", "451315", "respond", "6092" )' aria-label="Reply to Niladri">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-451476"></a>
	      	
	      	<div id="li-comment-451476" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/32cba0a5b6c2985dc88bf1d18a4bf7a0.jpg" srcset="https://secure.gravatar.com/avatar/32cba0a5b6c2985dc88bf1d18a4bf7a0?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">debasmita</span>           
	                <span class="date">February 27, 2018 at 4:38 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-451476" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-451476">
				
				<p>what modification is needed if i want to only detect the motion? 
my purpose is to use deep learning techniques to detection of motion NOT
 THE CLASSIFICATION. please help</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-451476" onclick='return addComment.moveForm( "comment-451476", "451476", "respond", "6092" )' aria-label="Reply to debasmita">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-451504"></a>
	      	
	      	<div id="li-comment-451504" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">February 27, 2018 at 11:26 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-451504" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-451504">
				
				<p>Is there a particular reason you want to use deep learning for 
motion detection? Basic motion detection can be accomplished through 
simple image processing functions, as I discuss in <a target="blank" href="https://www.pyimagesearch.com/2015/06/01/home-surveillance-and-motion-detection-with-the-raspberry-pi-python-and-opencv/">this blog post</a>.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-451504" onclick='return addComment.moveForm( "comment-451504", "451504", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-451724"></a>
	      	
	      	<div id="li-comment-451724" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/970881367319449c781f048c94b6c05e.jpg" srcset="https://secure.gravatar.com/avatar/970881367319449c781f048c94b6c05e?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">satyar</span>           
	                <span class="date">March 2, 2018 at 12:03 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-451724" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-451724">
				
				<p>Hi Adrian,</p>
<p>gr8 tutorial. I just need small clarification. I want  to add/detect 
 an object/ thing which is not there in the class list given by  you. 
So, what should be the criteria to add/detect them in the video? For 
example, I want to detect my mobile. So, to detect it, I need to add a 
class called ‘Mobile’ in the  class list. After  that Do I need to do 
any additions in ‘MobileNetSSD_deploy.prototxt’ file? Guide me in 
developing the code. Thanks</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-451724" onclick='return addComment.moveForm( "comment-451724", "451724", "respond", "6092" )' aria-label="Reply to satyar">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-451765"></a>
	      	
	      	<div id="li-comment-451765" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">March 2, 2018 at 10:28 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-451765" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-451765">
				
				<p>The .prototxt file does not have to be updated, but you DO need 
to either re-train the network from scratch or fine-tune the network to 
recognize new classes. I discuss how to train and fine-tune your own 
object detection networks inside <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python</a>.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-451765" onclick='return addComment.moveForm( "comment-451765", "451765", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-451736"></a>
	      	
	      	<div id="li-comment-451736" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/ec91aa5efe085ea0783ff9685b33f5e8.jpg" srcset="https://secure.gravatar.com/avatar/ec91aa5efe085ea0783ff9685b33f5e8?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Zachiya</span>           
	                <span class="date">March 2, 2018 at 4:02 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-451736" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-451736">
				
				<p>i got error, and dunno why.</p>
<p>    box = detections[0, 0, i, 3:7] * np.array([w, h , w, h])<br>
      ^<br>
SyntaxError: invalid syntax</p>
<p>pls help.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-451736" onclick='return addComment.moveForm( "comment-451736", "451736", "respond", "6092" )' aria-label="Reply to Zachiya">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-451762"></a>
	      	
	      	<div id="li-comment-451762" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">March 2, 2018 at 10:25 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-451762" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-451762">
				
				<p>Make sure you use the “Downloads” section of this post to 
download the source code instead of copying and pasting it. It looks 
like you likely introduced a syntax error when copying and pasting the 
code.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-451762" onclick='return addComment.moveForm( "comment-451762", "451762", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-451753"></a>
	      	
	      	<div id="li-comment-451753" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/bbd4faae0c705dc4dbe960a13dd6bdff.jpg" srcset="https://secure.gravatar.com/avatar/bbd4faae0c705dc4dbe960a13dd6bdff?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">hashir</span>           
	                <span class="date">March 2, 2018 at 8:40 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-451753" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-451753">
				
				<p>hey bro,<br>
 Hey how long did it take to complete this program, bcz i didnt get any output. could u pls explain to solve this..very urgent<br>
after i running this command(below), it look loke this even after 2 hour<br>
python real_time_object_detection.py –prototxt MobileNetSSD_deploy.prototxt.txt –model MobileNetSSD_deploy.caffemodel<br>
[INFO] loading model…<br>
[INFO] starting video stream…</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-451753" onclick='return addComment.moveForm( "comment-451753", "451753", "respond", "6092" )' aria-label="Reply to hashir">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2 parent">
	    
	    	<a name="comment-451758"></a>
	      	
	      	<div id="li-comment-451758" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">March 2, 2018 at 10:21 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-451758" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-451758">
				
				<p>Hey Hashir — Is the script will run indefinitely until you click on the the open click and press the “q” key on your keyboard.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-451758" onclick='return addComment.moveForm( "comment-451758", "451758", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-3 parent">
	    
	    	<a name="comment-452249"></a>
	      	
	      	<div id="li-comment-452249" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/bbd4faae0c705dc4dbe960a13dd6bdff.jpg" srcset="https://secure.gravatar.com/avatar/bbd4faae0c705dc4dbe960a13dd6bdff?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">hashir</span>           
	                <span class="date">March 7, 2018 at 6:50 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-452249" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-452249">
				
				<p>sorry bro, i didnt get any proper result after pressing q on my keyboard</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-452249" onclick='return addComment.moveForm( "comment-452249", "452249", "respond", "6092" )' aria-label="Reply to hashir">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-4">
	    
	    	<a name="comment-452256"></a>
	      	
	      	<div id="li-comment-452256" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">March 7, 2018 at 9:07 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-452256" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-452256">
				
				<p>You need to click the open window opened by OpenCV and then press the “q” key on your keyboard.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-452256" onclick='return addComment.moveForm( "comment-452256", "452256", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-451878"></a>
	      	
	      	<div id="li-comment-451878" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/87d0c0f6fc293fc711e2a197d79193dd.jpg" srcset="https://secure.gravatar.com/avatar/87d0c0f6fc293fc711e2a197d79193dd?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">srikanth</span>           
	                <span class="date">March 3, 2018 at 9:17 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-451878" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-451878">
				
				<p>is opencv 3.3 or above is mandotary? i am coding all my cv coding
 in opencv 2.10.. Can u please help to find how can i convert this code 
to support in cv2</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-451878" onclick='return addComment.moveForm( "comment-451878", "451878", "respond", "6092" )' aria-label="Reply to srikanth">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-452297"></a>
	      	
	      	<div id="li-comment-452297" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">March 7, 2018 at 9:45 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-452297" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-452297">
				
				<p>Yes, OpenCV 3.3+ is mandatory for the deep neural network (dnn) 
module. The code cannot be converted to OpenCV 2.4. You need ti use 
OpenCV 3.3+.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-452297" onclick='return addComment.moveForm( "comment-452297", "452297", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1">
	    
	    	<a name="comment-452039"></a>
	      	
	      	<div id="li-comment-452039" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/8da61ed9fa35cb912025c68e9bb96d5c.jpg" srcset="https://secure.gravatar.com/avatar/8da61ed9fa35cb912025c68e9bb96d5c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">yousuf</span>           
	                <span class="date">March 5, 2018 at 5:30 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-452039" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-452039">
				
				<p>hi iam using tensorflow for object detection but my model not 
detecting object from live camera but it can detect the object from  
prevideo</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-452039" onclick='return addComment.moveForm( "comment-452039", "452039", "respond", "6092" )' aria-label="Reply to yousuf">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-452319"></a>
	      	
	      	<div id="li-comment-452319" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/dad2a1806eddafc7ec6802417191e6a3.jpg" srcset="https://secure.gravatar.com/avatar/dad2a1806eddafc7ec6802417191e6a3?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Jakub Fracisz</span>           
	                <span class="date">March 7, 2018 at 4:58 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-452319" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-452319">
				
				<p>Hi, when i try to run this code it tells me       :              
   usage: real_time_object_detection.py [-h] -p PROTOTXT -m MODEL [-c 
CONFIDENCE]<br>
real_time_object_detection.py: error: the following arguments are required: -p/–prototxt, -m/–model Do you know what to do? </p>
<p>Ps. Great article</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-452319" onclick='return addComment.moveForm( "comment-452319", "452319", "respond", "6092" )' aria-label="Reply to Jakub Fracisz">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2 parent">
	    
	    	<a name="comment-452554"></a>
	      	
	      	<div id="li-comment-452554" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">March 9, 2018 at 9:25 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-452554" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-452554">
				
				<p>You need to download the source code to the post, open up a 
terminal, navigate to where you downloaded it, and execute the script, 
ensuring you supply the command line arguments. If you’re new to command
 line arguments, that’s okay, but you should <a target="blank" href="https://www.pyimagesearch.com/2018/03/12/python-argparse-command-line-arguments/" rel="nofollow">read up on them</a> before trying to execute the script.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-452554" onclick='return addComment.moveForm( "comment-452554", "452554", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-3 parent">
	    
	    	<a name="comment-452664"></a>
	      	
	      	<div id="li-comment-452664" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/7015fe87e72a6e6e598c98344f9533ca.jpg" srcset="https://secure.gravatar.com/avatar/7015fe87e72a6e6e598c98344f9533ca?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Jakub Fracisz</span>           
	                <span class="date">March 10, 2018 at 10:38 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-452664" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-452664">
				
				<p>And how to navigate to where I downloaded it? </p>
<p>Ps. Can we contact on mail or messanger? I have some questions.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-452664" onclick='return addComment.moveForm( "comment-452664", "452664", "respond", "6092" )' aria-label="Reply to Jakub Fracisz">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-4">
	    
	    	<a name="comment-453093"></a>
	      	
	      	<div id="li-comment-453093" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">March 14, 2018 at 1:23 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-453093" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-453093">
				
				<p>You need to use the “cd” command. If you’re new to the terminal 
and Unix/Linux environments that’s totally okay, but I would recommend 
that you spend a few days learning the fundamentals of how to use the 
command line before you try executing this code.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-453093" onclick='return addComment.moveForm( "comment-453093", "453093", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-452588"></a>
	      	
	      	<div id="li-comment-452588" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/17e21c136557fc6ba300fa11b19c7e5e.jpg" srcset="https://secure.gravatar.com/avatar/17e21c136557fc6ba300fa11b19c7e5e?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Anar</span>           
	                <span class="date">March 9, 2018 at 4:40 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-452588" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-452588">
				
				<p>Hi Adrian,</p>
<p>How to use IP camera instead of webcam?</p>
<p>Thanks</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-452588" onclick='return addComment.moveForm( "comment-452588", "452588", "respond", "6092" )' aria-label="Reply to Anar">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-453100"></a>
	      	
	      	<div id="li-comment-453100" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">March 14, 2018 at 1:29 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-453100" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-453100">
				
				<p>I do not have any tutorials on IP cameras yet but I’ll try do one
 soon. Depending on your webcam and IP stream it’s either very easy and 
straightforward or quite complicated.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-453100" onclick='return addComment.moveForm( "comment-453100", "453100", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1">
	    
	    	<a name="comment-452750"></a>
	      	
	      	<div id="li-comment-452750" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/8ea841b1acbb65703f92fb522e1faa77.jpg" srcset="https://secure.gravatar.com/avatar/8ea841b1acbb65703f92fb522e1faa77?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Ahsan Tariq</span>           
	                <span class="date">March 11, 2018 at 12:50 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-452750" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-452750">
				
				<p>Hi Adrian, I tried the code but i am facing a problem. I have asked the question in stackoverflow.<br>
Link to my question is     <a href="https://stackoverflow.com/questions/44020713/an-exception-has-occurred-use-tb-to-see-the-full-traceback-python" rel="nofollow">https://stackoverflow.com/questions/44020713/an-exception-has-occurred-use-tb-to-see-the-full-traceback-python</a></p>
<p>Kindly check and answer please.</p>
<p>(email removed my spam filter)</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-452750" onclick='return addComment.moveForm( "comment-452750", "452750", "respond", "6092" )' aria-label="Reply to Ahsan Tariq">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-452810"></a>
	      	
	      	<div id="li-comment-452810" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/e47e6caceaa6d283e551866b9f2b0429.jpg" srcset="https://secure.gravatar.com/avatar/e47e6caceaa6d283e551866b9f2b0429?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Alice</span>           
	                <span class="date">March 12, 2018 at 4:59 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-452810" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-452810">
				
				<p>Hi Andrian, I did try to follow your tutorial at: <a href="https://www.pyimagesearch.com/2016/12/26/opencv-resolving-nonetype-errors/" rel="nofollow">https://www.pyimagesearch.com/2016/12/26/opencv-resolving-nonetype-errors/</a><br>
And others but I still have that error:</p>
<p>File “real_time_object_detection.py”, line 59, in<br>
…<br>
    (h, w) = image.shape[:2]<br>
AttributeError: ‘tuple’ object has no attribute ‘shape’</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-452810" onclick='return addComment.moveForm( "comment-452810", "452810", "respond", "6092" )' aria-label="Reply to Alice">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-453077"></a>
	      	
	      	<div id="li-comment-453077" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">March 14, 2018 at 1:09 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-453077" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-453077">
				
				<p>Double-check that OpenCV can access your USB camera or webcam. 
Based on the error, it looks to me like OpenCV is unable to access the 
video stream.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-453077" onclick='return addComment.moveForm( "comment-453077", "453077", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-452914"></a>
	      	
	      	<div id="li-comment-452914" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/15f7f6d725ad9e737e63d1828e2add75.jpg" srcset="https://secure.gravatar.com/avatar/15f7f6d725ad9e737e63d1828e2add75?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Dev</span>           
	                <span class="date">March 13, 2018 at 3:51 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-452914" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-452914">
				
				<p>How can i use other training image data sets to train the data..<br>
for example.. if i want to detect a UAV in the image, what open source training data are available for this?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-452914" onclick='return addComment.moveForm( "comment-452914", "452914", "respond", "6092" )' aria-label="Reply to Dev">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-453057"></a>
	      	
	      	<div id="li-comment-453057" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">March 14, 2018 at 12:47 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-453057" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-453057">
				
				<p>I believe Stanford has a pretty cool <a target="blank" href="http://cvgl.stanford.edu/projects/uav_data/" rel="nofollow">UAV dataset</a>.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-453057" onclick='return addComment.moveForm( "comment-453057", "453057", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1">
	    
	    	<a name="comment-453121"></a>
	      	
	      	<div id="li-comment-453121" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/22680f3d6822528385913f297fc58650.png" srcset="https://secure.gravatar.com/avatar/22680f3d6822528385913f297fc58650?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Yadullah Abidi</span>           
	                <span class="date">March 14, 2018 at 6:56 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-453121" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-453121">
				
				<p>Hi Adrian, I’d just like to know how do I reduce the number of 
classes you provided in the CLASSES array. I’d only like to detect 
Humans and Cars. What are the Necessary changes that I have to make?</p>
<p>I tried simply deleting those elements from the CLASSES array but that seems to have broken the code.</p>
<p>Thanks</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-453121" onclick='return addComment.moveForm( "comment-453121", "453121", "respond", "6092" )' aria-label="Reply to Yadullah Abidi">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-453122"></a>
	      	
	      	<div id="li-comment-453122" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/22680f3d6822528385913f297fc58650.png" srcset="https://secure.gravatar.com/avatar/22680f3d6822528385913f297fc58650?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Yadullah Abidi</span>           
	                <span class="date">March 14, 2018 at 6:57 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-453122" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-453122">
				
				<p>Ahh Never mind. It was a bummer on my part. The code runs just fine</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-453122" onclick='return addComment.moveForm( "comment-453122", "453122", "respond", "6092" )' aria-label="Reply to Yadullah Abidi">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-453625"></a>
	      	
	      	<div id="li-comment-453625" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">March 19, 2018 at 6:06 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-453625" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-453625">
				
				<p>You don’t want to delete elements from the CLASSES array. That will cause an error. Instead, filter on the <code>idx</code> of the detection. See my reply to “latha” December 28, 2017.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-453625" onclick='return addComment.moveForm( "comment-453625", "453625", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-453123"></a>
	      	
	      	<div id="li-comment-453123" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/2ee00550d206e5aa84f7eb4d6918ac42.jpg" srcset="https://secure.gravatar.com/avatar/2ee00550d206e5aa84f7eb4d6918ac42?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Walter suarez</span>           
	                <span class="date">March 14, 2018 at 7:29 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-453123" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-453123">
				
				<p>Hello excellent tutorial ..<br>
first of all forgive me for my bad English. I wanted to know how can you
 reconnect the camera when there is an error? and second, how can the 
code be modified so that it recognizes only people? Thank you</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-453123" onclick='return addComment.moveForm( "comment-453123", "453123", "respond", "6092" )' aria-label="Reply to Walter suarez">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-453624"></a>
	      	
	      	<div id="li-comment-453624" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">March 19, 2018 at 6:05 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-453624" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-453624">
				
				<p>1. Can you elaborate on what you mean by “reconnect the camera when there is an error”? I’m not sure what you mean.</p>
<p>2. See my reply to “latha” December 28, 2017.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-453624" onclick='return addComment.moveForm( "comment-453624", "453624", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1">
	    
	    	<a name="comment-453430"></a>
	      	
	      	<div id="li-comment-453430" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/5cf8d8284b59f8e5449558ebb71fb940.jpg" srcset="https://secure.gravatar.com/avatar/5cf8d8284b59f8e5449558ebb71fb940?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Jay Dodia</span>           
	                <span class="date">March 18, 2018 at 3:26 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-453430" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-453430">
				
				<p>Oksy Sir, I’ve successfully done the obsctacle detection using my
 logitech webcam and open cv on my raspberry pi 3. I now would like to 
ask you, how do I do obstacle avoidance if I mount my webcam on a bot 
which is running autonomously by maybe reducing its speed when obstacle 
is detected or change its path when it detects it. Please help me out 
with it sir.<br>
You can respond to this on my email address: (email removed by spam filter) as soon as possible.<br>
Thank You so much.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-453430" onclick='return addComment.moveForm( "comment-453430", "453430", "respond", "6092" )' aria-label="Reply to Jay Dodia">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-453820"></a>
	      	
	      	<div id="li-comment-453820" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/2c0ee1845f536b4ceb6f99ab46530c19.jpg" srcset="https://secure.gravatar.com/avatar/2c0ee1845f536b4ceb6f99ab46530c19?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">chirag patil</span>           
	                <span class="date">March 21, 2018 at 11:12 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-453820" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-453820">
				
				<p>I am getting a segmentation fault while running the code. I have 
installed opencv version 3 with dnn = on, successfully. any explaination
 for this?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-453820" onclick='return addComment.moveForm( "comment-453820", "453820", "respond", "6092" )' aria-label="Reply to chirag patil">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-453935"></a>
	      	
	      	<div id="li-comment-453935" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">March 22, 2018 at 9:56 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-453935" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-453935">
				
				<p>Sorry, I’m not sure what would be causing this issue. Can you pinpoint exactly which line is causing the error?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-453935" onclick='return addComment.moveForm( "comment-453935", "453935", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-454178"></a>
	      	
	      	<div id="li-comment-454178" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/2b48c2fb368c739f50d7cd820b704a63.jpg" srcset="https://secure.gravatar.com/avatar/2b48c2fb368c739f50d7cd820b704a63?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">harini</span>           
	                <span class="date">March 25, 2018 at 12:23 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-454178" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-454178">
				
				<p>while executing the above code i get the following error</p>
<p>Can’t open “MobileNetSSD_deploy.prototxt.txt”) in 
ReadProtoFromTextFile, file 
/home/pi/opencv-3.3.0/modules/dnn/src/caffe/caffe_io.cpp, line 1113 
“MobileNetSSD_deploy.prototxt.txt” in function ReadProtoFromTextFile</p>
<p>can anyone help me out in solving this</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-454178" onclick='return addComment.moveForm( "comment-454178", "454178", "respond", "6092" )' aria-label="Reply to harini">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-454354"></a>
	      	
	      	<div id="li-comment-454354" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">March 27, 2018 at 6:22 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-454354" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-454354">
				
				<p>Your path to the .prototxt file is incorrect. Double-check your file paths and be sure you read up on <a target="blank" href="https://www.pyimagesearch.com/2018/03/12/python-argparse-command-line-arguments/">command line arguments</a> before continuing.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-454354" onclick='return addComment.moveForm( "comment-454354", "454354", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-454775"></a>
	      	
	      	<div id="li-comment-454775" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/2dc2bef87e436e242507a3630c3330ca.jpg" srcset="https://secure.gravatar.com/avatar/2dc2bef87e436e242507a3630c3330ca?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Mathieu</span>           
	                <span class="date">March 31, 2018 at 9:03 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-454775" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-454775">
				
				<p>Hi Adrian,</p>
<p>Thx for all those tutorials, its helping a lot to learn how to use python and opencv!</p>
<p>I’m able to make this program works but i’m wondering how to do an 
action with the answer. (do something if there is one person detected, 
do something else if there is two etc…).</p>
<p>Hope you are still having fun with deep learning.</p>
<p>Math</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-454775" onclick='return addComment.moveForm( "comment-454775", "454775", "respond", "6092" )' aria-label="Reply to Mathieu">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2 parent">
	    
	    	<a name="comment-455106"></a>
	      	
	      	<div id="li-comment-455106" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">April 4, 2018 at 12:37 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-455106" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-455106">
				
				<p>You would want to add an “if” statement in the “for” loop on Line
 56 that loops over the detections. More specifically, after Line 63, 
you would want to do something like this:</p>
<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93d9078f7ea157993891" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft">if CLASSES[idx] == "person":
    print("A person was detected! Sound the alarm!")</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93d9078f7ea157993891-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9078f7ea157993891-2">2</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93d9078f7ea157993891-1"><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-v">CLASSES</span><span class="crayon-sy">[</span><span class="crayon-v">idx</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">==</span><span class="crayon-h"> </span><span class="crayon-s">"person"</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9078f7ea157993891-2"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-k ">print</span><span class="crayon-sy">(</span><span class="crayon-s">"A person was detected! Sound the alarm!"</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0007 seconds] -->
<p></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-455106" onclick='return addComment.moveForm( "comment-455106", "455106", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-3 parent">
	    
	    	<a name="comment-455351"></a>
	      	
	      	<div id="li-comment-455351" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/2dc2bef87e436e242507a3630c3330ca.jpg" srcset="https://secure.gravatar.com/avatar/2dc2bef87e436e242507a3630c3330ca?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Mathieu</span>           
	                <span class="date">April 6, 2018 at 6:56 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-455351" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-455351">
				
				<p>Working perfectly, thank you!</p>
<p>Is it possible to count the number of person in the screen? ( if there is one person print 1, if there is two, print 2)</p>
<p>Math</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-455351" onclick='return addComment.moveForm( "comment-455351", "455351", "respond", "6092" )' aria-label="Reply to Mathieu">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-4 parent">
	    
	    	<a name="comment-455982"></a>
	      	
	      	<div id="li-comment-455982" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">April 10, 2018 at 12:47 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-455982" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-455982">
				
				<p>Yes. Maintain a dictionary for each frame that maintains:</p>
<p>1. The key of the dictionary as the detected class<br>
2. The value as the number of objects</p>
<p>You can loop over each of the detected objects and update the dictionary.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-455982" onclick='return addComment.moveForm( "comment-455982", "455982", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-5">
	    
	    	<a name="comment-456687"></a>
	      	
	      	<div id="li-comment-456687" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/2dc2bef87e436e242507a3630c3330ca.jpg" srcset="https://secure.gravatar.com/avatar/2dc2bef87e436e242507a3630c3330ca?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Mathieu</span>           
	                <span class="date">April 14, 2018 at 7:08 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-456687" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-456687">
				
				<p>Hi Adrian</p>
<p>Sounds logic but i’m a little bit confuse about how it will look in the code.. can you show me a little example?</p>
<p>Thank again for yout time.</p>
<p>Math</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-5">
	    
	    	<a name="comment-456967"></a>
	      	
	      	<div id="li-comment-456967" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">April 16, 2018 at 2:29 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-456967" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-456967">
				
				<p>Sorry, I’m absolutely happy to help point you in the right 
direction but I cannot write code for you. Take a little bit of time to 
work with Python dictionaries and create a simple script that can count 
the number of words in a sentence. The same method applies here. Loop 
over the detected objects and count the number of objects for each 
class. I have faith in you and I’m confident you can do it! 🙂</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-454851"></a>
	      	
	      	<div id="li-comment-454851" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/f1d1f223cf90ea845d41ec0d7b457b2f.jpg" srcset="https://secure.gravatar.com/avatar/f1d1f223cf90ea845d41ec0d7b457b2f?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Raj</span>           
	                <span class="date">April 2, 2018 at 2:35 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-454851" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-454851">
				
				<p>Hii Adrian….I need a help…….when I give a video as the input 
(original video length:5 sec) it runs for about 3 minutes…..what is the 
reason for this..? Can u plzz help me with this..</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-454851" onclick='return addComment.moveForm( "comment-454851", "454851", "respond", "6092" )' aria-label="Reply to Raj">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2 parent">
	    
	    	<a name="comment-455095"></a>
	      	
	      	<div id="li-comment-455095" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">April 4, 2018 at 12:29 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-455095" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-455095">
				
				<p>Most video files will play between 18-24 FPS. This method can 
only run at ~6-7 FPS on most standard CPUs. That said, 3 minutes for 
about 5 seconds of video is an incredibly long time. What type of 
hardware are you trying to run this code and object detector on?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-455095" onclick='return addComment.moveForm( "comment-455095", "455095", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-3 parent">
	    
	    	<a name="comment-455274"></a>
	      	
	      	<div id="li-comment-455274" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/f1d1f223cf90ea845d41ec0d7b457b2f.jpg" srcset="https://secure.gravatar.com/avatar/f1d1f223cf90ea845d41ec0d7b457b2f?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Raj</span>           
	                <span class="date">April 6, 2018 at 4:33 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-455274" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-455274">
				
				<p>ubuntu 16.04<br>
16gb ram<br>
64 bit os</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-455274" onclick='return addComment.moveForm( "comment-455274", "455274", "respond", "6092" )' aria-label="Reply to Raj">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-4 parent">
	    
	    	<a name="comment-455288"></a>
	      	
	      	<div id="li-comment-455288" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">April 6, 2018 at 8:42 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-455288" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-455288">
				
				<p>Given your system specs the object detector should certainly be 
running at a higher frame rate. How large (in terms of width and height)
 are your input images?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-455288" onclick='return addComment.moveForm( "comment-455288", "455288", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-5">
	    
	    	<a name="comment-455664"></a>
	      	
	      	<div id="li-comment-455664" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/f1d1f223cf90ea845d41ec0d7b457b2f.jpg" srcset="https://secure.gravatar.com/avatar/f1d1f223cf90ea845d41ec0d7b457b2f?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Raj</span>           
	                <span class="date">April 9, 2018 at 5:48 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-455664" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-455664">
				
				<p>the resolution of video is 640*352</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-5">
	    
	    	<a name="comment-455944"></a>
	      	
	      	<div id="li-comment-455944" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">April 10, 2018 at 12:12 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-455944" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-455944">
				
				<p>640×352 should be easily processable by a standard 
laptop/desktop. To be honest I think there might be an 
install/configuration problem with your version of OpenCV. Try to 
re-compile and re-install OpenCV, ideally on a fresh install of an 
operating system.</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment even depth-5">
	    
	    	<a name="comment-455666"></a>
	      	
	      	<div id="li-comment-455666" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/f1d1f223cf90ea845d41ec0d7b457b2f.jpg" srcset="https://secure.gravatar.com/avatar/f1d1f223cf90ea845d41ec0d7b457b2f?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Raj</span>           
	                <span class="date">April 9, 2018 at 5:50 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-455666" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-455666">
				
				<p>Is there any method to give 1 FPS as the input from the video…</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-454863"></a>
	      	
	      	<div id="li-comment-454863" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/25fc440a0d08a1575f20be9186249caf.jpg" srcset="https://secure.gravatar.com/avatar/25fc440a0d08a1575f20be9186249caf?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Ganesh</span>           
	                <span class="date">April 2, 2018 at 5:14 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-454863" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-454863">
				
				<p>Hello Sir, how to estimate speed of multiple vehicles using opencv python?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-454863" onclick='return addComment.moveForm( "comment-454863", "454863", "respond", "6092" )' aria-label="Reply to Ganesh">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-455092"></a>
	      	
	      	<div id="li-comment-455092" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">April 4, 2018 at 12:26 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-455092" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-455092">
				
				<p>There are a few ways to build such a project. The first is to 
calibrate your camera. You will then need a method to localize the 
vehicle. Then apply an object tracking algorithm for each object in the 
video. Given a calibrated camera and known FPS you can determine how 
far, and therefore, how fast, an object has moved between subsequent 
frames in a video. It’s a bit of a tricky process so you’ll want to take
 your time with it.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-455092" onclick='return addComment.moveForm( "comment-455092", "455092", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-455024"></a>
	      	
	      	<div id="li-comment-455024" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/f1d1f223cf90ea845d41ec0d7b457b2f.jpg" srcset="https://secure.gravatar.com/avatar/f1d1f223cf90ea845d41ec0d7b457b2f?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Raj</span>           
	                <span class="date">April 4, 2018 at 12:42 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-455024" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-455024">
				
				<p>I have to count the number of objects in each frame of the video 
and if the number of objects is less than the previous count ..i have to
 notify that there is missing of objects..can u help me to do this..plzz</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-455024" onclick='return addComment.moveForm( "comment-455024", "455024", "respond", "6092" )' aria-label="Reply to Raj">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2 parent">
	    
	    	<a name="comment-455078"></a>
	      	
	      	<div id="li-comment-455078" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">April 4, 2018 at 12:07 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-455078" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-455078">
				
				<p>You will be able to accomplish this using the source code of this
 post with only tiny modifications. Create a dictionary that counts the 
number of objects in subsequent frames. If the counts for each object 
differs, send the alert.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-455078" onclick='return addComment.moveForm( "comment-455078", "455078", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-3">
	    
	    	<a name="comment-455264"></a>
	      	
	      	<div id="li-comment-455264" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/f1d1f223cf90ea845d41ec0d7b457b2f.jpg" srcset="https://secure.gravatar.com/avatar/f1d1f223cf90ea845d41ec0d7b457b2f?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Raj</span>           
	                <span class="date">April 6, 2018 at 1:36 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-455264" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-455264">
				
				<p>thank you:)</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-455264" onclick='return addComment.moveForm( "comment-455264", "455264", "respond", "6092" )' aria-label="Reply to Raj">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-455205"></a>
	      	
	      	<div id="li-comment-455205" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/8444278f0b0026ec549bf23a5a56487b.jpg" srcset="https://secure.gravatar.com/avatar/8444278f0b0026ec549bf23a5a56487b?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Alina</span>           
	                <span class="date">April 5, 2018 at 8:49 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-455205" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-455205">
				
				<p>Hello Adrian,</p>
<p>I installed everything on an Ubuntu machine with no errors, however 
when I run the script I get the following error. Any ideas on how to fix
 that?</p>
<p>python real_time_object_detection.py \<br>
&gt; –prototxt MobileNetSSD_deploy.prototxt.txt \<br>
&gt; –model MobileNetSSD_deploy.caffemodel<br>
…<br>
AttributeError: module ‘cv2’ has no attribute ‘dnn’</p>
<p>Cheers,<br>
Alina</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-455205" onclick='return addComment.moveForm( "comment-455205", "455205", "respond", "6092" )' aria-label="Reply to Alina">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2 parent">
	    
	    	<a name="comment-455302"></a>
	      	
	      	<div id="li-comment-455302" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">April 6, 2018 at 8:55 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-455302" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-455302">
				
				<p>Hey Alina — you need to install OpenCV 3.3 or greater. Previous 
versions of OpenCV did not include the “dnn” module. Double-check your 
OpenCV version and upgrade if necessary.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-455302" onclick='return addComment.moveForm( "comment-455302", "455302", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-3 parent">
	    
	    	<a name="comment-459998"></a>
	      	
	      	<div id="li-comment-459998" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/8444278f0b0026ec549bf23a5a56487b.jpg" srcset="https://secure.gravatar.com/avatar/8444278f0b0026ec549bf23a5a56487b?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Alina</span>           
	                <span class="date">May 5, 2018 at 7:33 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-459998" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-459998">
				
				<p>You were right, I had installed opencv 3 in the beginning. Could you I ask you a question? </p>
<p>I am trying to give a webm video file as an input, but it throws me 
an error. What tut can I watch so I can make this work? Would I need to 
make any changes at the code apart from the part of the giving input 
stream?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-459998" onclick='return addComment.moveForm( "comment-459998", "459998", "respond", "6092" )' aria-label="Reply to Alina">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-4">
	    
	    	<a name="comment-460684"></a>
	      	
	      	<div id="li-comment-460684" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">May 9, 2018 at 10:26 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-460684" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-460684">
				
				<p>1. Nice, I’m glad the OpenCV issue was resolved.</p>
<p>2. Without knowing exactly what the error is I cannot provide any 
guidance. Please keep in mind that I can only provide suggestions or 
help if you can tell me exactly what issue you are running into.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-460684" onclick='return addComment.moveForm( "comment-460684", "460684", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-455911"></a>
	      	
	      	<div id="li-comment-455911" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/e1cadd0316a4567417a96f6ed8cc6802.jpg" srcset="https://secure.gravatar.com/avatar/e1cadd0316a4567417a96f6ed8cc6802?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href="http://pencius-cff.blogspot.com/" rel="external nofollow" class="url">Fensius</a></span>           
	                <span class="date">April 10, 2018 at 10:11 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-455911" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-455911">
				
				<p>Hai adrian , i get stuck here </p>
<p>[INFO] loading model…<br>
…<br>
    (h, w) = image.shape[:2]<br>
AttributeError: ‘NoneType’ object has no attribute ‘shape’</p>
<p>I’ve seen comment atul soni, I have also tried it with the 
explanation you gave, I have checks for whether picamera works, I also 
had to install libjpeg but still can’t. How to solve it? Thank you</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-455911" onclick='return addComment.moveForm( "comment-455911", "455911", "respond", "6092" )' aria-label="Reply to Fensius">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2 parent">
	    
	    	<a name="comment-455929"></a>
	      	
	      	<div id="li-comment-455929" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">April 10, 2018 at 11:52 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-455929" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-455929">
				
				<p>How did you check and confirm that the Python “picamera” module works?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-455929" onclick='return addComment.moveForm( "comment-455929", "455929", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-3 parent">
	    
	    	<a name="comment-456071"></a>
	      	
	      	<div id="li-comment-456071" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/e1cadd0316a4567417a96f6ed8cc6802.jpg" srcset="https://secure.gravatar.com/avatar/e1cadd0316a4567417a96f6ed8cc6802?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href="http://pencius-cff.blogspot.com/" rel="external nofollow" class="url">fensius</a></span>           
	                <span class="date">April 10, 2018 at 10:07 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-456071" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-456071">
				
				<p>Thanks before adrian , i ty this tutorial from your post </p>
<p><a href="https://www.pyimagesearch.com/2015/03/30/accessing-the-raspberry-pi-camera-with-opencv-and-python/" rel="nofollow">https://www.pyimagesearch.com/2015/03/30/accessing-the-raspberry-pi-camera-with-opencv-and-python/</a></p>
<p>can you help me, where is the problem?</p>
<p>thankyou</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-456071" onclick='return addComment.moveForm( "comment-456071", "456071", "respond", "6092" )' aria-label="Reply to fensius">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-4">
	    
	    	<a name="comment-456172"></a>
	      	
	      	<div id="li-comment-456172" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">April 11, 2018 at 9:02 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-456172" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-456172">
				
				<p>When you ran the previous tutorial, did it work? If so, you need to update Line 35 to be:</p>
<p><code>vs = VideoStream(usePiCamera=True).start()</code></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-456172" onclick='return addComment.moveForm( "comment-456172", "456172", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-456252"></a>
	      	
	      	<div id="li-comment-456252" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/e1cadd0316a4567417a96f6ed8cc6802.jpg" srcset="https://secure.gravatar.com/avatar/e1cadd0316a4567417a96f6ed8cc6802?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href="http://pencius-cff.blogspot.com/" rel="external nofollow" class="url">Fensius Aritonang</a></span>           
	                <span class="date">April 11, 2018 at 9:14 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-456252" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-456252">
				
				<p>Thanks adrian, it worked!. But there is a problem when doing 
streaming, frame are displayed very slowly. Is there any way to speed up
 his fps on a raspberry?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-456252" onclick='return addComment.moveForm( "comment-456252", "456252", "respond", "6092" )' aria-label="Reply to Fensius Aritonang">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-456471"></a>
	      	
	      	<div id="li-comment-456471" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">April 13, 2018 at 6:53 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-456471" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-456471">
				
				<p>The Pi by itself isn’t suitable for real-time detection using 
these deep learning models. I provide some benchmarks and explain why in
 <a target="blank" href="https://www.pyimagesearch.com/2017/10/16/raspberry-pi-deep-learning-object-detection-with-opencv/">this blog post</a>. For additional speed, try the <a target="blank" href="https://www.pyimagesearch.com/2018/02/19/real-time-object-detection-on-the-raspberry-pi-with-the-movidius-ncs/">Movidius NCS</a>.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-456471" onclick='return addComment.moveForm( "comment-456471", "456471", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-456314"></a>
	      	
	      	<div id="li-comment-456314" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/4f8ee2ec29a0cb74bdf252694047ada5.jpg" srcset="https://secure.gravatar.com/avatar/4f8ee2ec29a0cb74bdf252694047ada5?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Anthony</span>           
	                <span class="date">April 12, 2018 at 8:29 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-456314" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-456314">
				
				<p>Hi Adrian,</p>
<p>i would like to apologize in advance, because my English isn’t the 
best it could be, but I really wanted to tell you how much I appreciate 
your tutorials. They really helped me to deepen my knowledge in the 
field of OpenCV. </p>
<p>In a personal project of mine, where I try to incorporate your code 
in an ROS node I have to face the problem of converting your while loop –
 where the whole frame processing is taken place into a function.</p>
<p>But I really struggle to create the appropriate return statement to receive the same results.</p>
<p>Thanks in advance for your response.<br>
Cheers</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-456314" onclick='return addComment.moveForm( "comment-456314", "456314", "respond", "6092" )' aria-label="Reply to Anthony">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-456467"></a>
	      	
	      	<div id="li-comment-456467" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">April 13, 2018 at 6:49 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-456467" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-456467">
				
				<p>Hi Anthony — thanks for the comment, and no worries, your English is very easy to understand.</p>
<p>You mentioned a problem with the “while” loop and trying to return a 
particular result. Could you elaborate more on what the specific issue 
is with the “while” loop and what you are trying to accomplish?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-456467" onclick='return addComment.moveForm( "comment-456467", "456467", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-456375"></a>
	      	
	      	<div id="li-comment-456375" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/8341d6bf0a79c91d4f170f24dc6192ad.jpg" srcset="https://secure.gravatar.com/avatar/8341d6bf0a79c91d4f170f24dc6192ad?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Aman Sharma</span>           
	                <span class="date">April 12, 2018 at 6:23 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-456375" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-456375">
				
				<p>Hi Adrian<br>
I executed the code but got an error stating that ‘module’ object has no attribute ‘dnn’<br>
Im using opencv 3.3 and also have opencv_contrib3.3<br>
module folder have dnn folder also<br>
yet Im getting error<br>
Could u please help me out of it.<br>
Thank you</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-456375" onclick='return addComment.moveForm( "comment-456375", "456375", "respond", "6092" )' aria-label="Reply to Aman Sharma">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-456458"></a>
	      	
	      	<div id="li-comment-456458" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">April 13, 2018 at 6:40 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-456458" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-456458">
				
				<p>Hey Aman — it sounds like, for whatever reason, your version of 
OpenCV does not include the “dnn” module. Perhaps you are using a 
previous version of OpenCV accidentally? To confirm your OpenCV version 
open up a Python shell and check:</p>
<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5c93d9078f301167799302" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea class="crayon-plain print-no" data-settings="" readonly="readonly" style="-moz-tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;" wrap="soft">$ python
&gt;&gt;&gt; import cv2
&gt;&gt;&gt; cv2.__version__</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table" style="">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c93d9078f301167799302-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c93d9078f301167799302-2">2</div><div class="crayon-num" data-line="crayon-5c93d9078f301167799302-3">3</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c93d9078f301167799302-1"><span class="crayon-sy">$</span><span class="crayon-h"> </span><span class="crayon-v">python</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c93d9078f301167799302-2"><span class="crayon-o">&gt;&gt;&gt;</span><span class="crayon-h"> </span><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span></div><div class="crayon-line" id="crayon-5c93d9078f301167799302-3"><span class="crayon-o">&gt;&gt;&gt;</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-v">__version__</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0007 seconds] -->
<p></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-456458" onclick='return addComment.moveForm( "comment-456458", "456458", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-456868"></a>
	      	
	      	<div id="li-comment-456868" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/7c409247fd2a9e2ac124fa60f49329d8.jpg" srcset="https://secure.gravatar.com/avatar/7c409247fd2a9e2ac124fa60f49329d8?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Yin</span>           
	                <span class="date">April 16, 2018 at 6:18 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-456868" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-456868">
				
				<p>Hi, I run your project on my Ubantu16.04 No errors occurred, but the window called<br>
‘ Frame ‘ is full of green. Nothing can be shown from my notebook front 
camera. Actually, my camera runs normally under the Win10 system.<br>
How to solve my problem? I will be grateful if you can help me!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-456868" onclick='return addComment.moveForm( "comment-456868", "456868", "respond", "6092" )' aria-label="Reply to Yin">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2 parent">
	    
	    	<a name="comment-456954"></a>
	      	
	      	<div id="li-comment-456954" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">April 16, 2018 at 2:15 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-456954" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-456954">
				
				<p>Hey Yin — are you using the code + model included with this blog post? Or a different model + code?</p>
<p>It sounds like there are hundreds if not thousands of detections 
coming from your model. This could be due to false-positives or a bug in
 your model. Double-check your confidence threshold used to filter out 
weak predictions as well (you may need to increase the threshold).</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-456954" onclick='return addComment.moveForm( "comment-456954", "456954", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-3 parent">
	    
	    	<a name="comment-457082"></a>
	      	
	      	<div id="li-comment-457082" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/7c409247fd2a9e2ac124fa60f49329d8.jpg" srcset="https://secure.gravatar.com/avatar/7c409247fd2a9e2ac124fa60f49329d8?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Yin</span>           
	                <span class="date">April 17, 2018 at 3:39 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-457082" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-457082">
				
				<p>Yes, I use the code + model included with this blog post.<br>
Increasing the threshold can’t solve the problem.<br>
I think maybe there are something wrong with my notebook front camera 
drive  under Linux system. Because I can’t get full video from my 
camera, Only the top half of the video is shown, the bottom half is all 
green and no signal.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-457082" onclick='return addComment.moveForm( "comment-457082", "457082", "respond", "6092" )' aria-label="Reply to Yin">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-4 parent">
	    
	    	<a name="comment-457141"></a>
	      	
	      	<div id="li-comment-457141" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">April 17, 2018 at 9:21 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-457141" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-457141">
				
				<p>Unfortunately it does sound like there is a problem with your 
laptop camera. I would also suggest getting your hands on a USB camera 
as well so you can debug further.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-457141" onclick='return addComment.moveForm( "comment-457141", "457141", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-5">
	    
	    	<a name="comment-457166"></a>
	      	
	      	<div id="li-comment-457166" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/7c409247fd2a9e2ac124fa60f49329d8.jpg" srcset="https://secure.gravatar.com/avatar/7c409247fd2a9e2ac124fa60f49329d8?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Yin</span>           
	                <span class="date">April 17, 2018 at 11:39 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-457166" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-457166">
				
				<p>Thank you very much!<br>
I have solved the problem.<br>
By the way, if I want to get the video stream with an external camera 
instead of notebook front camera, can you recommend one? So I can detect
 other places rather than objects in front of my computer.</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-5">
	    
	    	<a name="comment-457385"></a>
	      	
	      	<div id="li-comment-457385" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">April 18, 2018 at 3:06 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-457385" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-457385">
				
				<p>Nice, congrats on resolving the problem. As far as a USB camera goes, I really like my <a target="blank" href="https://amzn.to/2J3phEA" rel="nofollow">Logitech C920</a>. It’s plug and play compatible with most systems.</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment even depth-5">
	    
	    	<a name="comment-458546"></a>
	      	
	      	<div id="li-comment-458546" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/6a576e22ca8ce5aa7663f4627f422b41.jpg" srcset="https://secure.gravatar.com/avatar/6a576e22ca8ce5aa7663f4627f422b41?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Daniel</span>           
	                <span class="date">April 25, 2018 at 3:04 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-458546" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-458546">
				
				<p>Hi Yin, </p>
<p>can you share how did you solve the problem? I´m facing the same 
issue but can´t find a solution. I´m working with Ubuntu 16.04 and the 
webcam works allright in windows 10 and in guvcview in Ubuntu.</p>
<p>Thanks!!</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment odd alt depth-5">
	    
	    	<a name="comment-459229"></a>
	      	
	      	<div id="li-comment-459229" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/7c409247fd2a9e2ac124fa60f49329d8.jpg" srcset="https://secure.gravatar.com/avatar/7c409247fd2a9e2ac124fa60f49329d8?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Yin</span>           
	                <span class="date">April 29, 2018 at 9:21 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-459229" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-459229">
				
				<p>Hi, Daniel. First you should check the connection between your 
front camera and Ubuntu VM, they should be connected via USB3.0. And 
then install cheese in your ubuntu shell by this command:<br>
$ sudo apt-get install cheese<br>
$ cheese<br>
It may display captured video by your front camera.</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment even depth-5">
	    
	    	<a name="comment-459602"></a>
	      	
	      	<div id="li-comment-459602" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/d0441841caa440f9c82efc7e5af79bf1.jpg" srcset="https://secure.gravatar.com/avatar/d0441841caa440f9c82efc7e5af79bf1?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Daniel</span>           
	                <span class="date">May 2, 2018 at 4:05 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-459602" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-459602">
				
				<p>Hi Yin, </p>
<p>thanks for your advice, it solved the problem!</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-5">
	    
	    	<a name="comment-459752"></a>
	      	
	      	<div id="li-comment-459752" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">May 3, 2018 at 9:36 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-459752" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-459752">
				
				<p>Awesome, I’m glad it worked! 🙂</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-457003"></a>
	      	
	      	<div id="li-comment-457003" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/36a9d3950ef81d4c9d401e284ea86ecb.jpg" srcset="https://secure.gravatar.com/avatar/36a9d3950ef81d4c9d401e284ea86ecb?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Abdoul</span>           
	                <span class="date">April 16, 2018 at 4:07 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-457003" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-457003">
				
				<p>As always your tutorials are very clear thank you. I tried it on 
the raspberry although the rendering is a little slow, that’s not a 
problem because I want to count(e.g: each 5 fsp) the number of cats. 
Please can you help me with the syntax to add.<br>
Thank you in advance</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-457003" onclick='return addComment.moveForm( "comment-457003", "457003", "respond", "6092" )' aria-label="Reply to Abdoul">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-457149"></a>
	      	
	      	<div id="li-comment-457149" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">April 17, 2018 at 9:29 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-457149" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-457149">
				
				<p>Hey Abdoul, just to clarify from your comment, are you trying to 
increase the FPS processing rate of the object detection? Or count the 
total number of cats in each frame? The reason I ask is because I don’t 
know what you mean by “each 5 fsp” which I interpreted as a typo of “5 
FPS” so I’m a bit confused on what you are trying to accomplish.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-457149" onclick='return addComment.moveForm( "comment-457149", "457149", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-457287"></a>
	      	
	      	<div id="li-comment-457287" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/06e92a6644228c980e8abd23837278b8.jpg" srcset="https://secure.gravatar.com/avatar/06e92a6644228c980e8abd23837278b8?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href="http://cms.co.in/" rel="external nofollow" class="url">Mamta</a></span>           
	                <span class="date">April 18, 2018 at 3:15 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-457287" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-457287">
				
				<p>Hi,<br>
I am trying to run your code on the nvidia jetson setup. The code only 
uses CPU and the GPU utilization is zero. the fps is only 5</p>
<p>1. Can you tell me if there is a way to assign specific tasks ( like inference ) to GPU using opencv ? </p>
<p>Thanks</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-457287" onclick='return addComment.moveForm( "comment-457287", "457287", "respond", "6092" )' aria-label="Reply to Mamta">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2 parent">
	    
	    	<a name="comment-457373"></a>
	      	
	      	<div id="li-comment-457373" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">April 18, 2018 at 2:55 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-457373" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-457373">
				
				<p>This may be a silly question, but I assume you compiled OpenCV with GPU and OpenCL support already?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-457373" onclick='return addComment.moveForm( "comment-457373", "457373", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-3 parent">
	    
	    	<a name="comment-457598"></a>
	      	
	      	<div id="li-comment-457598" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/06e92a6644228c980e8abd23837278b8.jpg" srcset="https://secure.gravatar.com/avatar/06e92a6644228c980e8abd23837278b8?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href="http://cms.co.in/" rel="external nofollow" class="url">Mamta</a></span>           
	                <span class="date">April 20, 2018 at 6:50 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-457598" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-457598">
				
				<p>Yes.. compiled with both gpu and opencl support.<br>
If I use SSD mobilenet in tensorflow and opencv, the GPUs are utilized to maximum capacity. </p>
<p>Is there an option to set/enable GPU for inferences ?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-457598" onclick='return addComment.moveForm( "comment-457598", "457598", "respond", "6092" )' aria-label="Reply to Mamta">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-4">
	    
	    	<a name="comment-457617"></a>
	      	
	      	<div id="li-comment-457617" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">April 20, 2018 at 9:36 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-457617" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-457617">
				
				<p>My understanding (which could be incorrect) is that OpenCL should
 help determine the most optimized way to run the code. Perhaps my 
understanding is incorrect. In that case I would suggest opening an 
issue on the <a target="blank" href="https://github.com/opencv/opencv/issues" rel="nofollow">official OpenCV GitHub page</a>. Once you do, definitely post the link back so others, myself included, can learn from it.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-457617" onclick='return addComment.moveForm( "comment-457617", "457617", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-457467"></a>
	      	
	      	<div id="li-comment-457467" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/12b92d4870e2a204737e7215403a6a5b.jpg" srcset="https://secure.gravatar.com/avatar/12b92d4870e2a204737e7215403a6a5b?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">AGarg</span>           
	                <span class="date">April 19, 2018 at 10:13 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-457467" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-457467">
				
				<p>Hello,</p>
<p>Really useful article, I was all setup in one day!</p>
<p>SSD seems to reduce the confidence levels for small sized objects any suggestion to improve this.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-457467" onclick='return addComment.moveForm( "comment-457467", "457467", "respond", "6092" )' aria-label="Reply to AGarg">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-457637"></a>
	      	
	      	<div id="li-comment-457637" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">April 20, 2018 at 10:06 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-457637" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-457637">
				
				<p>There are a few ways to handle small-sized objects with SSDs. The
 “hack” recommended by the others is to increase the resolution of the 
image passed into the network. This will slow down inference time but 
will help when detecting smaller objects.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-457637" onclick='return addComment.moveForm( "comment-457637", "457637", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-458350"></a>
	      	
	      	<div id="li-comment-458350" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/47d2c6d336621b92da5eed620c096fd8.jpg" srcset="https://secure.gravatar.com/avatar/47d2c6d336621b92da5eed620c096fd8?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Lee</span>           
	                <span class="date">April 24, 2018 at 1:30 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-458350" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-458350">
				
				<p>Hi Adrian, this is a really nice article. Any suggestions to add 
more classes inside the model so that we can detect more object?</p>
<p>thank you if you can answer my questions.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-458350" onclick='return addComment.moveForm( "comment-458350", "458350", "respond", "6092" )' aria-label="Reply to Lee">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-458604"></a>
	      	
	      	<div id="li-comment-458604" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">April 25, 2018 at 5:53 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-458604" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-458604">
				
				<p>Hey Lee, I would suggest skimming the comments as I’ve addressed 
how to add more networks to the model. The gist is that you have two 
options:</p>
<p>1. Train a network from scratch<br>
2. Apply fine-tuning</p>
<p>I cover both inside <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python</a>.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-458604" onclick='return addComment.moveForm( "comment-458604", "458604", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-458398"></a>
	      	
	      	<div id="li-comment-458398" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/2d07c198d002a7ab05e11798a66219df.jpg" srcset="https://secure.gravatar.com/avatar/2d07c198d002a7ab05e11798a66219df?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">beta farhan</span>           
	                <span class="date">April 24, 2018 at 6:40 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-458398" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-458398">
				
				<p>hello adryan,how can i training my data ? example i will train my book object.. thank you</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-458398" onclick='return addComment.moveForm( "comment-458398", "458398", "respond", "6092" )' aria-label="Reply to beta farhan">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-458594"></a>
	      	
	      	<div id="li-comment-458594" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">April 25, 2018 at 5:44 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-458594" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-458594">
				
				<p>Hey Beta, it’s awesome to hear that you would like to train your 
own custom deep learning object detector. I actually cover how to train 
your own deep learning object detectors inside <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python</a>. I would suggest starting there.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-458594" onclick='return addComment.moveForm( "comment-458594", "458594", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-458866"></a>
	      	
	      	<div id="li-comment-458866" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/22680f3d6822528385913f297fc58650.png" srcset="https://secure.gravatar.com/avatar/22680f3d6822528385913f297fc58650?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href="http://yadullah.piware.tech/" rel="external nofollow" class="url">Yadullah Abidi</a></span>           
	                <span class="date">April 26, 2018 at 4:08 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-458866" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-458866">
				
				<p>Hey Adrian!</p>
<p>Any ideas on how can I “count” the number of detections? Let’s say I 
had 3 people walk into the frame from one side and exit from the other 
side, so how can I count those 3 people and like save that count to a 
variable?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-458866" onclick='return addComment.moveForm( "comment-458866", "458866", "respond", "6092" )' aria-label="Reply to Yadullah Abidi">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-459077"></a>
	      	
	      	<div id="li-comment-459077" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">April 28, 2018 at 6:11 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-459077" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-459077">
				
				<p>See my reply to “Ife Ade” on October 31, 2017.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-459077" onclick='return addComment.moveForm( "comment-459077", "459077", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-459028"></a>
	      	
	      	<div id="li-comment-459028" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/84f4ae92c6bf2161fe06294420629212.jpg" srcset="https://secure.gravatar.com/avatar/84f4ae92c6bf2161fe06294420629212?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Hari</span>           
	                <span class="date">April 27, 2018 at 11:53 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-459028" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-459028">
				
				<p>Hello adrian, how can i know the position of the object?<br>
example i will detection fire/flame. I will used the position and send it to servo and then pointed on that… </p>
<p>Thank you</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-459028" onclick='return addComment.moveForm( "comment-459028", "459028", "respond", "6092" )' aria-label="Reply to Hari">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-459065"></a>
	      	
	      	<div id="li-comment-459065" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">April 28, 2018 at 6:02 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-459065" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-459065">
				
				<p>Object detection will give you the (x, y)-coordinates of an 
object in a frame. Are you trying to move a servo for object tracking? 
If so, you can move the servo relative to where the object is moving. 
See <a target="blank" href="https://www.pyimagesearch.com/2015/09/21/opencv-track-object-movement/">this blog post</a> for more information.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-459065" onclick='return addComment.moveForm( "comment-459065", "459065", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-459265"></a>
	      	
	      	<div id="li-comment-459265" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/16357db56ffc6eb3c4bf17a5673fba6e.jpg" srcset="https://secure.gravatar.com/avatar/16357db56ffc6eb3c4bf17a5673fba6e?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Randy</span>           
	                <span class="date">April 29, 2018 at 4:01 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-459265" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-459265">
				
				<p>hello Adrian, I tried running the detection on local video file 
as the input using the opencv video capture function, however, faced 
some errors as mentioned below.</p>
<p>  File “C:\Users\Raghav\Anaconda3\lib\site-packages\imutils\convenience.py”, line 69, in resize<br>
    (h, w) = image.shape[:2]</p>
<p>AttributeError: ‘tuple’ object has no attribute ‘shape’</p>
<p>Your help would be highly appreciated. Thanks</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-459265" onclick='return addComment.moveForm( "comment-459265", "459265", "respond", "6092" )' aria-label="Reply to Randy">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-459772"></a>
	      	
	      	<div id="li-comment-459772" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">May 3, 2018 at 10:17 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-459772" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-459772">
				
				<p>OpenCV is unable to access your webcam. See <a target="blank" href="https://www.pyimagesearch.com/2016/12/26/opencv-resolving-nonetype-errors/">this blog post</a> for more information on “NoneType” errors.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-459772" onclick='return addComment.moveForm( "comment-459772", "459772", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-459282"></a>
	      	
	      	<div id="li-comment-459282" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/68528d6015025c0688554cfc2f061270.jpg" srcset="https://secure.gravatar.com/avatar/68528d6015025c0688554cfc2f061270?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">ghiz</span>           
	                <span class="date">April 29, 2018 at 8:36 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-459282" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-459282">
				
				<p>hello</p>
<p>i used arducam mini 2mp it is working for this?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-459282" onclick='return addComment.moveForm( "comment-459282", "459282", "respond", "6092" )' aria-label="Reply to ghiz">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-459363"></a>
	      	
	      	<div id="li-comment-459363" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">April 30, 2018 at 12:46 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-459363" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-459363">
				
				<p>I’ve heard that Arducam is making Raspberry Pi compatible cameras
 due to demand, but that’s all I know. I haven’t tried any of the 
Arducam cameras with my Raspberry Pi.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-459363" onclick='return addComment.moveForm( "comment-459363", "459363", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-459299"></a>
	      	
	      	<div id="li-comment-459299" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/e492f16ab2b13bb756f34dba8ebf5389.jpg" srcset="https://secure.gravatar.com/avatar/e492f16ab2b13bb756f34dba8ebf5389?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Tamer</span>           
	                <span class="date">April 30, 2018 at 2:15 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-459299" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-459299">
				
				<p>Hi Adrian, I tried to use bvlc_googlenet because i wanted to 
detect a soccer ball because i am making robo-keeper for my graduation 
project and i want to detect the ball through each frame and it`s 
Co-ordinates but it gives me an error ” Can’t open 
“bvlc_googlenet.prototxt”</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-459299" onclick='return addComment.moveForm( "comment-459299", "459299", "respond", "6092" )' aria-label="Reply to Tamer">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-459360"></a>
	      	
	      	<div id="li-comment-459360" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">April 30, 2018 at 12:37 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-459360" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-459360">
				
				<p>Double check the filepath for your <code>.prototxt</code> file. 
That’s my best guess. I’ve also heard of cases where the prototxt needs 
to be modified to be compatible with OpenCV’s DNN module.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-459360" onclick='return addComment.moveForm( "comment-459360", "459360", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-459820"></a>
	      	
	      	<div id="li-comment-459820" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/e492f16ab2b13bb756f34dba8ebf5389.jpg" srcset="https://secure.gravatar.com/avatar/e492f16ab2b13bb756f34dba8ebf5389?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href="http://none/" rel="external nofollow" class="url">Tamer</a></span>           
	                <span class="date">May 3, 2018 at 7:59 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-459820" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-459820">
				
				<p>can i try it with googlenet model and sustain the sliding window?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-459820" onclick='return addComment.moveForm( "comment-459820", "459820", "respond", "6092" )' aria-label="Reply to Tamer">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-460698"></a>
	      	
	      	<div id="li-comment-460698" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">May 9, 2018 at 10:40 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-460698" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-460698">
				
				<p>Yes, you can use the traditional sliding window + image pyramid technique. I cover how to perform this inside <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python</a>.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-460698" onclick='return addComment.moveForm( "comment-460698", "460698", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-460155"></a>
	      	
	      	<div id="li-comment-460155" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/43534a58e821db29ef246b52e26eb06b.jpg" srcset="https://secure.gravatar.com/avatar/43534a58e821db29ef246b52e26eb06b?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Jahnavi</span>           
	                <span class="date">May 6, 2018 at 2:59 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-460155" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-460155">
				
				<p>Hey! Great post.</p>
<p>When i’m executing the code i’m getting an error –<br>
ImportError: No module named imutils.video</p>
<p>How do I rectify it?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-460155" onclick='return addComment.moveForm( "comment-460155", "460155", "respond", "6092" )' aria-label="Reply to Jahnavi">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-460675"></a>
	      	
	      	<div id="li-comment-460675" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">May 9, 2018 at 10:14 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-460675" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-460675">
				
				<p>Make sure you install the “imutils” library on your system:</p>
<p><code>$ pip install imutils</code></p>
<p>If you are using Python virtual environments do not forget to use the “workon” command to access the virtual environment first.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-460675" onclick='return addComment.moveForm( "comment-460675", "460675", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-460584"></a>
	      	
	      	<div id="li-comment-460584" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/5d05bb8c970a6d245a1c073f409b7677.jpg" srcset="https://secure.gravatar.com/avatar/5d05bb8c970a6d245a1c073f409b7677?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Ann</span>           
	                <span class="date">May 9, 2018 at 1:48 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-460584" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-460584">
				
				<p>Hi Adrian ,,<br>
This blog was just mindblowing.<br>
 I was thinking if I want to detect a cup , how should I train the model  ?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-460584" onclick='return addComment.moveForm( "comment-460584", "460584", "respond", "6092" )' aria-label="Reply to Ann">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-460646"></a>
	      	
	      	<div id="li-comment-460646" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">May 9, 2018 at 9:32 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-460646" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-460646">
				
				<p>Hi Ann — thanks for the comment. I’m so happy to hear you are 
enjoying the PyImageSearch blog! If you want to train your own model to 
detect a cup, I would recommend you:</p>
<p>1. Use <a target="blank" href="https://www.pyimagesearch.com/2018/04/09/how-to-quickly-build-a-deep-learning-image-dataset/">this blog post</a> to build your own deep learning dataset of “cup” images<br>
2. Follow the instructions inside <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python</a> to train your own deep learning object detector</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-460646" onclick='return addComment.moveForm( "comment-460646", "460646", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-460883"></a>
	      	
	      	<div id="li-comment-460883" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/fdac7cf3e7dd4f0acfbe14defa8e971b.jpg" srcset="https://secure.gravatar.com/avatar/fdac7cf3e7dd4f0acfbe14defa8e971b?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Sp</span>           
	                <span class="date">May 10, 2018 at 3:44 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-460883" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-460883">
				
				<p>Thanks,<br>
You’re really helping many to understand how deep learning works.<br>
I suggest that you should make a course on deep learning in Udemy.<br>
If you already have any course or youtube tutorials. Then plz tell me</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-460883" onclick='return addComment.moveForm( "comment-460883", "460883", "respond", "6092" )' aria-label="Reply to Sp">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-461563"></a>
	      	
	      	<div id="li-comment-461563" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">May 14, 2018 at 12:13 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-461563" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-461563">
				
				<p>I offer a book/complete self-study program on deep learning called <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python</a>. The book is sold through my website, PyImageSearch. Give it a look and let me know if you have any questions.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-461563" onclick='return addComment.moveForm( "comment-461563", "461563", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-461371"></a>
	      	
	      	<div id="li-comment-461371" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/95968c50077804fb9e2d0714f50df34a.jpg" srcset="https://secure.gravatar.com/avatar/95968c50077804fb9e2d0714f50df34a?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Ferdows</span>           
	                <span class="date">May 13, 2018 at 4:20 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-461371" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-461371">
				
				<p>Dear Adrian,<br>
I thank you a lot for such a nice learning environment.<br>
I have a question, How can I change this code to detect object from 
video file not live? I know your previous lectures are from file but 
they are not with deep learning.<br>
I tried a lot to do, but now it only open the video like picture and freez</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-461371" onclick='return addComment.moveForm( "comment-461371", "461371", "respond", "6092" )' aria-label="Reply to Ferdows">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-461544"></a>
	      	
	      	<div id="li-comment-461544" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">May 14, 2018 at 11:57 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-461544" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-461544">
				
				<p>You would need to use the <code>cv2.VideoCapture</code> class and supply the path to the input file. <a target="blank" href="https://www.pyimagesearch.com/2017/02/06/faster-video-file-fps-with-cv2-videocapture-and-opencv/">Here is an example</a> of reading frames from a video file. I hope that helps!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-461544" onclick='return addComment.moveForm( "comment-461544", "461544", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-461450"></a>
	      	
	      	<div id="li-comment-461450" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/e8aa3ebd5dcaf11b1889756a1eec7c81.jpg" srcset="https://secure.gravatar.com/avatar/e8aa3ebd5dcaf11b1889756a1eec7c81?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Brandon</span>           
	                <span class="date">May 14, 2018 at 3:32 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-461450" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-461450">
				
				<p>Hi Adrian,</p>
<p>First off I’d like to thank you for your wonderful tutorials. It is 
very helpful for a python and opencv beginner like myself (computer 
programming beginner actually).</p>
<p>I’d like to ask a question about this code… Specifically about its usage with pre-recorded videos rather than live stream.</p>
<p>I am trying to run the code to detect a 40 second test video… however
 it is taking approximately 5 minutes for it to process (it appears to 
slow down the video in order to detect it). At first I thought it’d be 
harder for the code to detect a livestream rather than a pre-recorded 
video; however, obviously this is not the case, as you’ve proved it can 
detect livestream videos in real time. Can you explain why this may be 
so? Both my webcam and test videos are 30FPS, 1280w/720h resolution, so I
 had expected that the recorded video would have ran the same if not 
faster. </p>
<p>Note: For clarification, I have read the comments on your other 
tutorial on the “faster video processing with threading”, however, I am 
on the newer version of python/openCV and the “slow” cv2.videocapture is
 faster.</p>
<p>I hope to get a reply on this likely very beginner question.</p>
<p>Kind regards</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-461450" onclick='return addComment.moveForm( "comment-461450", "461450", "respond", "6092" )' aria-label="Reply to Brandon">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-461537"></a>
	      	
	      	<div id="li-comment-461537" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">May 14, 2018 at 11:51 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-461537" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-461537">
				
				<p>It’s actually not always the cause that processing a recorded 
video will be faster. Recorded videos are normally compressed in some 
manner and depending on which video codec you are using and which video 
libraries you have installed it may actually take longer to process a 
video file rather than a true video stream. Without knowing what file 
format or your system configuring I’m unfortunately not able to give 
further advice but I hope that at least points you in the right 
direction.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-461537" onclick='return addComment.moveForm( "comment-461537", "461537", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-461509"></a>
	      	
	      	<div id="li-comment-461509" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/7b40a753259c038d530761b5e160e29f.jpg" srcset="https://secure.gravatar.com/avatar/7b40a753259c038d530761b5e160e29f?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Aagam</span>           
	                <span class="date">May 14, 2018 at 9:47 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-461509" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-461509">
				
				<p>Hello Adrian – Great post! I want to add some other objects like 
Phone, laptop, ball, … etc. Does it require some other model. Which 
model I should use? If I have this datasets than how I trained it?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-461509" onclick='return addComment.moveForm( "comment-461509", "461509", "respond", "6092" )' aria-label="Reply to Aagam">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-461533"></a>
	      	
	      	<div id="li-comment-461533" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">May 14, 2018 at 11:44 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-461533" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-461533">
				
				<p>Hi Aagam — please refer to <a target="blank" href="https://www.pyimagesearch.com/2018/05/14/a-gentle-guide-to-deep-learning-object-detection/">this blog post on deep learning object detection</a> to get you started. From there, I would suggest working through <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python</a> where I discuss how to train your own deep learning object detectors in detail.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-461533" onclick='return addComment.moveForm( "comment-461533", "461533", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-461944"></a>
	      	
	      	<div id="li-comment-461944" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/097f65f909c08305929ebb7621d83d01.jpg" srcset="https://secure.gravatar.com/avatar/097f65f909c08305929ebb7621d83d01?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Ajay</span>           
	                <span class="date">May 16, 2018 at 4:45 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-461944" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-461944">
				
				<p>Hi Sir, After downloading code, I run “python 
real_time_object_detection.py –prototxt MobileNetSSD_deploy.prototxt.txt
 –model MobileNetSSD_deploy.caffemodel” command in cmd. It opens webcam 
and recognizing object but in green frame. My webcam working fine while 
accessing normally but showing green frame while running the code.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-461944" onclick='return addComment.moveForm( "comment-461944", "461944", "respond", "6092" )' aria-label="Reply to Ajay">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2 parent">
	    
	    	<a name="comment-462246"></a>
	      	
	      	<div id="li-comment-462246" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">May 17, 2018 at 6:58 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-462246" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-462246">
				
				<p>Hey Ajay, that sounds like a driver issue with your webcam/a 
problem with OpenCV accessing your webcam. Since your webcam is working 
normally it’s most likely an OpenCV-specific issue. What model of webcam
 are you using and on which OS?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-462246" onclick='return addComment.moveForm( "comment-462246", "462246", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-3 parent">
	    
	    	<a name="comment-462543"></a>
	      	
	      	<div id="li-comment-462543" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/097f65f909c08305929ebb7621d83d01.jpg" srcset="https://secure.gravatar.com/avatar/097f65f909c08305929ebb7621d83d01?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Ajay</span>           
	                <span class="date">May 18, 2018 at 5:56 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-462543" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-462543">
				
				<p>Hi Sir, I am using Intel RealSense 3D camera which comes in-built with my windows 10 based lenovo laptop. Thanks !</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-462543" onclick='return addComment.moveForm( "comment-462543", "462543", "respond", "6092" )' aria-label="Reply to Ajay">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-4 parent">
	    
	    	<a name="comment-463362"></a>
	      	
	      	<div id="li-comment-463362" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">May 22, 2018 at 6:44 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-463362" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-463362">
				
				<p>Sorry, I’m not familiar with the Intel RealSense 3D camera. I 
would suggest contacting Intel support or posting on their developer 
forums. Sorry I couldn’t be of more help here!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-463362" onclick='return addComment.moveForm( "comment-463362", "463362", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-5">
	    
	    	<a name="comment-463446"></a>
	      	
	      	<div id="li-comment-463446" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/097f65f909c08305929ebb7621d83d01.jpg" srcset="https://secure.gravatar.com/avatar/097f65f909c08305929ebb7621d83d01?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Ajay</span>           
	                <span class="date">May 22, 2018 at 12:51 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-463446" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-463446">
				
				<p>It’s okay, anyway your blogs are too good on Computer Vision and Neural Networks. Thanks for the help 🙂</p>
		            
										
	                <div class="reply">
	                    	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-462125"></a>
	      	
	      	<div id="li-comment-462125" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/2662bea53cd15440036ad7e8dc56add7.jpg" srcset="https://secure.gravatar.com/avatar/2662bea53cd15440036ad7e8dc56add7?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Bob Inventor</span>           
	                <span class="date">May 16, 2018 at 9:56 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-462125" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-462125">
				
				<p>hi, what do I have to do to get the code to only detect one 
object. For example, bird. I have tried deleting the classes but get 
errors and am unsure what to do. </p>
<p>All I want to detect is bird.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-462125" onclick='return addComment.moveForm( "comment-462125", "462125", "respond", "6092" )' aria-label="Reply to Bob Inventor">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2 parent">
	    
	    	<a name="comment-462233"></a>
	      	
	      	<div id="li-comment-462233" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">May 17, 2018 at 6:45 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-462233" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-462233">
				
				<p><a target="blank" href="https://www.pyimagesearch.com/2018/05/14/a-gentle-guide-to-deep-learning-object-detection/">This blog post</a> will solve your exact problem. 🙂</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-462233" onclick='return addComment.moveForm( "comment-462233", "462233", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-3 parent">
	    
	    	<a name="comment-462792"></a>
	      	
	      	<div id="li-comment-462792" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/2662bea53cd15440036ad7e8dc56add7.jpg" srcset="https://secure.gravatar.com/avatar/2662bea53cd15440036ad7e8dc56add7?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Zack Inventor</span>           
	                <span class="date">May 19, 2018 at 1:02 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-462792" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-462792">
				
				<p>Thanks! What I am doing is checking to see if ‘bird’ is detected.
 So even if I ignore all other objects, they are still apart of the 
CLASSES[idx] so if I do </p>
<p>If CLASSES[idx] == “bird”:</p>
<p>bird is only detected when it is the only thing in the camera view. </p>
<p>If I put a picture a car next to it, It only detects the bird on 
screen it does not print ‘bird detected’ because it sees the car as 
well. </p>
<p>Is there a way so that the only thing possible is “Bird”?</p>
<p>thanks!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-462792" onclick='return addComment.moveForm( "comment-462792", "462792", "respond", "6092" )' aria-label="Reply to Zack Inventor">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-4">
	    
	    	<a name="comment-463341"></a>
	      	
	      	<div id="li-comment-463341" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">May 22, 2018 at 6:19 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-463341" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-463341">
				
				<p>I think you have a problem with your implementation of class 
filtering. The code in the post I linked to above will enable you to 
ignore all classes except the ones that you want. Make sure you are 
using the “Downloads” section of the blog post to download the code 
rather than implementing it on your own.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-463341" onclick='return addComment.moveForm( "comment-463341", "463341", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-462627"></a>
	      	
	      	<div id="li-comment-462627" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/cefb26c4bd803f884d07f55e45e3a8d0.jpg" srcset="https://secure.gravatar.com/avatar/cefb26c4bd803f884d07f55e45e3a8d0?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">vishakraj</span>           
	                <span class="date">May 18, 2018 at 3:31 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-462627" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-462627">
				
				<p>usage: real_time_object_detection.py [-h] -p PROTOTXT -m MODEL [-c CONFIDENCE]<br>
real_time_object_detection.py: error: unrecognized arguments: caffemodel<br>
what to do..<br>
thanks in advance</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-462627" onclick='return addComment.moveForm( "comment-462627", "462627", "respond", "6092" )' aria-label="Reply to vishakraj">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-463357"></a>
	      	
	      	<div id="li-comment-463357" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">May 22, 2018 at 6:36 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-463357" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-463357">
				
				<p>Make sure you read <a target="blank" href="https://www.pyimagesearch.com/2018/03/12/python-argparse-command-line-arguments/">this blog post on command line arguments</a> — it will help you resolve the error.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-463357" onclick='return addComment.moveForm( "comment-463357", "463357", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-464070"></a>
	      	
	      	<div id="li-comment-464070" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/310eed4a36e995407db9cfec29a15abf.jpg" srcset="https://secure.gravatar.com/avatar/310eed4a36e995407db9cfec29a15abf?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Dimuthu</span>           
	                <span class="date">May 24, 2018 at 11:02 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-464070" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-464070">
				
				<p>Dear Adrian,</p>
<p>Using tensorflow transfer learning I created my custom object 
detector. It’s work pretty well with the web cam but the problem is when
 I am run the code using the live feed from the IP cam it does not 
detect as expected.Kindly guide me to solve this problem.</p>
<p>By the way earlier there was a delay in live streaming  but thanks to
 your post Real time object detection with deep learining and opencv now
 there is no delay. ?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-464070" onclick='return addComment.moveForm( "comment-464070", "464070", "respond", "6092" )' aria-label="Reply to Dimuthu">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-464156"></a>
	      	
	      	<div id="li-comment-464156" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">May 25, 2018 at 5:46 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-464156" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-464156">
				
				<p>You should be able to take Line 35:</p>
<p><code>vs = VideoStream(src=0).start()</code></p>
<p>And modify it to be:</p>
<p><code>vs = VideoStream(src="rtsp://192.168.1.2:8080/out.h264").start()</code></p>
<p>Under the hood VideoStream is threading the <code>cv2.VideoCapture</code> object so you’ll want to research the <code>cv2.VideoCapture</code> function and whatever particular stream you are using.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-464156" onclick='return addComment.moveForm( "comment-464156", "464156", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-468019"></a>
	      	
	      	<div id="li-comment-468019" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/135fc705732b09d5c7d420b4d3fcda3a.jpg" srcset="https://secure.gravatar.com/avatar/135fc705732b09d5c7d420b4d3fcda3a?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Devrim Ayyildiz</span>           
	                <span class="date">June 13, 2018 at 9:13 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-468019" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-468019">
				
				<p>Hi Adrian,</p>
<p>First of all thank you for your excellent tutorials. I am new to 
python and completely rookie for the concepts of image recognition, deep
 learning, etc. Despite that I was able to somewhat follow your code and
 get it running on my Ubuntu VM with a USB camera in a few hours. This 
is really great and motivating.</p>
<p>My goal is to get this setup running on a RaspberryPI board with a 
USB camera and what I want to do is to control a dog repellent circuit 
when the python program detects a dog (which will be my dog at home that
 I don’t want near our main door as she scratches it when I leave her 
alone). Probably your code will work just fine to meet my goal, but what
 I had in my mind in the beginning was to train a simple model with some
 images (or video) of my dog only so that I will have a very limited 
trained set for one target (i.e. my dog). It will be enough if the 
algorithm just detects my dog and does not care about detecting any 
other objects.</p>
<p>Is there a lightweight (that will run on a raspberryPI board) library
 that I can use to train a basic model? I may be using the terminology 
wrong here, but I hope I was able to make myself clear. </p>
<p>Thanks again!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-468019" onclick='return addComment.moveForm( "comment-468019", "468019", "respond", "6092" )' aria-label="Reply to Devrim Ayyildiz">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-468210"></a>
	      	
	      	<div id="li-comment-468210" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">June 15, 2018 at 12:42 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-468210" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-468210">
				
				<p>There lots of models that can run on the Raspberry Pi, ranging 
from simple “toy” models for educational purposes all the way up to 
state-of-the-art networks like SqueezeNet and MobileNet. My suggestion 
would be to start with <a target="blank" href="https://www.pyimagesearch.com/2018/04/16/keras-and-convolutional-neural-networks-cnns/">this post</a> to train your own model. From there you should go through <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python</a> to learn how to train more advanced methods. I hope that helps point you in the right direction!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-468210" onclick='return addComment.moveForm( "comment-468210", "468210", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-468166"></a>
	      	
	      	<div id="li-comment-468166" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/21c5c6c5cb88716fd25011dc5b59a6b9.jpg" srcset="https://secure.gravatar.com/avatar/21c5c6c5cb88716fd25011dc5b59a6b9?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">HSU</span>           
	                <span class="date">June 15, 2018 at 7:47 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-468166" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-468166">
				
				<p>When i run it , i found this error.<br>
 Can you kindly give advise for it.</p>
<p>usage: real_time_object_detection.py [-h] -p PROTOTXT -m MODEL [-c CONFIDENCE]<br>
real_time_object_detection.py: error: the following arguments are required: -p/–prototxt, -m/–model</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-468166" onclick='return addComment.moveForm( "comment-468166", "468166", "respond", "6092" )' aria-label="Reply to HSU">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-468187"></a>
	      	
	      	<div id="li-comment-468187" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">June 15, 2018 at 12:00 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-468187" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-468187">
				
				<p>Make sure you read <a target="blank" href="https://www.pyimagesearch.com/2018/03/12/python-argparse-command-line-arguments/">this blog post on command line arguments</a> — it will help you resolve the error.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-468187" onclick='return addComment.moveForm( "comment-468187", "468187", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-468332"></a>
	      	
	      	<div id="li-comment-468332" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/c6b64f6f44744854e2c486efd24e2ee5.jpg" srcset="https://secure.gravatar.com/avatar/c6b64f6f44744854e2c486efd24e2ee5?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Denis</span>           
	                <span class="date">June 17, 2018 at 4:58 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-468332" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-468332">
				
				<p>Hi Adrian,<br>
When I run the code (using Spyder on Windows), I got SystemExit: 2. I 
understood that it had something to do with argparse module. </p>
<p>What I did is simply downloaded your code, opened it in Anaconda’s 
Spyder, and then run it.Is there anything else I should be running along
 with main code that I downloaded, or is there some blatant mistake that
 I might be making here?<br>
Thanks.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-468332" onclick='return addComment.moveForm( "comment-468332", "468332", "respond", "6092" )' aria-label="Reply to Denis">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-2 parent">
	    
	    	<a name="comment-468334"></a>
	      	
	      	<div id="li-comment-468334" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/c6b64f6f44744854e2c486efd24e2ee5.jpg" srcset="https://secure.gravatar.com/avatar/c6b64f6f44744854e2c486efd24e2ee5?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Denis</span>           
	                <span class="date">June 17, 2018 at 5:31 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-468334" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-468334">
				
				<p>Hi Adrian, </p>
<p>Sorry to spam this comment section. I found the problem and fixed it 
(it was the argparse module). These two comments by me should probably 
be removed from thread as they are do not contribute to anything.<br>
Thanks!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-468334" onclick='return addComment.moveForm( "comment-468334", "468334", "respond", "6092" )' aria-label="Reply to Denis">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-3">
	    
	    	<a name="comment-468546"></a>
	      	
	      	<div id="li-comment-468546" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">June 19, 2018 at 8:49 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-468546" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-468546">
				
				<p>Congrats on resolving the issue, Denis. I think the comments should stay as other readers may have this question as well.</p>
<p>I would recommend those reading this comment to <a target="blank" href="https://www.pyimagesearch.com/2018/03/12/python-argparse-command-line-arguments/">read up on command line arguments</a> as they can avoid any headaches if you are running into errors with them.</p>
<p>Thanks again, Denis! 🙂</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-468546" onclick='return addComment.moveForm( "comment-468546", "468546", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-468686"></a>
	      	
	      	<div id="li-comment-468686" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/5b23725e0cc52e8b17039fdef185fafc.jpg" srcset="https://secure.gravatar.com/avatar/5b23725e0cc52e8b17039fdef185fafc?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Rusiru</span>           
	                <span class="date">June 20, 2018 at 10:08 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-468686" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-468686">
				
				<p>I just want to say THANK YOU !!!!!!!!!!!!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-468686" onclick='return addComment.moveForm( "comment-468686", "468686", "respond", "6092" )' aria-label="Reply to Rusiru">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-468719"></a>
	      	
	      	<div id="li-comment-468719" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">June 20, 2018 at 4:00 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-468719" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-468719">
				
				<p>And thank you Rusiru for being a PyImageSearch reader 🙂</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-468719" onclick='return addComment.moveForm( "comment-468719", "468719", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-469086"></a>
	      	
	      	<div id="li-comment-469086" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/1354db63d5afa7eb4e03aec5d638df66.jpg" srcset="https://secure.gravatar.com/avatar/1354db63d5afa7eb4e03aec5d638df66?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Chami</span>           
	                <span class="date">June 24, 2018 at 9:48 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-469086" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-469086">
				
				<p>Sir can you please tell me how to modify this code to only detect persons.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-469086" onclick='return addComment.moveForm( "comment-469086", "469086", "respond", "6092" )' aria-label="Reply to Chami">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2 parent">
	    
	    	<a name="comment-469150"></a>
	      	
	      	<div id="li-comment-469150" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">June 25, 2018 at 1:46 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-469150" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-469150">
				
				<p>See <a target="blank" href="https://www.pyimagesearch.com/2018/05/14/a-gentle-guide-to-deep-learning-object-detection/">this blog post</a>.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-469150" onclick='return addComment.moveForm( "comment-469150", "469150", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-3 parent">
	    
	    	<a name="comment-469490"></a>
	      	
	      	<div id="li-comment-469490" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/416eea748b6227c6a3633186b66b7720.jpg" srcset="https://secure.gravatar.com/avatar/416eea748b6227c6a3633186b66b7720?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Chami</span>           
	                <span class="date">June 29, 2018 at 9:22 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-469490" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-469490">
				
				<p>Thank you sir. Can we use caffe model to track objects as well?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-469490" onclick='return addComment.moveForm( "comment-469490", "469490", "respond", "6092" )' aria-label="Reply to Chami">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-4">
	    
	    	<a name="comment-469870"></a>
	      	
	      	<div id="li-comment-469870" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">July 3, 2018 at 8:50 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-469870" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-469870">
				
				<p>Deep learning-based object tracking algorithms do exist but I 
would suggest taking a look at correlation filters to get you started.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-469870" onclick='return addComment.moveForm( "comment-469870", "469870", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-469419"></a>
	      	
	      	<div id="li-comment-469419" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/e5c18a8e05c3b6e8b96d98c126222f7f.jpg" srcset="https://secure.gravatar.com/avatar/e5c18a8e05c3b6e8b96d98c126222f7f?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">MachineLearner</span>           
	                <span class="date">June 28, 2018 at 2:09 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-469419" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-469419">
				
				<p>Great Tutorial! Is this tutorial for R-CNN? If not do you know how can I build an image detector using R-CNN?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-469419" onclick='return addComment.moveForm( "comment-469419", "469419", "respond", "6092" )' aria-label="Reply to MachineLearner">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-469875"></a>
	      	
	      	<div id="li-comment-469875" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">July 3, 2018 at 8:57 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-469875" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-469875">
				
				<p>The method used here is a Single Shot Detector (SSD). I will have a Faster R-CNN example soon.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-469875" onclick='return addComment.moveForm( "comment-469875", "469875", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-470697"></a>
	      	
	      	<div id="li-comment-470697" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/65f47e109007ecb8ffbcfc0f97d144c8.jpg" srcset="https://secure.gravatar.com/avatar/65f47e109007ecb8ffbcfc0f97d144c8?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Olapade Abdul-Azeez</span>           
	                <span class="date">July 10, 2018 at 8:02 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-470697" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-470697">
				
				<p>please how can i use already recorded video as input instead of webcam</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-470697" onclick='return addComment.moveForm( "comment-470697", "470697", "respond", "6092" )' aria-label="Reply to Olapade Abdul-Azeez">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-470940"></a>
	      	
	      	<div id="li-comment-470940" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">July 13, 2018 at 5:30 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-470940" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-470940">
				
				<p>You can use the “cv2.VideoCapture” or “FileVideoStream” functions. Refer to <a target="blank" href="https://www.pyimagesearch.com/2017/02/06/faster-video-file-fps-with-cv2-videocapture-and-opencv/">this tutorial</a>.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-470940" onclick='return addComment.moveForm( "comment-470940", "470940", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-470857"></a>
	      	
	      	<div id="li-comment-470857" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/9e74df1d54aa6d12658fea1c9a932bf5.jpg" srcset="https://secure.gravatar.com/avatar/9e74df1d54aa6d12658fea1c9a932bf5?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Khaw Oat</span>           
	                <span class="date">July 12, 2018 at 1:32 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-470857" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-470857">
				
				<p>How can I create a caffe model?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-470857" onclick='return addComment.moveForm( "comment-470857", "470857", "respond", "6092" )' aria-label="Reply to Khaw Oat">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-470912"></a>
	      	
	      	<div id="li-comment-470912" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">July 13, 2018 at 5:01 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-470912" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-470912">
				
				<p>Training your own Caffe model is not exactly an easy process, and
 furthermore, there seems to be a lot of misconceptions in the comments 
of this post on how object detection actually works. You should start by
 <a target="blank" href="https://www.pyimagesearch.com/2018/05/14/a-gentle-guide-to-deep-learning-object-detection/">reading this post</a> which covers deep learning object detection fundamentals and then provides resources to help you train your models.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-470912" onclick='return addComment.moveForm( "comment-470912", "470912", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-471317"></a>
	      	
	      	<div id="li-comment-471317" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/4e56a36b21a19b958ffabee0bd89b729.jpg" srcset="https://secure.gravatar.com/avatar/4e56a36b21a19b958ffabee0bd89b729?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href="http://www.vpath.uy/" rel="external nofollow" class="url">Daniel Gonzalez</a></span>           
	                <span class="date">July 17, 2018 at 4:26 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-471317" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-471317">
				
				<p>Hello how are you? Could you tell me how to enlarge the size of the video window? She is very young in my macbook pro.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-471317" onclick='return addComment.moveForm( "comment-471317", "471317", "respond", "6092" )' aria-label="Reply to Daniel Gonzalez">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-471538"></a>
	      	
	      	<div id="li-comment-471538" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">July 20, 2018 at 6:50 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-471538" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-471538">
				
				<p>OpenCV provides very limited GUI functionality. There is no 
ability to resize the window or move it around. You could use the 
“cv2.imresize” function to enlarge the output image prior to displaying 
it.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-471538" onclick='return addComment.moveForm( "comment-471538", "471538", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1">
	    
	    	<a name="comment-471346"></a>
	      	
	      	<div id="li-comment-471346" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/bbd4faae0c705dc4dbe960a13dd6bdff.jpg" srcset="https://secure.gravatar.com/avatar/bbd4faae0c705dc4dbe960a13dd6bdff?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Hashir</span>           
	                <span class="date">July 18, 2018 at 1:30 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-471346" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-471346">
				
				<p>hi bro,<br>
 can i use my own yolo weight datasets for detecting object in opencv</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-471346" onclick='return addComment.moveForm( "comment-471346", "471346", "respond", "6092" )' aria-label="Reply to Hashir">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-472068"></a>
	      	
	      	<div id="li-comment-472068" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/9d4001a03b240d76fbc8c6a1220688bd.jpg" srcset="https://secure.gravatar.com/avatar/9d4001a03b240d76fbc8c6a1220688bd?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Dhruv Chamania</span>           
	                <span class="date">July 25, 2018 at 11:52 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-472068" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-472068">
				
				<p>I have a doubt about fps, will me running this code just for just
 a image(single frame)and the fps that it will receive, will the same as
 the fps for a video stream.<br>
In theory it should be right?</p>
<p>Want to try and test for different inference boards the fps 
performance, and in for one of the boards, I am not able to establish a 
video stream, thats why the doubt.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-472068" onclick='return addComment.moveForm( "comment-472068", "472068", "respond", "6092" )' aria-label="Reply to Dhruv Chamania">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-472619"></a>
	      	
	      	<div id="li-comment-472619" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">July 31, 2018 at 12:13 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-472619" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-472619">
				
				<p>It will give you an approximation but I would suggest running for
 at least 30 frames to obtain a more reasonable estimation. Another hack
 you could do is loop over the same image/frame 30 times within the FPS 
counter but keep in mind that won’t take into account any I/O latency 
from grabbing a new frame from the camera sensor.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-472619" onclick='return addComment.moveForm( "comment-472619", "472619", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-472282"></a>
	      	
	      	<div id="li-comment-472282" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/eec12df71fe67339f16a5a81df8c95d5.jpg" srcset="https://secure.gravatar.com/avatar/eec12df71fe67339f16a5a81df8c95d5?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">John</span>           
	                <span class="date">July 28, 2018 at 12:45 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-472282" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-472282">
				
				<p>Hi Adrian,<br>
Your tutorials have been nothing but amazing! Thank you for that.<br>
I am currently working on an autonomous vehicle design for platooning 
purposes with Raspberry Pi and Pi cam. It got me thinking on how can the
 autonomous vehicle(slave) detect the movement of the master vehicle 
(assuming master-slave configuration) which I am following while it’s 
curving, say about 60 degrees.<br>
Any idea on this? Thanks again</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-472282" onclick='return addComment.moveForm( "comment-472282", "472282", "respond", "6092" )' aria-label="Reply to John">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-472606"></a>
	      	
	      	<div id="li-comment-472606" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">July 31, 2018 at 11:58 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-472606" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-472606">
				
				<p>There are a few ways to approach this problem, but a potentially 
easy one would be to place an easily identifiable marker on the master 
and then detect the marker from the slave, that way it can be detected 
and tracked.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-472606" onclick='return addComment.moveForm( "comment-472606", "472606", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-472324"></a>
	      	
	      	<div id="li-comment-472324" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/d4c208917da587d6bdf3dd6f88fcaf1d.jpg" srcset="https://secure.gravatar.com/avatar/d4c208917da587d6bdf3dd6f88fcaf1d?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Brijesh</span>           
	                <span class="date">July 29, 2018 at 4:00 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-472324" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-472324">
				
				<p>Hi Adrian,</p>
<p>I want to run this real time object detection for input video and 
save output .But while running the script , I am getting following 
error.</p>
<p>…<br>
  File “real_time_people_detection.py”, line 50, in<br>
    (h, w) = frame.shape[:2]<br>
AttributeError: ‘NoneType’ object has no attribute ‘shape’</p>
<p>I have seen all query and separate blog you have written to resolve this issue.<br>
I have provided the correct path for my input video file , My system is 
Ubuntu 16.04 , I install codec ffmpeg and X264 and I reinstall opencv 
followed by your blog.But still I am facing the same issue and imshow 
and output video is very fast. I am using video file formate .mkv and 
.mp4. Below is the line of code I wrote for video output.</p>
<p>out = cv2.VideoWriter(‘output.mp4’,cv2.VideoWriter_fourcc(‘M’,’J’,’P’,’G’), 30, (640,480),True)</p>
<p>I also checked with below one.</p>
<p>fourcc = cv2.VideoWriter_fourcc(*’XVID’)<br>
out = cv2.VideoWriter(‘output1.avi’,fourcc, 30.0, (640,480))</p>
<p>I have seen all the solution that is discussed in your blog and other blog also to solve this problem but i didn’t get success.</p>
<p>Please help me to solve this.</p>
<p>Thanks in advance.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-472324" onclick='return addComment.moveForm( "comment-472324", "472324", "respond", "6092" )' aria-label="Reply to Brijesh">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-472604"></a>
	      	
	      	<div id="li-comment-472604" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">July 31, 2018 at 11:55 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-472604" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-472604">
				
				<p>Just to fully understand the problem — you used a separate Python
 script and the “cv2.VideoWriter” function to create an output video 
file and now you are trying to take that output video file and run it 
through a separate Python script?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-472604" onclick='return addComment.moveForm( "comment-472604", "472604", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-472793"></a>
	      	
	      	<div id="li-comment-472793" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/d9dbb96776e8e63323385e56b97d7d71.jpg" srcset="https://secure.gravatar.com/avatar/d9dbb96776e8e63323385e56b97d7d71?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">mayur ghevariya</span>           
	                <span class="date">August 2, 2018 at 7:40 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-472793" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-472793">
				
				<p>usage: real_time_object_detection.py [-h] -p PROTOTXT -m MODEL [-c CONFIDENCE]<br>
real_time_object_detection.py: error: the following arguments are required: -p/–prototxt, -m/–model<br>
An exception has occurred, use %tb to see the full traceback.</p>
<p>these are the error about model so where to add this model in spyder-anaconda</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-472793" onclick='return addComment.moveForm( "comment-472793", "472793", "respond", "6092" )' aria-label="Reply to mayur ghevariya">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-472805"></a>
	      	
	      	<div id="li-comment-472805" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">August 2, 2018 at 9:17 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-472805" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-472805">
				
				<p>Hey Mayur, make sure you are reading the comments to this blog 
post or at least doing a ctrl + f and searching for your error on the 
page. I’ve addressed the question a number of times. You need to provide
 the <a target="blank" href="https://www.pyimagesearch.com/2018/03/12/python-argparse-command-line-arguments/">command line arguments to the script.</a></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-472805" onclick='return addComment.moveForm( "comment-472805", "472805", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-472934"></a>
	      	
	      	<div id="li-comment-472934" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/94b7817b3fc32f86e6be03e8dc6a2f60.jpg" srcset="https://secure.gravatar.com/avatar/94b7817b3fc32f86e6be03e8dc6a2f60?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Mike Gibs</span>           
	                <span class="date">August 3, 2018 at 12:21 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-472934" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-472934">
				
				<p>Hello Sir,<br>
Your blogs are great but regarding this blog, I really need to ask 1 
question i.e How we can customize the model to train for the specific 
thing, for example, tanks etc</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-472934" onclick='return addComment.moveForm( "comment-472934", "472934", "respond", "6092" )' aria-label="Reply to Mike Gibs">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-473382"></a>
	      	
	      	<div id="li-comment-473382" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">August 7, 2018 at 7:03 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-473382" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-473382">
				
				<p>You would need to train or fine-tune a model. I discuss the fundamentals of <a target="blank" href="https://www.pyimagesearch.com/2018/05/14/a-gentle-guide-to-deep-learning-object-detection/">deep learning object detection here</a>. And when you’re ready to train your own model I would suggest working through <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python</a>.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-473382" onclick='return addComment.moveForm( "comment-473382", "473382", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-473235"></a>
	      	
	      	<div id="li-comment-473235" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/a2a53132153801678d20eafa8240dbaf.jpg" srcset="https://secure.gravatar.com/avatar/a2a53132153801678d20eafa8240dbaf?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Hassan Nawaz</span>           
	                <span class="date">August 6, 2018 at 10:10 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-473235" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-473235">
				
				<p>This blog is great ad it really works for me but I need to ask:<br>
How I used cifer 100 insteed of caffemodel?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-473235" onclick='return addComment.moveForm( "comment-473235", "473235", "respond", "6092" )' aria-label="Reply to Hassan Nawaz">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-473357"></a>
	      	
	      	<div id="li-comment-473357" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">August 7, 2018 at 6:39 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-473357" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-473357">
				
				<p>You would need to use a Caffe model already trained on CIFAR-100.
 Do you have such a model? If not, you would want to train your model on
 CIFAR-100 first.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-473357" onclick='return addComment.moveForm( "comment-473357", "473357", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1">
	    
	    	<a name="comment-473298"></a>
	      	
	      	<div id="li-comment-473298" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/cda86c4c9401db2e7319c8a6f5b292b9.jpg" srcset="https://secure.gravatar.com/avatar/cda86c4c9401db2e7319c8a6f5b292b9?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Sahil Makandar</span>           
	                <span class="date">August 7, 2018 at 12:08 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-473298" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-473298">
				
				<p>Hey Adrian, Can you please share regarding the pedestrian detection and vehicle in low light or night vision? Thank you.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-473298" onclick='return addComment.moveForm( "comment-473298", "473298", "respond", "6092" )' aria-label="Reply to Sahil Makandar">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-473652"></a>
	      	
	      	<div id="li-comment-473652" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/8da61ed9fa35cb912025c68e9bb96d5c.jpg" srcset="https://secure.gravatar.com/avatar/8da61ed9fa35cb912025c68e9bb96d5c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">usuf</span>           
	                <span class="date">August 9, 2018 at 1:42 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-473652" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-473652">
				
				<p>hi @Adrian Rosebrock</p>
<p>nice tutorial ,i have one question instead of detecting pretrained object</p>
<p> How can i develop my own model to detect my own object ?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-473652" onclick='return addComment.moveForm( "comment-473652", "473652", "respond", "6092" )' aria-label="Reply to usuf">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2 parent">
	    
	    	<a name="comment-473740"></a>
	      	
	      	<div id="li-comment-473740" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">August 9, 2018 at 2:46 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-473740" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-473740">
				
				<p>Hey Usuf — You should read <a target="blank" href="https://www.pyimagesearch.com/2018/05/14/a-gentle-guide-to-deep-learning-object-detection/">this post</a> to understand the fundamentals of deep learning object detection. Then take a look at <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python</a> where I demonstrate how to train your own custom learning object detectors. I hope that helps point you in the right direction!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-473740" onclick='return addComment.moveForm( "comment-473740", "473740", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-3">
	    
	    	<a name="comment-474134"></a>
	      	
	      	<div id="li-comment-474134" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/8da61ed9fa35cb912025c68e9bb96d5c.jpg" srcset="https://secure.gravatar.com/avatar/8da61ed9fa35cb912025c68e9bb96d5c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">usuf</span>           
	                <span class="date">August 13, 2018 at 6:06 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-474134" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-474134">
				
				<p>thanks for the hope</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-474134" onclick='return addComment.moveForm( "comment-474134", "474134", "respond", "6092" )' aria-label="Reply to usuf">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-474624"></a>
	      	
	      	<div id="li-comment-474624" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/4e3570e5d4e1a7f8b54425ddbfe609bd.jpg" srcset="https://secure.gravatar.com/avatar/4e3570e5d4e1a7f8b54425ddbfe609bd?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href="http://no/" rel="external nofollow" class="url">rick</a></span>           
	                <span class="date">August 17, 2018 at 2:53 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-474624" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-474624">
				
				<p>It is very impressive tutorial.<br>
It is very very useful.<br>
Thank you very much.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-474624" onclick='return addComment.moveForm( "comment-474624", "474624", "respond", "6092" )' aria-label="Reply to rick">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-474639"></a>
	      	
	      	<div id="li-comment-474639" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">August 17, 2018 at 7:13 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-474639" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-474639">
				
				<p>Thanks Rick, I’m glad you liked it 🙂</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-474639" onclick='return addComment.moveForm( "comment-474639", "474639", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-475060"></a>
	      	
	      	<div id="li-comment-475060" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/c2534816b9dccdf6140177cb18603b52.jpg" srcset="https://secure.gravatar.com/avatar/c2534816b9dccdf6140177cb18603b52?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Azzurro</span>           
	                <span class="date">August 21, 2018 at 9:48 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-475060" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475060">
				
				<p>Hello Adrian! </p>
<p>Congratulation for your nice job!</p>
<p>I would like to ask you if it’s possible to stream through wifi camera (url stream) instead of usb camera.</p>
<p>Thank you!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-475060" onclick='return addComment.moveForm( "comment-475060", "475060", "respond", "6092" )' aria-label="Reply to Azzurro">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-475146"></a>
	      	
	      	<div id="li-comment-475146" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">August 22, 2018 at 9:30 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-475146" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-475146">
				
				<p>Yes, OpenCV provides functionality for IP camera streaming via the <code>cv2.VideoCapture</code> function. I don’t have any tutorials that demonstrate how to do that (yet), but that should at least give you a starting point!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-475146" onclick='return addComment.moveForm( "comment-475146", "475146", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-476129"></a>
	      	
	      	<div id="li-comment-476129" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/33489542d9dd9e7e5b1f624afc0e6de4.jpg" srcset="https://secure.gravatar.com/avatar/33489542d9dd9e7e5b1f624afc0e6de4?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Afo</span>           
	                <span class="date">August 31, 2018 at 4:03 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-476129" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-476129">
				
				<p>Hey Adrian, awesome post it helps a lot. I am running at 1.25 fps anyway I can make it faster?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-476129" onclick='return addComment.moveForm( "comment-476129", "476129", "respond", "6092" )' aria-label="Reply to Afo">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-476740"></a>
	      	
	      	<div id="li-comment-476740" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 5, 2018 at 9:17 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-476740" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-476740">
				
				<p>What hardware are you running the object detector on?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-476740" onclick='return addComment.moveForm( "comment-476740", "476740", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-476385"></a>
	      	
	      	<div id="li-comment-476385" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/9041eeb62b3b112100f3f847142d05af.jpg" srcset="https://secure.gravatar.com/avatar/9041eeb62b3b112100f3f847142d05af?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Manish Pandey</span>           
	                <span class="date">September 3, 2018 at 3:33 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-476385" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-476385">
				
				<p>Hi Adrian,<br>
I tried to run this code through commmand line. However, It asks me to 
give it two arguments. I tried many ways including giveing the path and 
file name, but It doesn’t run. Can you please make a short video 
regarding this? It would be a great help if you teach 1 more guy into 
image reconlgnition. Thanks in adbance</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-476385" onclick='return addComment.moveForm( "comment-476385", "476385", "respond", "6092" )' aria-label="Reply to Manish Pandey">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-476711"></a>
	      	
	      	<div id="li-comment-476711" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 5, 2018 at 8:59 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-476711" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-476711">
				
				<p>It sounds like you may not have experience in command line arguments. <a target="blank" href="https://www.pyimagesearch.com/2018/03/12/python-argparse-command-line-arguments/">Read this tutorial</a> and you’ll be all set and up to speed 🙂</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-476711" onclick='return addComment.moveForm( "comment-476711", "476711", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-476411"></a>
	      	
	      	<div id="li-comment-476411" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/71ccf6a41d4b87c6d2906aec9f5b875e.jpg" srcset="https://secure.gravatar.com/avatar/71ccf6a41d4b87c6d2906aec9f5b875e?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Muhammad Asyraaf</span>           
	                <span class="date">September 3, 2018 at 12:11 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-476411" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-476411">
				
				<p>Hello Adrian</p>
<p>when i run the code it shows that Import Error: no module named imutils.video<br>
Any idea on how to solve this issue?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-476411" onclick='return addComment.moveForm( "comment-476411", "476411", "respond", "6092" )' aria-label="Reply to Muhammad Asyraaf">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2 parent">
	    
	    	<a name="comment-476706"></a>
	      	
	      	<div id="li-comment-476706" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 5, 2018 at 8:55 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-476706" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-476706">
				
				<p>You need to install the imutils library:</p>
<p><code>$ pip install imutils</code></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-476706" onclick='return addComment.moveForm( "comment-476706", "476706", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-3 parent">
	    
	    	<a name="comment-477406"></a>
	      	
	      	<div id="li-comment-477406" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/71ccf6a41d4b87c6d2906aec9f5b875e.jpg" srcset="https://secure.gravatar.com/avatar/71ccf6a41d4b87c6d2906aec9f5b875e?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Asyraaf</span>           
	                <span class="date">September 11, 2018 at 4:34 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-477406" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-477406">
				
				<p>even after $ the pip install imutils<br>
i faced the same problem –<br>
   from imutils.video import VideoStream<br>
ImportError: No module named imutils.video</p>
<p>or do i need to reinstall all the stuff?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-477406" onclick='return addComment.moveForm( "comment-477406", "477406", "respond", "6092" )' aria-label="Reply to Asyraaf">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-4">
	    
	    	<a name="comment-477459"></a>
	      	
	      	<div id="li-comment-477459" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 11, 2018 at 8:02 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-477459" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-477459">
				
				<p>I don’t think you are installing “imutils” correctly. Run “pip 
freeze” and ensure “imutils” is listed in your set of installed Python 
packages.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-477459" onclick='return addComment.moveForm( "comment-477459", "477459", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt depth-2">
	    
	    	<a name="comment-486162"></a>
	      	
	      	<div id="li-comment-486162" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/fd8c579a45642bfd0c7a21a82b67cabc.jpg" srcset="https://secure.gravatar.com/avatar/fd8c579a45642bfd0c7a21a82b67cabc?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">NL</span>           
	                <span class="date">November 8, 2018 at 3:48 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-486162" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486162">
				
				<p>If you are using python3, then don’t forget to change “python…” to “python3…” to run the script.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486162" onclick='return addComment.moveForm( "comment-486162", "486162", "respond", "6092" )' aria-label="Reply to NL">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-476474"></a>
	      	
	      	<div id="li-comment-476474" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/b413ab76936919ff4a26a2b9257bd2e6.jpg" srcset="https://secure.gravatar.com/avatar/b413ab76936919ff4a26a2b9257bd2e6?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Natheeswari</span>           
	                <span class="date">September 4, 2018 at 12:13 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-476474" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-476474">
				
				<p>Hi Adrain</p>
<p>       Is it possible to identify a person with their names instead of having simply person with their confidence score.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-476474" onclick='return addComment.moveForm( "comment-476474", "476474", "respond", "6092" )' aria-label="Reply to Natheeswari">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-476698"></a>
	      	
	      	<div id="li-comment-476698" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 5, 2018 at 8:50 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-476698" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-476698">
				
				<p>Yes. See this tutorial on <a target="blank" href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/tomy@gmail.com" rel="nofollow">face recognition.</a></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-476698" onclick='return addComment.moveForm( "comment-476698", "476698", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-476509"></a>
	      	
	      	<div id="li-comment-476509" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/6754cd27b5f60d7b02e891eac987ac03.jpg" srcset="https://secure.gravatar.com/avatar/6754cd27b5f60d7b02e891eac987ac03?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Attila Pataki</span>           
	                <span class="date">September 4, 2018 at 5:17 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-476509" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-476509">
				
				<p>Hey,</p>
<p>congrats! I really like the projects your posting! </p>
<p>Because I recently got an Android phone, would it be possible to like
 run this real time detection code on a Samsung s8? Do you know what 
would be the best/easiest way to build an app and run it via smartphone?
 Thanks!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-476509" onclick='return addComment.moveForm( "comment-476509", "476509", "respond", "6092" )' aria-label="Reply to Attila Pataki">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-476691"></a>
	      	
	      	<div id="li-comment-476691" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">September 5, 2018 at 8:42 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-476691" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-476691">
				
				<p>OpenCV provides Java bindings for Android. I would suggest 
looking at the OpenCV documentation for more details. I personally don’t
 have any experience working with OpenCV + Android.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-476691" onclick='return addComment.moveForm( "comment-476691", "476691", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1">
	    
	    	<a name="comment-476623"></a>
	      	
	      	<div id="li-comment-476623" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/152092bb44ea083b712863468e7b2cad.jpg" srcset="https://secure.gravatar.com/avatar/152092bb44ea083b712863468e7b2cad?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">steven seung</span>           
	                <span class="date">September 5, 2018 at 2:39 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-476623" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-476623">
				
				<p>For Windows users running into the Can’t open 
ModelNetSSD_deploy.prototxt.txt or ModelNetSSD_deploy.caffemodel, you 
have to use cmd or powershell as an Administrator. That fixed the 
problem for me, classic windows problems 😉</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-476623" onclick='return addComment.moveForm( "comment-476623", "476623", "respond", "6092" )' aria-label="Reply to steven seung">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1">
	    
	    	<a name="comment-478977"></a>
	      	
	      	<div id="li-comment-478977" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/1f6aecc2c735101f3980737ba6e5a26b.jpg" srcset="https://secure.gravatar.com/avatar/1f6aecc2c735101f3980737ba6e5a26b?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">vipul</span>           
	                <span class="date">September 19, 2018 at 4:21 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-478977" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-478977">
				
				<p>is it workable for oflline video ? if yes then what changes i should do ??</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-478977" onclick='return addComment.moveForm( "comment-478977", "478977", "respond", "6092" )' aria-label="Reply to vipul">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1">
	    
	    	<a name="comment-479280"></a>
	      	
	      	<div id="li-comment-479280" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/771b6e7373f80e963fbafc8541426383.jpg" srcset="https://secure.gravatar.com/avatar/771b6e7373f80e963fbafc8541426383?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Anirudh soni</span>           
	                <span class="date">September 22, 2018 at 8:38 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-479280" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-479280">
				
				<p>HI<br>
May I know specifications of your laptop. I was doing the the same thing
 using haar cascade but it is lagging in my PC(8gb ram, i5 8th gen, 2gb 
AMD radeon 520 graphic card)</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-479280" onclick='return addComment.moveForm( "comment-479280", "479280", "respond", "6092" )' aria-label="Reply to Anirudh soni">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-480543"></a>
	      	
	      	<div id="li-comment-480543" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/370a904c236d4d1d0ea7ea010d5553e9.jpg" srcset="https://secure.gravatar.com/avatar/370a904c236d4d1d0ea7ea010d5553e9?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Soufiane</span>           
	                <span class="date">October 2, 2018 at 4:22 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-480543" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-480543">
				
				<p>Thank you it works really well</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-480543" onclick='return addComment.moveForm( "comment-480543", "480543", "respond", "6092" )' aria-label="Reply to Soufiane">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-481228"></a>
	      	
	      	<div id="li-comment-481228" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">October 8, 2018 at 10:32 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-481228" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-481228">
				
				<p>Great news Soufiane 🙂</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-481228" onclick='return addComment.moveForm( "comment-481228", "481228", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-483810"></a>
	      	
	      	<div id="li-comment-483810" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/327b05f3cfaa55e19ed92ae28ddeb62c.jpg" srcset="https://secure.gravatar.com/avatar/327b05f3cfaa55e19ed92ae28ddeb62c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Chetan Mahajan</span>           
	                <span class="date">October 24, 2018 at 7:53 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-483810" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-483810">
				
				<p>Thank you so much nice work…:)</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-483810" onclick='return addComment.moveForm( "comment-483810", "483810", "respond", "6092" )' aria-label="Reply to Chetan Mahajan">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-484489"></a>
	      	
	      	<div id="li-comment-484489" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">October 29, 2018 at 2:01 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-484489" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-484489">
				
				<p>Thanks Chetan, I’m glad you liked the blog post!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-484489" onclick='return addComment.moveForm( "comment-484489", "484489", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-484379"></a>
	      	
	      	<div id="li-comment-484379" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/74c2fbfd6669d2aaa8838f2f13f6c114.jpg" srcset="https://secure.gravatar.com/avatar/74c2fbfd6669d2aaa8838f2f13f6c114?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Shalaka Deo</span>           
	                <span class="date">October 29, 2018 at 6:57 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-484379" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-484379">
				
				<p>While executing the program i have some errors:<br>
the following arguments are required: -p /- ,-portotext, -m/ — model</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-484379" onclick='return addComment.moveForm( "comment-484379", "484379", "respond", "6092" )' aria-label="Reply to Shalaka Deo">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-484430"></a>
	      	
	      	<div id="li-comment-484430" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">October 29, 2018 at 1:08 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-484430" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-484430">
				
				<p>If you’re new to the terminal and command line arguments that’s okay, <a target="blank" href="https://www.pyimagesearch.com/2018/03/12/python-argparse-command-line-arguments/">but make sure you read this tutorial first.</a> From there you’ll be all set.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-484430" onclick='return addComment.moveForm( "comment-484430", "484430", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment odd alt depth-2">
	    
	    	<a name="comment-486160"></a>
	      	
	      	<div id="li-comment-486160" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/fd8c579a45642bfd0c7a21a82b67cabc.jpg" srcset="https://secure.gravatar.com/avatar/fd8c579a45642bfd0c7a21a82b67cabc?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">NL</span>           
	                <span class="date">November 8, 2018 at 3:44 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-486160" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-486160">
				
				<p>Copy everything between “$” and “[INFO]” (three lines in total) to run the script. I think you missed two lines.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-486160" onclick='return addComment.moveForm( "comment-486160", "486160", "respond", "6092" )' aria-label="Reply to NL">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-485646"></a>
	      	
	      	<div id="li-comment-485646" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/fb5816ba8c816ff29d8fdb88ddf06186.jpg" srcset="https://secure.gravatar.com/avatar/fb5816ba8c816ff29d8fdb88ddf06186?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">git-scientist</span>           
	                <span class="date">November 6, 2018 at 12:06 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-485646" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-485646">
				
				<p>As I saw in the comments you were going to cover object detection
 using Darknet too. Have you done anything on that so far? Thank you!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-485646" onclick='return addComment.moveForm( "comment-485646", "485646", "respond", "6092" )' aria-label="Reply to git-scientist">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2 parent">
	    
	    	<a name="comment-485751"></a>
	      	
	      	<div id="li-comment-485751" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 6, 2018 at 1:05 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-485751" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-485751">
				
				<p>The YOLO post will be publishing next week, stay tuned 🙂</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-485751" onclick='return addComment.moveForm( "comment-485751", "485751", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-3">
	    
	    	<a name="comment-485853"></a>
	      	
	      	<div id="li-comment-485853" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/fb5816ba8c816ff29d8fdb88ddf06186.jpg" srcset="https://secure.gravatar.com/avatar/fb5816ba8c816ff29d8fdb88ddf06186?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">git-scientist</span>           
	                <span class="date">November 6, 2018 at 8:35 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-485853" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-485853">
				
				<p>Adrien, it’s awesome, looking forward to it!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-485853" onclick='return addComment.moveForm( "comment-485853", "485853", "respond", "6092" )' aria-label="Reply to git-scientist">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-488518"></a>
	      	
	      	<div id="li-comment-488518" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/a9d78850f8516e91e6b17f9cc689e7ee.jpg" srcset="https://secure.gravatar.com/avatar/a9d78850f8516e91e6b17f9cc689e7ee?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Amar</span>           
	                <span class="date">November 22, 2018 at 10:09 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-488518" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-488518">
				
				<p>hey adrian i want to ask something, how to use only the class for car object detection? I just want to use this class only</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-488518" onclick='return addComment.moveForm( "comment-488518", "488518", "respond", "6092" )' aria-label="Reply to Amar">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2 parent">
	    
	    	<a name="comment-489021"></a>
	      	
	      	<div id="li-comment-489021" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 25, 2018 at 9:24 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-489021" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-489021">
				
				<p>You want to detect <em>just</em> the car class? If so, see <a target="blank" href="https://www.pyimagesearch.com/2018/05/14/a-gentle-guide-to-deep-learning-object-detection/">this tutorial</a> on how to filter object classes.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-489021" onclick='return addComment.moveForm( "comment-489021", "489021", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-3 parent">
	    
	    	<a name="comment-489893"></a>
	      	
	      	<div id="li-comment-489893" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/a9d78850f8516e91e6b17f9cc689e7ee.jpg" srcset="https://secure.gravatar.com/avatar/a9d78850f8516e91e6b17f9cc689e7ee?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Amar</span>           
	                <span class="date">November 29, 2018 at 10:29 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-489893" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-489893">
				
				<p>hi adrian what algorithm do you use for this object detection?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-489893" onclick='return addComment.moveForm( "comment-489893", "489893", "respond", "6092" )' aria-label="Reply to Amar">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-4">
	    
	    	<a name="comment-489983"></a>
	      	
	      	<div id="li-comment-489983" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 30, 2018 at 8:46 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-489983" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-489983">
				
				<p>The object detector used in this blog post is a Single Shot Detector (SSD).</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-489983" onclick='return addComment.moveForm( "comment-489983", "489983", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt depth-3 parent">
	    
	    	<a name="comment-491417"></a>
	      	
	      	<div id="li-comment-491417" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/4821974cf3e457a234bbdb398400e197.jpg" srcset="https://secure.gravatar.com/avatar/4821974cf3e457a234bbdb398400e197?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Maas</span>           
	                <span class="date">December 9, 2018 at 1:08 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-491417" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-491417">
				
				<p>Hi Adrian, at first thanks a lot for your work and tutorials. I’m
 new to all of this and actually just playing a little bit around.<br>
I would say that just ignoring specific results is only a “fake” 
solution. Wouldn’t it be more performant if the model is directly 
ignoring the classes (just looking for a subset of classes) instead of 
ignoring the results?<br>
Is there a trained model available for specific classes?<br>
Thanks!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-491417" onclick='return addComment.moveForm( "comment-491417", "491417", "respond", "6092" )' aria-label="Reply to Maas">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-4">
	    
	    	<a name="comment-491716"></a>
	      	
	      	<div id="li-comment-491716" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">December 11, 2018 at 12:52 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-491716" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-491716">
				
				<p>Yes, absolutely. What you’re referring to is called “fine-tuning” but it requires that you:</p>
<p>1. Know how to modify the FC heads of the network<br>
2. Replace them<br>
3. Fine-tune them on a dataset of just what you want to detect</p>
<p>For some people that is overkill. For others it is required for 
reasonable accuracy. For Amar’s original question filtering the classes 
would be sufficient.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-491716" onclick='return addComment.moveForm( "comment-491716", "491716", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-488692"></a>
	      	
	      	<div id="li-comment-488692" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/aaeb2c657a92aef05f527389c473cae3.jpg" srcset="https://secure.gravatar.com/avatar/aaeb2c657a92aef05f527389c473cae3?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Ibrahim</span>           
	                <span class="date">November 23, 2018 at 8:50 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-488692" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-488692">
				
				<p>@Adrian Rosebrock sir I got this message when I ran the command in terminal.<br>
error: argument -p/–prototxt is required. From where to include this parameter? please reply Thanks</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-488692" onclick='return addComment.moveForm( "comment-488692", "488692", "respond", "6092" )' aria-label="Reply to Ibrahim">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-489005"></a>
	      	
	      	<div id="li-comment-489005" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 25, 2018 at 9:12 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-489005" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-489005">
				
				<p>If you are new to command line arguments you need to read <a target="blank" href="https://www.pyimagesearch.com/2018/03/12/python-argparse-command-line-arguments/">this tutorial first.</a> Invest in your knowledge of argparse and command line arguments and you will then be able to run the script.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-489005" onclick='return addComment.moveForm( "comment-489005", "489005", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-489399"></a>
	      	
	      	<div id="li-comment-489399" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/3aa31e069f275f05d82e2d412a767e64.jpg" srcset="https://secure.gravatar.com/avatar/3aa31e069f275f05d82e2d412a767e64?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href="http://---/" rel="external nofollow" class="url">Arslan</a></span>           
	                <span class="date">November 27, 2018 at 8:52 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-489399" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-489399">
				
				<p>Hi Adrian !<br>
Very fine blog post . I was actually working on raspberry Pi than i came
 to know that it can only process 0.8 fps . what hardware should i 
choose to actually detect the high speed objects very smoothly . e.g a 
car moving at 70-100 mph</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-489399" onclick='return addComment.moveForm( "comment-489399", "489399", "respond", "6092" )' aria-label="Reply to Arslan">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-490036"></a>
	      	
	      	<div id="li-comment-490036" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">November 30, 2018 at 9:31 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-490036" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-490036">
				
				<p>You’ll want a more powerful machine for sure. If you want to go 
the embedded route try NVIDIA’s Jetson series. But I’d try to prototype 
with a normal desktop GPU first.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-490036" onclick='return addComment.moveForm( "comment-490036", "490036", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-490344"></a>
	      	
	      	<div id="li-comment-490344" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/85ff64fc5319dd3cbeb2aae77267ee00.jpg" srcset="https://secure.gravatar.com/avatar/85ff64fc5319dd3cbeb2aae77267ee00?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Yadhuvir Ram</span>           
	                <span class="date">December 2, 2018 at 12:22 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-490344" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-490344">
				
				<p>Hi Adrain!<br>
How to get voice output for the above code.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-490344" onclick='return addComment.moveForm( "comment-490344", "490344", "respond", "6092" )' aria-label="Reply to Yadhuvir Ram">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-490679"></a>
	      	
	      	<div id="li-comment-490679" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">December 4, 2018 at 10:07 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-490679" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-490679">
				
				<p>I don’t have any experience with text-to-speech Python library. 
I’m not sure what the best ones are but I know they do exist. I hope 
another reader can provide you with some suggestions.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-490679" onclick='return addComment.moveForm( "comment-490679", "490679", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-490594"></a>
	      	
	      	<div id="li-comment-490594" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/af66c94c932391b834bbb7af1118a9cd.jpg" srcset="https://secure.gravatar.com/avatar/af66c94c932391b834bbb7af1118a9cd?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">aung</span>           
	                <span class="date">December 4, 2018 at 3:06 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-490594" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-490594">
				
				<p>Hi sir,<br>
How to write caffemodel and prototext?<br>
What kind of softwre can open the caffemodel?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-490594" onclick='return addComment.moveForm( "comment-490594", "490594", "respond", "6092" )' aria-label="Reply to aung">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-490657"></a>
	      	
	      	<div id="li-comment-490657" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">December 4, 2018 at 9:38 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-490657" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-490657">
				
				<p>You don’t “write” the actual .caffemodel and .prototxt files — 
the Caffe deep learning toolkit is used to train a deep neural network 
to detect and recognize object classes. It sounds like you may be new to
 computer vision and object detection so I would recommend reading <a target="blank" href="https://www.pyimagesearch.com/2018/05/14/a-gentle-guide-to-deep-learning-object-detection/">this introductory guide</a> to help you get started.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-490657" onclick='return addComment.moveForm( "comment-490657", "490657", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-490861"></a>
	      	
	      	<div id="li-comment-490861" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/a2a7869edfb4321c77794d250f714923.jpg" srcset="https://secure.gravatar.com/avatar/a2a7869edfb4321c77794d250f714923?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href="http://spicydroid.weebly.com/" rel="external nofollow" class="url">Alex Flint</a></span>           
	                <span class="date">December 5, 2018 at 11:24 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-490861" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-490861">
				
				<p>hey adrian sir,<br>
     Sir I want to detect human objects from IR camera is it possible if yes will you please let me know</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-490861" onclick='return addComment.moveForm( "comment-490861", "490861", "respond", "6092" )' aria-label="Reply to Alex Flint">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-491001"></a>
	      	
	      	<div id="li-comment-491001" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">December 6, 2018 at 9:35 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-491001" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-491001">
				
				<p>I don’t have any tutorials on IR cameras and human detection but I
 will consider it for a future post. Thanks for the suggestion.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-491001" onclick='return addComment.moveForm( "comment-491001", "491001", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-490878"></a>
	      	
	      	<div id="li-comment-490878" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/a92663dffb8a097a32ccfaffa700ae57.jpg" srcset="https://secure.gravatar.com/avatar/a92663dffb8a097a32ccfaffa700ae57?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Maricarmen</span>           
	                <span class="date">December 5, 2018 at 2:54 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-490878" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-490878">
				
				<p>Thank u so mouch.<br>
How can i rezise the video from the output?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-490878" onclick='return addComment.moveForm( "comment-490878", "490878", "respond", "6092" )' aria-label="Reply to Maricarmen">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-490999"></a>
	      	
	      	<div id="li-comment-490999" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">December 6, 2018 at 9:34 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-490999" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-490999">
				
				<p>You can use either <code>cv2.resize</code> or <code>imutils.resize</code> to resize a frame.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-490999" onclick='return addComment.moveForm( "comment-490999", "490999", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1">
	    
	    	<a name="comment-490943"></a>
	      	
	      	<div id="li-comment-490943" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/eb3e699b3b92068fa6731432b0302220.jpg" srcset="https://secure.gravatar.com/avatar/eb3e699b3b92068fa6731432b0302220?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">NIKHIL JAISWAL</span>           
	                <span class="date">December 6, 2018 at 3:59 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-490943" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-490943">
				
				<p>Hi Sir,</p>
<p>I am new to Robotics field. I have to perform real time  recognition 
&amp; tracking of 3d textureless object. The objects are rectangular in 
shape and are of different colors. Therefore, I have to recognize the 
correct object based on colour.</p>
<p><a href="https://www.youtube.com/watch?v=l5aPjTNYcpc" rel="nofollow">https://www.youtube.com/watch?v=l5aPjTNYcpc</a> </p>
<p>Actually, I was looking at this challenge no 2. In this challenge, I 
want to implement the code for the drone to correctly recognize the 
brick. Can you please suggest some approaches which can be used for 
this?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-490943" onclick='return addComment.moveForm( "comment-490943", "490943", "respond", "6092" )' aria-label="Reply to NIKHIL JAISWAL">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-492967"></a>
	      	
	      	<div id="li-comment-492967" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/87f239f98796b5aeface78b1a567e15f.jpg" srcset="https://secure.gravatar.com/avatar/87f239f98796b5aeface78b1a567e15f?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Joe</span>           
	                <span class="date">December 19, 2018 at 1:45 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-492967" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-492967">
				
				<p>Adrian, I love reading your posts! Keep up the great work! I 
actually have referenced your code in an interview for a software 
development job! </p>
<p>One question on this topic, if I want to train my own models, do you have any recommendation on how I should go about that?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-492967" onclick='return addComment.moveForm( "comment-492967", "492967", "respond", "6092" )' aria-label="Reply to Joe">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-492968"></a>
	      	
	      	<div id="li-comment-492968" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">December 19, 2018 at 1:46 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-492968" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-492968">
				
				<p>Thanks Joe!</p>
<p>As far as training your own custom object detectors, I discuss Faster
 R-CNN, Single Shot Detector (SSDs), and YOLO, both the theory and how 
to train them from scratch, inside my book, <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python.</a> Be sure to take a look, I have no doubt the book will help you train your own detectors.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-492968" onclick='return addComment.moveForm( "comment-492968", "492968", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-493243"></a>
	      	
	      	<div id="li-comment-493243" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/54817b7fa3fc795a92d017bfd7cb9211.jpg" srcset="https://secure.gravatar.com/avatar/54817b7fa3fc795a92d017bfd7cb9211?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Calista Yinygu</span>           
	                <span class="date">December 22, 2018 at 4:38 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-493243" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-493243">
				
				<p>Hi Adrian, </p>
<p>Thanks so much for the codes, this is really  helpful in advancing newbies like me in advancing AI adoption 🙂 </p>
<p>I will like to ask if I were to do tracking after the object 
detection in your code, will it help to decrease the computational load?</p>
<p>Thanks<br>
Best,<br>
Calista</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-493243" onclick='return addComment.moveForm( "comment-493243", "493243", "respond", "6092" )' aria-label="Reply to Calista Yinygu">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-493861"></a>
	      	
	      	<div id="li-comment-493861" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">December 27, 2018 at 10:54 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-493861" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-493861">
				
				<p>Your intuition is correct but there is a balance you need to strike between detection and tracking. Refer to <a target="blank" href="https://www.pyimagesearch.com/2018/08/13/opencv-people-counter/">this tutorial</a> for a practical example.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-493861" onclick='return addComment.moveForm( "comment-493861", "493861", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-494589"></a>
	      	
	      	<div id="li-comment-494589" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/5b2ab73dd8e72c97461ce0240030aa2f.jpg" srcset="https://secure.gravatar.com/avatar/5b2ab73dd8e72c97461ce0240030aa2f?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Abhijeet</span>           
	                <span class="date">January 3, 2019 at 3:06 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-494589" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-494589">
				
				<p>Hi Thanks for this wonderful explanation but i have one doubt you
 declared class above for some objects but this module didn’t detect 
cell phone ,pen i mean if want add lots objects name<br>
inside class then how can i do that please tell me.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-494589" onclick='return addComment.moveForm( "comment-494589", "494589", "respond", "6092" )' aria-label="Reply to Abhijeet">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-494826"></a>
	      	
	      	<div id="li-comment-494826" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 5, 2019 at 8:54 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-494826" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-494826">
				
				<p>Are you SSH’ing into your system? If so, make sure you enable X11 forwarding:</p>
<p><code>$ ssh -X user@your_ip_address</code></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-494826" onclick='return addComment.moveForm( "comment-494826", "494826", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-494771"></a>
	      	
	      	<div id="li-comment-494771" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/81ef294bd7c0ba6706a9061d8ee076a1.jpg" srcset="https://secure.gravatar.com/avatar/81ef294bd7c0ba6706a9061d8ee076a1?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Gunjan Singh</span>           
	                <span class="date">January 5, 2019 at 2:31 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-494771" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-494771">
				
				<p>Thank you for your blog,</p>
<p>I wanted to know whether same code can be used for detecting Helmet on a bikers in traffic scenario (with or without helmet)</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-494771" onclick='return addComment.moveForm( "comment-494771", "494771", "respond", "6092" )' aria-label="Reply to Gunjan Singh">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-494800"></a>
	      	
	      	<div id="li-comment-494800" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 5, 2019 at 8:35 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-494800" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-494800">
				
				<p>I would recommend using a <a target="blank" href="https://www.pyimagesearch.com/2018/02/26/face-detection-with-opencv-and-deep-learning/">face detector</a> and then training a custom helmet vs. no helmet classification model for the face and head region.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-494800" onclick='return addComment.moveForm( "comment-494800", "494800", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-495083"></a>
	      	
	      	<div id="li-comment-495083" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/7506c395a79bf91d325b68c8fbb666ef.jpg" srcset="https://secure.gravatar.com/avatar/7506c395a79bf91d325b68c8fbb666ef?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Muharrem</span>           
	                <span class="date">January 8, 2019 at 3:29 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-495083" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-495083">
				
				<p>Hello, Adrian,</p>
<p>Thanks for the great article series.<br>
I’m new to opencv-python. I follow your articles with interest and try to apply them.<br>
Wabcam opens when I run the codes, but writes the object or the person 
into 8-10 boxes. Although I’m the only one on the screen, he sees me as 
many people. He marks and names a single chair many times. I couldn’t 
figure out the problem. Can you help me?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-495083" onclick='return addComment.moveForm( "comment-495083", "495083", "respond", "6092" )' aria-label="Reply to Muharrem">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2 parent">
	    
	    	<a name="comment-495107"></a>
	      	
	      	<div id="li-comment-495107" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 8, 2019 at 6:38 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-495107" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-495107">
				
				<p>It sounds like the object detector is simply reporting incorrect 
results. It’s hard to say what the issues is without seeing your input 
images or video but my guess is that the OpenCV object detector was not 
trained on images similar to what your images are. </p>
<p>What you’ll find out in your studies is that computer vision 
algorithms are not magic. They do not work 100% of the time. In fact, 
many will work only in specific conditions.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-495107" onclick='return addComment.moveForm( "comment-495107", "495107", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-3 parent">
	    
	    	<a name="comment-495152"></a>
	      	
	      	<div id="li-comment-495152" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/7506c395a79bf91d325b68c8fbb666ef.jpg" srcset="https://secure.gravatar.com/avatar/7506c395a79bf91d325b68c8fbb666ef?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Muharrem</span>           
	                <span class="date">January 8, 2019 at 9:09 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-495152" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-495152">
				
				<p>Thanks for your time, my teacher,<br>
In the form of a short video and I wanted to throw a picture as your mail.<br>
Maybe my problem is better understood.</p>
<p>Also, can you open up a little bit more than you say ” …my guess is 
that the OpenCV object detector was not trained on images similar to 
what your images are. ”?</p>
<p>Can you tell me exactly what I need to do?<br>
In the form of instructions respectively.</p>
<p>I am grateful to you.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-495152" onclick='return addComment.moveForm( "comment-495152", "495152", "respond", "6092" )' aria-label="Reply to Muharrem">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-4">
	    
	    	<a name="comment-495953"></a>
	      	
	      	<div id="li-comment-495953" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 11, 2019 at 10:07 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-495953" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-495953">
				
				<p>Hey Muharrem — it would be a good to understand what your current
 experience level is with computer vision and deep learning. Could you 
tell me a bit more about your experience level?</p>
<p>My gut tells me you are likely new to CV and DL, which is totally okay, but I recommend you work through <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python.</a>
 Inside the book I teach you the fundamentals of deep learning and 
machine learning, eventually working all the way up to training your own
 custom object detectors on your own datasets. Be sure to take a look, 
I’m confident it will help you with your projects.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-495953" onclick='return addComment.moveForm( "comment-495953", "495953", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-496616"></a>
	      	
	      	<div id="li-comment-496616" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/9f0b78b3c86c1bee3a5eaad4700c97a3.jpg" srcset="https://secure.gravatar.com/avatar/9f0b78b3c86c1bee3a5eaad4700c97a3?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">redhwan nasser</span>           
	                <span class="date">January 16, 2019 at 8:54 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-496616" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-496616">
				
				<p>Hello, Adrian,<br>
Thanks for your time, my teacher,</p>
<p>can I combine this code with  <a href="https://www.pyimagesearch.com/2018/06/18/face-recognition-with-opencv-python-and-deep-learning/" rel="nofollow">https://www.pyimagesearch.com/2018/06/18/face-recognition-with-opencv-python-and-deep-learning/</a> ?</p>
<p>I need to delete all data except data of the person and add it new 
data(features of human) such as  face recognition and color of clothes 
recognition </p>
<p>can I make it or not?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-496616" onclick='return addComment.moveForm( "comment-496616", "496616", "respond", "6092" )' aria-label="Reply to redhwan nasser">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-496624"></a>
	      	
	      	<div id="li-comment-496624" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 16, 2019 at 9:26 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-496624" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-496624">
				
				<p>Yes, you can combine the scripts. First detect faces and then 
detect the full body. The face of the person should lay in the region of
 the detected body, that way you  can associate a face with the body.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-496624" onclick='return addComment.moveForm( "comment-496624", "496624", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-497132"></a>
	      	
	      	<div id="li-comment-497132" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/4ee663a97d9607be060986e7c895dc65.jpg" srcset="https://secure.gravatar.com/avatar/4ee663a97d9607be060986e7c895dc65?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Nihar</span>           
	                <span class="date">January 20, 2019 at 2:28 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-497132" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-497132">
				
				<p>Hi I want to know how can i add more different types of objects, I
 have datasets of objects made but I dont know how to modify the above 
code on their basis.<br>
Please help me out here….</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-497132" onclick='return addComment.moveForm( "comment-497132", "497132", "respond", "6092" )' aria-label="Reply to Nihar">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-497442"></a>
	      	
	      	<div id="li-comment-497442" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 22, 2019 at 9:32 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-497442" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-497442">
				
				<p>I answer that exact question inside my <a target="blank" href="https://www.pyimagesearch.com/2018/05/14/a-gentle-guide-to-deep-learning-object-detection/">gentle guide to deep learning object detection.</a></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-497442" onclick='return addComment.moveForm( "comment-497442", "497442", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-497228"></a>
	      	
	      	<div id="li-comment-497228" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/dc359afbeab04122548046d6da2de6fa.jpg" srcset="https://secure.gravatar.com/avatar/dc359afbeab04122548046d6da2de6fa?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Siva</span>           
	                <span class="date">January 21, 2019 at 1:53 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-497228" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-497228">
				
				<p>Hello Adrian…<br>
Thanks for your time.<br>
Please let us know what are the changes to be done in the code to detect
 only vehicle i.e car etc.., but should not any other objects.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-497228" onclick='return addComment.moveForm( "comment-497228", "497228", "respond", "6092" )' aria-label="Reply to Siva">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-497435"></a>
	      	
	      	<div id="li-comment-497435" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 22, 2019 at 9:28 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-497435" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-497435">
				
				<p>I show you how to do exactly that <a target="blank" href="https://www.pyimagesearch.com/2018/05/14/a-gentle-guide-to-deep-learning-object-detection/">in this blog post.</a></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-497435" onclick='return addComment.moveForm( "comment-497435", "497435", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-497373"></a>
	      	
	      	<div id="li-comment-497373" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/e95e793beb13f70b0a6db45b1f4bfbbb.jpg" srcset="https://secure.gravatar.com/avatar/e95e793beb13f70b0a6db45b1f4bfbbb?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Divya pai</span>           
	                <span class="date">January 22, 2019 at 5:13 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-497373" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-497373">
				
				<p>error: the following arguments are required: -p/–prototxt, -m/–model</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-497373" onclick='return addComment.moveForm( "comment-497373", "497373", "respond", "6092" )' aria-label="Reply to Divya pai">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-497407"></a>
	      	
	      	<div id="li-comment-497407" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 22, 2019 at 9:04 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-497407" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-497407">
				
				<p>You need to supply the <a target="blank" href="https://www.pyimagesearch.com/2018/03/12/python-argparse-command-line-arguments/">command line arguments</a> to the script.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-497407" onclick='return addComment.moveForm( "comment-497407", "497407", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-497608"></a>
	      	
	      	<div id="li-comment-497608" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/85ff64fc5319dd3cbeb2aae77267ee00.jpg" srcset="https://secure.gravatar.com/avatar/85ff64fc5319dd3cbeb2aae77267ee00?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Yadhuvir</span>           
	                <span class="date">January 23, 2019 at 10:29 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-497608" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-497608">
				
				<p>Hello Adrian<br>
Can I get more number of classes for the above code</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-497608" onclick='return addComment.moveForm( "comment-497608", "497608", "respond", "6092" )' aria-label="Reply to Yadhuvir">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-497861"></a>
	      	
	      	<div id="li-comment-497861" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 25, 2019 at 7:22 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-497861" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-497861">
				
				<p>See Lines 22-25.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-497861" onclick='return addComment.moveForm( "comment-497861", "497861", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-498497"></a>
	      	
	      	<div id="li-comment-498497" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/7f6b96b39af47feb3bf7542e5f6da541.jpg" srcset="https://secure.gravatar.com/avatar/7f6b96b39af47feb3bf7542e5f6da541?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Hemanth</span>           
	                <span class="date">January 30, 2019 at 4:46 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-498497" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-498497">
				
				<p>Hi,</p>
<p>How to retrain mobilenet ssd caffe model ?<br>
Could you please give me the stepls?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-498497" onclick='return addComment.moveForm( "comment-498497", "498497", "respond", "6092" )' aria-label="Reply to Hemanth">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-498951"></a>
	      	
	      	<div id="li-comment-498951" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">February 1, 2019 at 7:17 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-498951" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-498951">
				
				<p>Hi Hemanth — I cover how to train and fine-tune SSDs, Faster R-CNNs, and RetinaNet inside my book, <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python.</a> I would suggest starting there.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-498951" onclick='return addComment.moveForm( "comment-498951", "498951", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-498499"></a>
	      	
	      	<div id="li-comment-498499" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/a6504bf698e459ee3e8b45e1062950ae.jpg" srcset="https://secure.gravatar.com/avatar/a6504bf698e459ee3e8b45e1062950ae?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Thennarasu</span>           
	                <span class="date">January 30, 2019 at 4:47 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-498499" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-498499">
				
				<p>Hi Adrian…<br>
Can you please tell me to train custom objects like  mobile phones which are not included in these classes.Thank you</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-498499" onclick='return addComment.moveForm( "comment-498499", "498499", "respond", "6092" )' aria-label="Reply to Thennarasu">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-498950"></a>
	      	
	      	<div id="li-comment-498950" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">February 1, 2019 at 7:14 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-498950" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-498950">
				
				<p>You’ll need to either train or fine-tune an existing object 
detector on your mobile phone class. I cover the basics of object 
detection <a target="blank" href="https://www.pyimagesearch.com/2018/05/14/a-gentle-guide-to-deep-learning-object-detection/">in this post.</a> I then teach you how to train your own custom object detectors inside <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python.</a></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-498950" onclick='return addComment.moveForm( "comment-498950", "498950", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-498963"></a>
	      	
	      	<div id="li-comment-498963" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/315754e10c2bc9c6dda9c21a7c06f269.jpg" srcset="https://secure.gravatar.com/avatar/315754e10c2bc9c6dda9c21a7c06f269?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href="http://javier/" rel="external nofollow" class="url">Javier</a></span>           
	                <span class="date">February 1, 2019 at 7:45 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-498963" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-498963">
				
				<p>Hi, can i ask you how you made your own caffemodel? How can i make mine?</p>
<p>Thank you very much. Excelent code</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-498963" onclick='return addComment.moveForm( "comment-498963", "498963", "respond", "6092" )' aria-label="Reply to Javier">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2 parent">
	    
	    	<a name="comment-499760"></a>
	      	
	      	<div id="li-comment-499760" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">February 5, 2019 at 9:47 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-499760" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-499760">
				
				<p>Thanks Javier, I’m glad you enjoyed the tutorial 🙂</p>
<p>You can learn how to train your own custom object detector inside <a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">Deep Learning for Computer Vision with Python.</a></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-499760" onclick='return addComment.moveForm( "comment-499760", "499760", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment even depth-3">
	    
	    	<a name="comment-502469"></a>
	      	
	      	<div id="li-comment-502469" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/c3c1985192126ac6dbe2367f6fec0bde.jpg" srcset="https://secure.gravatar.com/avatar/c3c1985192126ac6dbe2367f6fec0bde?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Javier</span>           
	                <span class="date">February 20, 2019 at 10:17 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-502469" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-502469">
				
				<p>Thanks!!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-502469" onclick='return addComment.moveForm( "comment-502469", "502469", "respond", "6092" )' aria-label="Reply to Javier">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1">
	    
	    	<a name="comment-499004"></a>
	      	
	      	<div id="li-comment-499004" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/ed6c7c6d99b0540a11873e638c382269.jpg" srcset="https://secure.gravatar.com/avatar/ed6c7c6d99b0540a11873e638c382269?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Paulo</span>           
	                <span class="date">February 1, 2019 at 1:19 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-499004" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-499004">
				
				<p>Hi Adrian,</p>
<p>How do I measure accuracy and recall rates? I can not quantify the 
TP, FP, TN, and FN values of my pre-trained model with MobileNet SSD. 
Please, help me.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-499004" onclick='return addComment.moveForm( "comment-499004", "499004", "respond", "6092" )' aria-label="Reply to Paulo">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1 parent">
	    
	    	<a name="comment-499307"></a>
	      	
	      	<div id="li-comment-499307" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/66d63dbfcd17ba2c1e4f279167a41ca2.jpg" srcset="https://secure.gravatar.com/avatar/66d63dbfcd17ba2c1e4f279167a41ca2?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href="http://na/" rel="external nofollow" class="url">Rajat</a></span>           
	                <span class="date">February 3, 2019 at 6:10 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-499307" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-499307">
				
				<p>Hello Adrian,<br>
First of all, AWESOME WORK MAN !!!<br>
Every single blog of yours is just great !!!<br>
I had a question regarding this tutorial, let’s say we want to save the 
image of the object that has been detected, how can that be done ? Can 
cv2.imwrite can be used ? if yes then how ?</p>
<p>Cheers Man !</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-499307" onclick='return addComment.moveForm( "comment-499307", "499307", "respond", "6092" )' aria-label="Reply to Rajat">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment odd alt depth-2 parent">
	    
	    	<a name="comment-499308"></a>
	      	
	      	<div id="li-comment-499308" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/66d63dbfcd17ba2c1e4f279167a41ca2.jpg" srcset="https://secure.gravatar.com/avatar/66d63dbfcd17ba2c1e4f279167a41ca2?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href="http://na/" rel="external nofollow" class="url">Rajat</a></span>           
	                <span class="date">February 3, 2019 at 6:24 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-499308" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-499308">
				
				<p>Nevermind Adrian,<br>
Did it using the following code:<br>
                image = frame[startX:endX,startY:endX]<br>
                cv2.imwrite(“detected.png”, image)</p>
<p>Posted the code if anyone else needs help.<br>
Cheers !</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-499308" onclick='return addComment.moveForm( "comment-499308", "499308", "respond", "6092" )' aria-label="Reply to Rajat">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-3">
	    
	    	<a name="comment-499740"></a>
	      	
	      	<div id="li-comment-499740" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">February 5, 2019 at 9:31 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-499740" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-499740">
				
				<p>Nice job Rajat!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-499740" onclick='return addComment.moveForm( "comment-499740", "499740", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-502064"></a>
	      	
	      	<div id="li-comment-502064" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/509ca93a77b6b74aa830ae9d68845b41.jpg" srcset="https://secure.gravatar.com/avatar/509ca93a77b6b74aa830ae9d68845b41?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Bhushan</span>           
	                <span class="date">February 18, 2019 at 12:55 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-502064" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-502064">
				
				<p>How can I upgrade the OpenCv version because it is not working on 3.2.0?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-502064" onclick='return addComment.moveForm( "comment-502064", "502064", "respond", "6092" )' aria-label="Reply to Bhushan">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-502513"></a>
	      	
	      	<div id="li-comment-502513" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">February 20, 2019 at 12:27 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-502513" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-502513">
				
				<p>You can follow my <a target="blank" href="https://www.pyimagesearch.com/opencv-tutorials-resources-guides/">OpenCV install guides</a> to help you get the latest version of OpenCV installed.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-502513" onclick='return addComment.moveForm( "comment-502513", "502513", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-503001"></a>
	      	
	      	<div id="li-comment-503001" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/dc895f859c7f187e6f9907ffae70d12a.jpg" srcset="https://secure.gravatar.com/avatar/dc895f859c7f187e6f9907ffae70d12a?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">pranav m</span>           
	                <span class="date">February 23, 2019 at 5:29 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-503001" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-503001">
				
				<p>hii sir,<br>
  insted of showing labels in the box, is there any way to get that label as audio output?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-503001" onclick='return addComment.moveForm( "comment-503001", "503001", "respond", "6092" )' aria-label="Reply to pranav m">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-503750"></a>
	      	
	      	<div id="li-comment-503750" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">February 27, 2019 at 6:16 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-503750" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-503750">
				
				<p>Take a look at text-to-speech libraries. Google’s gTTS is a good one.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-503750" onclick='return addComment.moveForm( "comment-503750", "503750", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-503136"></a>
	      	
	      	<div id="li-comment-503136" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/911c68b1f55c738c2cd67b07ab691a50.jpg" srcset="https://secure.gravatar.com/avatar/911c68b1f55c738c2cd67b07ab691a50?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Hailey</span>           
	                <span class="date">February 24, 2019 at 1:32 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-503136" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-503136">
				
				<p>hello adrian,<br>
I am new to computer vision. Instead of video, i want the pi camera to 
take a picture, process image and detect objects on image. What should i
 change in the codes?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-503136" onclick='return addComment.moveForm( "comment-503136", "503136", "respond", "6092" )' aria-label="Reply to Hailey">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-503743"></a>
	      	
	      	<div id="li-comment-503743" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">February 27, 2019 at 6:08 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-503743" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-503743">
				
				<p>If you are new to the world of computer vision and image processing I would suggest you first read through <a target="blank" href="https://www.pyimagesearch.com/practical-python-opencv/">Practical Python and OpenCV</a>
 so you can learn the basics first. I teach you how to perform face 
detection, determine the (x, y)-coordinates, and save the image. Start 
there first and from there you’ll be able to graduate to more advanced 
topics.</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-503743" onclick='return addComment.moveForm( "comment-503743", "503743", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-even depth-1 parent">
	    
	    	<a name="comment-503928"></a>
	      	
	      	<div id="li-comment-503928" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/49f15676848ed2217aff5da953bac38a.jpg" srcset="https://secure.gravatar.com/avatar/49f15676848ed2217aff5da953bac38a?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href="http://i-ssp.id/" rel="external nofollow" class="url">faqih</a></span>           
	                <span class="date">February 28, 2019 at 1:56 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-503928" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-503928">
				
				<p>wow that is amazing. but how can i show the output to the browser so i can access it from different IP (not from console)?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-503928" onclick='return addComment.moveForm( "comment-503928", "503928", "respond", "6092" )' aria-label="Reply to faqih">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-504018"></a>
	      	
	      	<div id="li-comment-504018" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">February 28, 2019 at 1:42 pm</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-504018" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-504018">
				
				<p>I’ll be covering that exact question in my upcoming Computer Vision + Raspberry Pi book, stay tuned!</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-504018" onclick='return addComment.moveForm( "comment-504018", "504018", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1 parent">
	    
	    	<a name="comment-504924"></a>
	      	
	      	<div id="li-comment-504924" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/5cb335bb72e870154b22d020d5e7b9b4.jpg" srcset="https://secure.gravatar.com/avatar/5cb335bb72e870154b22d020d5e7b9b4?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Chitrarth Patel</span>           
	                <span class="date">March 5, 2019 at 5:48 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-504924" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-504924">
				
				<p>in MobileNet we have 90 classes, so can we use all the 90 classes? and how?</p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-504924" onclick='return addComment.moveForm( "comment-504924", "504924", "respond", "6092" )' aria-label="Reply to Chitrarth Patel">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-504959"></a>
	      	
	      	<div id="li-comment-504959" class="comment-container">
	      	
					                <div class="avatar"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c_002.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" width="40" height="40"></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">March 5, 2019 at 8:28 am</span>
	                <span class="perma"><a href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#comment-504959" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry" id="comment-504959">
				
				<p>It depends on what the network was trained on. This network was trained on a subset of the COCO dataset. You might want to try <a target="blank" href="https://www.pyimagesearch.com/2018/11/12/yolo-object-detection-with-opencv/">this YOLO + OpenCV model.</a></p>
		            
										
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="#comment-504959" onclick='return addComment.moveForm( "comment-504959", "504959", "respond", "6092" )' aria-label="Reply to Adrian Rosebrock">Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
			</ol>
		 				 	<h3 id="comments-title">Trackbacks/Pingbacks</h3>
			 	<ol class="commentlist">
						
		<li id="comment-437722">
			<span class="author"><a href="https://www.pyimagesearch.com/2017/10/16/raspberry-pi-deep-learning-object-detection-with-opencv/" rel="external nofollow" class="url">Raspberry Pi: Deep learning object detection with OpenCV - PyImageSearch</a></span> - 
			<span class="date">October 16, 2017</span>
			<span class="pingcontent"><p>[…] few weeks ago I demonstrated how to perform real-time object detection using deep learning and OpenCV on a standard […]</p>
</span>
</li><!-- #comment-## -->
				</ol>
			</div>

	<div id="respond" class="comment-respond">
		<h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/#respond" style="display:none;">Click here to cancel reply.</a></small></h3>			<form action="https://www.pyimagesearch.com/wp-comments-post.php" method="post" id="commentform" class="comment-form">
				<p class="comment-form-comment"><label class="hide" for="comment">Comment</label> <textarea tabindex="4" id="comment" name="comment" cols="50" rows="10" maxlength="65525" aria-required="true" required="required"></textarea></p><p class="comment-form-author"><input id="author" name="author" type="text" class="txt" tabindex="1" size="30" aria-required="true"><label for="author">Name <span class="required">(required)</span></label> </p>
<p class="comment-form-email"><input id="email" name="email" type="text" class="txt" tabindex="2" size="30" aria-required="true"><label for="email">Email (will not be published) <span class="required">(required)</span></label> </p>
<p class="comment-form-url"><input id="url" name="url" type="text" class="txt" tabindex="3" size="30"><label for="url">Website</label></p>
<p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Submit Comment"> <input type="hidden" name="comment_post_ID" value="6092" id="comment_post_ID">
<input type="hidden" name="comment_parent" id="comment_parent" value="0">
</p><p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="5bfd42c726"></p><p style="display: none;"></p>			<input type="hidden" id="ak_js" name="ak_js" value="1553197523081"></form>
			</div><!-- #respond -->
	     
            </section><!-- /#main -->
                
            <aside id="sidebar">
<div id="woo_search-2" class="widget widget_woo_search"><div class="search_main">
    <form method="get" class="searchform" action="https://www.pyimagesearch.com/">
        <input type="text" class="field s" name="s" value="Search..." onfocus="if (this.value == 'Search...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search...';}">
                <button type="submit" class="icon-search submit" name="submit" value="Search"></button>
    </form>    
    <div class="fix"></div>
</div>
</div><div id="text-7" class="widget widget_text"><h3>Resource Guide (it’s totally free).</h3>			<div class="textwidget"><a target="_blank" href="https://app.monstercampaigns.com/c/mdoijtrmex7bpm0rp2hn/" class="manual-optin-trigger" data-optin-slug="mdoijtrmex7bpm0rp2hn"><img title="Get your FREE 17-page Computer Vision and Deep Learning Resource Guide PDF" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/computer_vision_deep_learning_resource_guide_cover.png" style="padding-right: 10px; width: 105px; float: left;"></a>
<p>
Get your <strong>FREE 17 page Computer Vision, OpenCV, and Deep Learning Resource Guide PDF.</strong> Inside you'll find my hand-picked tutorials, books, courses, and libraries to help you master CV and DL.
</p>
<div style="clear: left;"></div>
<center><a target="_blank" href="https://app.monstercampaigns.com/c/mdoijtrmex7bpm0rp2hn/" style="color: rgb(255, 255, 255); text-decoration: none; font-family: Helvetica, Arial, sans-serif; font-weight: bold; font-size: 16px; line-height: 20px; padding: 10px; display: inline-block; max-width: 300px; border-radius: 5px; text-shadow: rgba(0, 0, 0, 0.247059) 0px -1px 1px; box-shadow: rgba(255, 255, 255, 0.498039) 0px 1px 3px inset, rgba(0, 0, 0, 0.498039) 0px 1px 3px; background: #DF4B4B;">Download for Free!</a></center></div>
		</div><div id="text-9" class="widget widget_text"><h3>Deep Learning for Computer Vision with Python Book — OUT NOW!</h3>			<div class="textwidget"><a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/"><img title="Deep Learning with Computer Vision and Python Kickstarter" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/dl_for_cv_cover.png" style="padding-bottom: 5px; width: 250px;" onclick="document.location='https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/'; return false;"></a>
<p>You're interested in deep learning and computer vision, <em>but you don't know how to get started.</em> Let me help. <strong><a target="blank" href="https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">My new book will teach you all you need to know about deep learning.</a></strong></p>
<p><input type="submit" value="Click here to master deep learning" style="background-color: #DF4B4B;" onclick="document.location='https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/'; return false;"></p></div>
		</div><div id="text-5" class="widget widget_text"><h3>You can detect faces in images &amp; video.</h3>			<div class="textwidget"><a href="https://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-face-detection" title="Practical Python and OpenCV"><img title="Learn how to detect faces in images and video" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/adrian_face_detection_sidebar.png" style="padding-bottom: 5px; width: 300px;" onclick="document.location='https://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-face-detection'; return false;"></a>
<p>
Are you interested in <strong>detecting faces in images &amp; video?</strong> But <strong>tired of Googling for tutorials</strong> that <em>never work?</em> Then let me help! I guarantee that my new book will turn you into a <strong>face detection ninja</strong> by the end of this weekend.
<a href="https://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-face-detection" title="Practical Python and OpenCV" onclick="document.location='https://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-face-detection'; return false;">Click here to give it a shot yourself.</a>
</p>
<p><input type="submit" value="Click here to master face detection" style="background-color: #DF4B4B;" onclick="document.location='https://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-face-detection'; return false;"></p></div>
		</div><div id="text-8" class="widget widget_text"><h3>PyImageSearch Gurus: NOW ENROLLING!</h3>			<div class="textwidget"><div id="pyimg_gurus_carousel_container" style="width: 300px; height: 310px; cursor: pointer;" onclick="document.location='https://www.pyimagesearch.com/pyimagesearch-gurus/?src=sidebar'; return false;">
	<div id="pyimg_gurus_carousel" style="width: 300px; height: 300px; background: rgba(0, 0, 0, 0) url(&quot;https://www.pyimagesearch.com/static/templates/pyimagesearch-gurus/images/gurus_carousel.jpg&quot;) no-repeat scroll 0px -600px; display: block;"></div>
</div>
<p style="margin-bottom: 8px;"><strong>The PyImageSearch Gurus course is <em>now enrolling!</em></strong> Inside the course you'll learn how to perform:</p>
<ul style="margin-bottom: 8px;">
	<li>Automatic License Plate Recognition (ANPR)</li>
	<li>Deep Learning</li>
	<li>Face Recognition</li>
	<li><em>and much more!</em></li>
</ul>
<p><strong>Click the button below to learn more about the course, take a tour, and get 10 (FREE) sample lessons</strong>.</p>
<p><input type="submit" value="Take a tour &amp; get 10 (free) lessons" style="background-color: #DF4B4B;" onclick="document.location='https://www.pyimagesearch.com/pyimagesearch-gurus/?src=sidebar'; return false;"></p></div>
		</div><div id="woo_blogauthorinfo-2" class="widget widget_woo_blogauthorinfo"><h3>Hello! I’m Adrian Rosebrock.</h3><span class="left"><img alt="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/02743529311d3b8babbaf6935670ec9c.jpg" srcset="https://secure.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=180&amp;d=mm&amp;r=g 2x" class="avatar avatar-90 photo" width="90" height="90"></span>
<p>I'm an entrepreneur and Ph.D who has launched two successful image search engines, <a target="blank" href="http://www.idmypill.com/">ID My Pill</a> and <a target="blank" href="http://www.chicengine.com/">Chic Engine</a>. I'm here to share my tips, tricks, and hacks I've learned along the way.</p>
<div class="fix"></div>
</div><div id="text-4" class="widget widget_text"><h3>Learn computer vision in a single weekend.</h3>			<div class="textwidget"><a href="https://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-single-weekend" title="Practical Python and OpenCV"><img title="Become an OpenCV guru" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/practical_python_and_opencv_2nd_cover.png" style="margin-left: 35px; padding-bottom: 15px; width: 215px;"></a>
<p>Want to learn computer vision &amp; OpenCV? I can teach you in a <strong>single weekend</strong>. I know. It sounds crazy, but it’s no joke. My new book is your <strong>guaranteed, quick-start guide</strong> to becoming an OpenCV Ninja. So why not give it a try? <a href="https://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-single-weekend" title="Practical Python and OpenCV">Click here to become a computer vision ninja.</a></p>
<p><input type="submit" value="Click here to become an OpenCV ninja" style="background-color: #DF4B4B;" onclick="document.location='https://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-single-weekend'; return false;"></p></div>
		</div><div id="text-3" class="widget widget_text"><h3>Subscribe via RSS</h3>			<div class="textwidget"><a target="blank" href="http://feeds.feedburner.com/Pyimagesearch"><img title="PyImageSearch RSS Feed" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/rss-icon.png" style="padding-right: 10px; float: left;"></a>
<p><strong>Never miss a post!</strong> Subscribe to the PyImageSearch RSS Feed and keep up to date with my image search engine tutorials, tips, and tricks</p></div>
		</div>
		<div id="woo_tabs-2" class="widget widget_woo_tabs"> 		<div id="tabs">

            <ul class="wooTabs">
                                <li class="popular"><a href="#tab-pop" class="selected">Popular</a></li>                                                            </ul>

            <div class="clear"></div>

            <div class="boxes box inside">

	            
                                <ul id="tab-pop" class="list" style="display: block;">
                    	<li>
				<a title="Raspbian Stretch: Install OpenCV 3 + Python on your Raspberry Pi" href="https://www.pyimagesearch.com/2017/09/04/raspbian-stretch-install-opencv-3-python-on-your-raspberry-pi/">Raspbian Stretch: Install OpenCV 3 + Python on your Raspberry Pi</a>
		<span class="meta">September 4, 2017</span>
		<div class="fix"></div>
	</li>
		<li>
				<a title="Install guide: Raspberry Pi 3 + Raspbian Jessie + OpenCV 3" href="https://www.pyimagesearch.com/2016/04/18/install-guide-raspberry-pi-3-raspbian-jessie-opencv-3/">Install guide: Raspberry Pi 3 + Raspbian Jessie + OpenCV 3</a>
		<span class="meta">April 18, 2016</span>
		<div class="fix"></div>
	</li>
		<li>
				<a title="Home surveillance and motion detection with the Raspberry Pi, Python, OpenCV, and Dropbox" href="https://www.pyimagesearch.com/2015/06/01/home-surveillance-and-motion-detection-with-the-raspberry-pi-python-and-opencv/">Home surveillance and motion detection with the Raspberry Pi, Python, OpenCV, and Dropbox</a>
		<span class="meta">June 1, 2015</span>
		<div class="fix"></div>
	</li>
		<li>
				<a title="Install OpenCV and Python on your Raspberry Pi 2 and B+" href="https://www.pyimagesearch.com/2015/02/23/install-opencv-and-python-on-your-raspberry-pi-2-and-b/">Install OpenCV and Python on your Raspberry Pi 2 and B+</a>
		<span class="meta">February 23, 2015</span>
		<div class="fix"></div>
	</li>
		<li>
				<a title="Ubuntu 16.04: How to install OpenCV" href="https://www.pyimagesearch.com/2016/10/24/ubuntu-16-04-how-to-install-opencv/">Ubuntu 16.04: How to install OpenCV</a>
		<span class="meta">October 24, 2016</span>
		<div class="fix"></div>
	</li>
		<li>
				<a title="Basic motion detection and tracking with Python and OpenCV" href="https://www.pyimagesearch.com/2015/05/25/basic-motion-detection-and-tracking-with-python-and-opencv/">Basic motion detection and tracking with Python and OpenCV</a>
		<span class="meta">May 25, 2015</span>
		<div class="fix"></div>
	</li>
		<li style="border-bottom: 0px none;">
				<a title="Real-time object detection with deep learning and OpenCV" href="https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/">Real-time object detection with deep learning and OpenCV</a>
		<span class="meta">September 18, 2017</span>
		<div class="fix"></div>
	</li>
	                </ul>
                                                                
            </div><!-- /.boxes -->

        </div><!-- /wooTabs -->

        </div>         </aside><!-- /#sidebar -->

		</div><!-- /#main-sidebar-container -->         

		
    </div><!-- /#content -->
	
    <!--#footer-widgets-container-->
    <div id="footer-widgets-container">
	</div><!--/#footer_widgets_container_end-->
    <!--#footer_container_start-->
    <div id="footer-container">
	<footer id="footer" class="col-full">

		
		<div id="copyright" class="col-left">
			Find me on <a target="blank" href="https://twitter.com/pyimagesearch" style="font-weight: bold; color: #FFFFFF;">Twitter</a>, <a target="blank" href="https://www.facebook.com/pyimagesearch" style="font-weight: bold; color: #FFFFFF;">Facebook</a>, and <a target="blank" href="http://www.linkedin.com/pub/adrian-rosebrock/2a/873/59b" style="font-weight: bold; color: #FFFFFF;">LinkedIn</a>.<br>
			<p>© 2019 PyImageSearch. All Rights Reserved. </p>		</div>

		<div id="credit" class="col-right">
		</div>

	</footer>

	    </div><!--/#footer_container_end-->

	</div><!-- /#inner-wrapper -->

</div><!-- /#wrapper -->

<div class="fix"></div><!--/.fix-->

<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-46641058-1', 'auto', {'allowLinker': true});
  ga('require', 'linker');
  ga('linker:autoLink', ['dpdcart.com']);
  ga('send', 'pageview');

</script>

<!-- -- Clicky ---->
<script src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/js" type="text/javascript"></script>
<script type="text/javascript">try{ clicky.init(101083980); }catch(e){}</script>

<!-- Drip -->
<script type="text/javascript">
  var _dcq = _dcq || [];
  var _dcs = _dcs || {}; 
  _dcs.account = '4768429';
  
  (function() {
    var dc = document.createElement('script');
    dc.type = 'text/javascript'; dc.async = true; 
    dc.src = '//tag.getdrip.com/4768429.js';
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(dc, s);
  })();
</script>

<script type="text/javascript">
  (function() {
    window._pa = window._pa || {};
    // _pa.orderId = "myOrderId"; // OPTIONAL: attach unique conversion identifier to conversions
    // _pa.revenue = "19.99"; // OPTIONAL: attach dynamic purchase values to conversions
    // _pa.productId = "myProductId"; // OPTIONAL: Include product ID for use with dynamic ads
    var pa = document.createElement('script'); pa.type = 'text/javascript'; pa.async = true;
    pa.src = ('https:' == document.location.protocol ? 'https:' : 'http:') + "//tag.perfectaudience.com/serve/54220efd7ab7f03f7e000043.js";
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(pa, s);

// visited blog tracking
window._pq = window._pq || [];
_pq.push(['track', 'visited blog']);
  })();
</script>

<!-- facebook -->
<script>
  !function(f,b,e,v,n,t,s)
  {if(f.fbq)return;n=f.fbq=function(){n.callMethod?
  n.callMethod.apply(n,arguments):n.queue.push(arguments)};
  if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
  n.queue=[];t=b.createElement(e);t.async=!0;
  t.src=v;s=b.getElementsByTagName(e)[0];
  s.parentNode.insertBefore(t,s)}(window, document,'script',
  'https://connect.facebook.net/en_US/fbevents.js');
  fbq('init', '1465896023527386');
  fbq('track', 'PageView');
</script>
<noscript><img height="1" width="1" style="display:none"
  src="https://www.facebook.com/tr?id=1465896023527386&ev=PageView&noscript=1"
/></noscript>
<!-- facebook -->

<!-- -- scroll to code ---->
<script type="text/javascript">
jQuery(document).ready(function(){
	jQuery("#scroll_to_code").click(function(event){
		event.preventDefault();
		jQuery('html, body').animate({scrollTop: jQuery('#post_downloads').offset().top}, 1000);
	});
});
</script>

<!-- gurus sidebar carousel -->
<script type="text/javascript">
	jQuery(document).ready(function(){
		GURUS_CAROUSEL_IDX = 1;

		window.setInterval(function(){
			jQuery("#pyimg_gurus_carousel").fadeOut(function(){
				GURUS_CAROUSEL_TOP = GURUS_CAROUSEL_IDX * -300;
				jQuery("#pyimg_gurus_carousel").css("background-position", "0px " + GURUS_CAROUSEL_TOP + "px");
				GURUS_CAROUSEL_IDX += 1;

				if (GURUS_CAROUSEL_IDX == 4){
					GURUS_CAROUSEL_IDX = 0;
				}
			}).delay(250).fadeIn();
		}, 5000);
	});
</script>
<!-- Woo Tabs Widget -->
<script type="text/javascript">
jQuery(document).ready(function(){
	// UL = .wooTabs
	// Tab contents = .inside

	var tag_cloud_class = '#tagcloud';

	//Fix for tag clouds - unexpected height before .hide()
	var tag_cloud_height = jQuery( '#tagcloud').height();

	jQuery( '.inside ul li:last-child').css( 'border-bottom','0px' ); // remove last border-bottom from list in tab content
	jQuery( '.wooTabs').each(function(){
		jQuery(this).children( 'li').children( 'a:first').addClass( 'selected' ); // Add .selected class to first tab on load
	});
	jQuery( '.inside > *').hide();
	jQuery( '.inside > *:first-child').show();

	jQuery( '.wooTabs li a').click(function(evt){ // Init Click funtion on Tabs

		var clicked_tab_ref = jQuery(this).attr( 'href' ); // Strore Href value

		jQuery(this).parent().parent().children( 'li').children( 'a').removeClass( 'selected' ); //Remove selected from all tabs
		jQuery(this).addClass( 'selected' );
		jQuery(this).parent().parent().parent().children( '.inside').children( '*').hide();

		jQuery( '.inside ' + clicked_tab_ref).fadeIn(500);

		 evt.preventDefault();

	})
})
</script>
<!-- This site is converting visitors into subscribers and customers with OptinMonster - https://optinmonster.com :: Campaign Title: Post-comment Opt-in --><script type="text/javascript" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/api.js" data-campaign="amffglsaxwjqih0cxwby" data-user="18464" data-env="production"></script><!-- / OptinMonster --><!-- This site is converting visitors into subscribers and customers with OptinMonster - https://optinmonster.com :: Campaign Title: CS: Template --><script type="text/javascript" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/api.js" data-campaign="tortsem7qkvyuxc4cyfi" data-user="18464" data-env="production"></script><!-- / OptinMonster --><!-- This site is converting visitors into subscribers and customers with OptinMonster - https://optinmonster.com :: Campaign Title: CS: Real-time Deep Learning Object Detection --><script type="text/javascript" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/api.js" data-campaign="ylunixkfzfx9zjt3o3nd" data-user="18464" data-env="production"></script><script type="text/javascript" async="" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/in.php"></script><!-- / OptinMonster --><!-- This site is converting visitors into subscribers and customers with OptinMonster - https://optinmonster.com :: Campaign Title: CVDL Resource Guide --><script type="text/javascript" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/api.js" data-campaign="mdoijtrmex7bpm0rp2hn" data-user="18464" data-env="production"></script><!-- / OptinMonster --><div style="position:absolute;overflow:hidden;clip:rect(0 0 0 0);height:1px;width:1px;margin:-1px;padding:0;border:0"><div class="omapi-shortcode-helper">[email]</div><div class="omapi-shortcode-parsed">[email]</div></div>		<script type="text/javascript">var amffglsaxwjqih0cxwby_shortcode = true;var tortsem7qkvyuxc4cyfi_shortcode = true;var ylunixkfzfx9zjt3o3nd_shortcode = true;var mdoijtrmex7bpm0rp2hn_shortcode = true;</script>
		<script type="text/javascript" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/69faf.js"></script>

<script type="text/javascript">
/* <![CDATA[ */
var wpcf7 = {"apiSettings":{"root":"https:\/\/www.pyimagesearch.com\/wp-json\/contact-form-7\/v1","namespace":"contact-form-7\/v1"},"recaptcha":{"messages":{"empty":"Please verify that you are not a robot."}},"cached":"1"};
/* ]]> */
</script>
<script type="text/javascript" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/0fef6.js"></script>

<script type="text/javascript">
/* <![CDATA[ */
var pyISjsAfterComment = {"function":"window._dcq = window._dcq || [];\r\nwindow._dcq.push([\"track\", \"Submitted a comment\"]);"};
/* ]]> */
</script>
<script type="text/javascript" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/15657.js"></script>

<script type="text/javascript">
/* <![CDATA[ */
var pyISOptinMonster = {"post_title":"Real-time object detection with deep learning and OpenCV","campaign_id":"tortsem7qkvyuxc4cyfi","form_image":"https:\/\/s3-us-west-2.amazonaws.com\/static.pyimagesearch.com\/optins\/cs_rt_dl_obj_det.png","drip_form_submission_url":"https:\/\/www.getdrip.com\/forms\/84507510\/submissions","drip_id":"84507510"};
/* ]]> */
</script>


<script type="text/javascript" src="Real-time%20object%20detection%20with%20deep%20learning%20and%20OpenCV%20-%20PyImageSearch_fichiers/fbab0.js"></script>

		<script type="text/javascript">var omapi_localized = { ajax: 'https://www.pyimagesearch.com/wp-admin/admin-ajax.php?optin-monster-ajax-route=1', nonce: 'c6720d8f8a', slugs: {"amffglsaxwjqih0cxwby":{"slug":"amffglsaxwjqih0cxwby","mailpoet":false},"tortsem7qkvyuxc4cyfi":{"slug":"tortsem7qkvyuxc4cyfi","mailpoet":false},"ylunixkfzfx9zjt3o3nd":{"slug":"ylunixkfzfx9zjt3o3nd","mailpoet":false},"mdoijtrmex7bpm0rp2hn":{"slug":"mdoijtrmex7bpm0rp2hn","mailpoet":false}} };</script>
		


<div id="om-amffglsaxwjqih0cxwby-holder"></div><div id="om-mdoijtrmex7bpm0rp2hn-holder"></div><div id="om-tortsem7qkvyuxc4cyfi-holder"></div><div id="om-ylunixkfzfx9zjt3o3nd-holder"></div><div class="drip-tab-container">
  <div id="drip-129969" class="drip-tab bottom right no-image classic">
    <div id="drip-header-129969" class="drip-header">
      <a href="#" id="drip-toggle-129969" class="drip-toggle">
        <h2 id="drip-teaser-129969">Free 17-day crash course on Computer Vision, OpenCV, and Deep Learning</h2>
        <span id="drip-tab-up-129969" class="drip-arrow up">
          <svg width="12px" height="8px" viewBox="1362 659 12 8" version="1.1" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink">
            <polygon id="right_angle" stroke="none" fill="#FFFFFF" fill-rule="evenodd" transform="translate(1368.000000, 662.703125) rotate(-90.000000) translate(-1368.000000, -662.703125) " points="1364.29688 667.296875 1368.89062 662.703125 1364.29688 658.109375 1365.70312 656.703125 1371.70312 662.703125 1365.70312 668.703125"></polygon>
          </svg>
        </span>
        <span id="drip-tab-down-129969" class="drip-arrow down" style="display: none"></span>
      </a>
    </div>

    <div id="drip-content-129969" class="drip-content drip-clearfix" style="height: auto; bottom: -684px;">
      <div id="drip-form-panel-129969" class="drip-panel" style="display: block;">
        <a id="drip-close-129969" class="drip-close">×</a>
        <h3 id="drip-content-header-129969">Free 17-day crash course on Computer Vision, OpenCV, and Deep Learning</h3>
        <div id="drip-scroll-129969" class="drip-scroll">
          <div class="drip-clearfix">
            
            <div class="drip-description"><strong>Interested in computer vision, OpenCV, and deep learning, but don't know where to start?</strong>&nbsp;Let me help. I've created a&nbsp;<em>free</em>,
 17-day crash course that is hand-tailored to give you the best possible
 introduction to computer vision and deep learning. Sound good? Enter 
your email below to get started.</div>
          </div>
          <form id="drip-form-129969">
            <div style="display: none">
              <input type="hidden" name="form_id" value="129969">
            </div>
            <dl class="no-labels">
              
                
                  <dt>Email Address</dt>
                  <dd class="drip-clearfix">
                    
                      <input type="email" name="fields[email]" placeholder="Email Address" class="drip-text-field">
                      <div id="drip-errors-for-email-129969" class="drip-errors"></div>
                    
                  </dd>
                
              
              
              <div style="display: none;" aria-hidden="true">
                <dt for="website">Website</dt>
                <dd>
                  <input type="text" id="website" name="website" placeholder="Website" class="drip-text-field" tabindex="-1" autocomplete="false">
                </dd>
              </div>
            </dl>
            <div class="form-controls">
              <input type="submit" name="submit" value="START MY EMAIL COURSE" id="drip-submit-129969" class="drip-submit-button">
            </div>
          </form>
        </div>
      </div>

      <div id="drip-success-panel-129969" class="drip-success drip-panel drip-clearfix" style="display: none">
        <a id="drip-hide-129969" class="drip-close">×</a>
        <h3>Almost there...</h3>
        <p class="drip-description">To start your free 17-day computer 
vision and deep learning crash course, confirm your email address by 
clicking the link in the email I just sent you.</p>
      </div>

      
    </div>
  </div>
</div></body></html>
<!--
Performance optimized by W3 Total Cache. Learn more: https://www.w3-edge.com/products/

Object Caching 49321/4754 objects using disk
Page Caching using disk: enhanced 
Minified using disk
Database Caching 18/37 queries in 0.094 seconds using disk

Served from: www.pyimagesearch.com @ 2019-03-21 14:33:47 by W3 Total Cache
-->